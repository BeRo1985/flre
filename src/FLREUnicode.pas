unit FLREUnicode;
{$ifdef fpc}
 {$mode delphi}
{$endif}
interface

uses FLRE;

type TFLREUnicodeBlock=record
      Name:TFLRERawByteString;
      FromChar,ToChar:longword;
     end;
const FLREUnicodeBlockCount=262;
      FLREUnicodeBlocks:array[0..261] of TFLREUnicodeBlock=(
       (Name:'Basic Latin';FromChar:0;ToChar:127),
       (Name:'Latin-1 Supplement';FromChar:128;ToChar:255),
       (Name:'Latin Extended-A';FromChar:256;ToChar:383),
       (Name:'Latin Extended-B';FromChar:384;ToChar:591),
       (Name:'IPA Extensions';FromChar:592;ToChar:687),
       (Name:'Spacing Modifier Letters';FromChar:688;ToChar:767),
       (Name:'Combining Diacritical Marks';FromChar:768;ToChar:879),
       (Name:'Greek and Coptic';FromChar:880;ToChar:1023),
       (Name:'Cyrillic';FromChar:1024;ToChar:1279),
       (Name:'Cyrillic Supplement';FromChar:1280;ToChar:1327),
       (Name:'Armenian';FromChar:1328;ToChar:1423),
       (Name:'Hebrew';FromChar:1424;ToChar:1535),
       (Name:'Arabic';FromChar:1536;ToChar:1791),
       (Name:'Syriac';FromChar:1792;ToChar:1871),
       (Name:'Arabic Supplement';FromChar:1872;ToChar:1919),
       (Name:'Thaana';FromChar:1920;ToChar:1983),
       (Name:'NKo';FromChar:1984;ToChar:2047),
       (Name:'Samaritan';FromChar:2048;ToChar:2111),
       (Name:'Mandaic';FromChar:2112;ToChar:2143),
       (Name:'Arabic Extended-A';FromChar:2208;ToChar:2303),
       (Name:'Devanagari';FromChar:2304;ToChar:2431),
       (Name:'Bengali';FromChar:2432;ToChar:2559),
       (Name:'Gurmukhi';FromChar:2560;ToChar:2687),
       (Name:'Gujarati';FromChar:2688;ToChar:2815),
       (Name:'Oriya';FromChar:2816;ToChar:2943),
       (Name:'Tamil';FromChar:2944;ToChar:3071),
       (Name:'Telugu';FromChar:3072;ToChar:3199),
       (Name:'Kannada';FromChar:3200;ToChar:3327),
       (Name:'Malayalam';FromChar:3328;ToChar:3455),
       (Name:'Sinhala';FromChar:3456;ToChar:3583),
       (Name:'Thai';FromChar:3584;ToChar:3711),
       (Name:'Lao';FromChar:3712;ToChar:3839),
       (Name:'Tibetan';FromChar:3840;ToChar:4095),
       (Name:'Myanmar';FromChar:4096;ToChar:4255),
       (Name:'Georgian';FromChar:4256;ToChar:4351),
       (Name:'Hangul Jamo';FromChar:4352;ToChar:4607),
       (Name:'Ethiopic';FromChar:4608;ToChar:4991),
       (Name:'Ethiopic Supplement';FromChar:4992;ToChar:5023),
       (Name:'Cherokee';FromChar:5024;ToChar:5119),
       (Name:'Unified Canadian Aboriginal Syllabics';FromChar:5120;ToChar:5759),
       (Name:'Ogham';FromChar:5760;ToChar:5791),
       (Name:'Runic';FromChar:5792;ToChar:5887),
       (Name:'Tagalog';FromChar:5888;ToChar:5919),
       (Name:'Hanunoo';FromChar:5920;ToChar:5951),
       (Name:'Buhid';FromChar:5952;ToChar:5983),
       (Name:'Tagbanwa';FromChar:5984;ToChar:6015),
       (Name:'Khmer';FromChar:6016;ToChar:6143),
       (Name:'Mongolian';FromChar:6144;ToChar:6319),
       (Name:'Unified Canadian Aboriginal Syllabics Extended';FromChar:6320;ToChar:6399),
       (Name:'Limbu';FromChar:6400;ToChar:6479),
       (Name:'Tai Le';FromChar:6480;ToChar:6527),
       (Name:'New Tai Lue';FromChar:6528;ToChar:6623),
       (Name:'Khmer Symbols';FromChar:6624;ToChar:6655),
       (Name:'Buginese';FromChar:6656;ToChar:6687),
       (Name:'Tai Tham';FromChar:6688;ToChar:6831),
       (Name:'Combining Diacritical Marks Extended';FromChar:6832;ToChar:6911),
       (Name:'Balinese';FromChar:6912;ToChar:7039),
       (Name:'Sundanese';FromChar:7040;ToChar:7103),
       (Name:'Batak';FromChar:7104;ToChar:7167),
       (Name:'Lepcha';FromChar:7168;ToChar:7247),
       (Name:'Ol Chiki';FromChar:7248;ToChar:7295),
       (Name:'Sundanese Supplement';FromChar:7360;ToChar:7375),
       (Name:'Vedic Extensions';FromChar:7376;ToChar:7423),
       (Name:'Phonetic Extensions';FromChar:7424;ToChar:7551),
       (Name:'Phonetic Extensions Supplement';FromChar:7552;ToChar:7615),
       (Name:'Combining Diacritical Marks Supplement';FromChar:7616;ToChar:7679),
       (Name:'Latin Extended Additional';FromChar:7680;ToChar:7935),
       (Name:'Greek Extended';FromChar:7936;ToChar:8191),
       (Name:'General Punctuation';FromChar:8192;ToChar:8303),
       (Name:'Superscripts and Subscripts';FromChar:8304;ToChar:8351),
       (Name:'Currency Symbols';FromChar:8352;ToChar:8399),
       (Name:'Combining Diacritical Marks for Symbols';FromChar:8400;ToChar:8447),
       (Name:'Letterlike Symbols';FromChar:8448;ToChar:8527),
       (Name:'Number Forms';FromChar:8528;ToChar:8591),
       (Name:'Arrows';FromChar:8592;ToChar:8703),
       (Name:'Mathematical Operators';FromChar:8704;ToChar:8959),
       (Name:'Miscellaneous Technical';FromChar:8960;ToChar:9215),
       (Name:'Control Pictures';FromChar:9216;ToChar:9279),
       (Name:'Optical Character Recognition';FromChar:9280;ToChar:9311),
       (Name:'Enclosed Alphanumerics';FromChar:9312;ToChar:9471),
       (Name:'Box Drawing';FromChar:9472;ToChar:9599),
       (Name:'Block Elements';FromChar:9600;ToChar:9631),
       (Name:'Geometric Shapes';FromChar:9632;ToChar:9727),
       (Name:'Miscellaneous Symbols';FromChar:9728;ToChar:9983),
       (Name:'Dingbats';FromChar:9984;ToChar:10175),
       (Name:'Miscellaneous Mathematical Symbols-A';FromChar:10176;ToChar:10223),
       (Name:'Supplemental Arrows-A';FromChar:10224;ToChar:10239),
       (Name:'Braille Patterns';FromChar:10240;ToChar:10495),
       (Name:'Supplemental Arrows-B';FromChar:10496;ToChar:10623),
       (Name:'Miscellaneous Mathematical Symbols-B';FromChar:10624;ToChar:10751),
       (Name:'Supplemental Mathematical Operators';FromChar:10752;ToChar:11007),
       (Name:'Miscellaneous Symbols and Arrows';FromChar:11008;ToChar:11263),
       (Name:'Glagolitic';FromChar:11264;ToChar:11359),
       (Name:'Latin Extended-C';FromChar:11360;ToChar:11391),
       (Name:'Coptic';FromChar:11392;ToChar:11519),
       (Name:'Georgian Supplement';FromChar:11520;ToChar:11567),
       (Name:'Tifinagh';FromChar:11568;ToChar:11647),
       (Name:'Ethiopic Extended';FromChar:11648;ToChar:11743),
       (Name:'Cyrillic Extended-A';FromChar:11744;ToChar:11775),
       (Name:'Supplemental Punctuation';FromChar:11776;ToChar:11903),
       (Name:'CJK Radicals Supplement';FromChar:11904;ToChar:12031),
       (Name:'Kangxi Radicals';FromChar:12032;ToChar:12255),
       (Name:'Ideographic Description Characters';FromChar:12272;ToChar:12287),
       (Name:'CJK Symbols and Punctuation';FromChar:12288;ToChar:12351),
       (Name:'Hiragana';FromChar:12352;ToChar:12447),
       (Name:'Katakana';FromChar:12448;ToChar:12543),
       (Name:'Bopomofo';FromChar:12544;ToChar:12591),
       (Name:'Hangul Compatibility Jamo';FromChar:12592;ToChar:12687),
       (Name:'Kanbun';FromChar:12688;ToChar:12703),
       (Name:'Bopomofo Extended';FromChar:12704;ToChar:12735),
       (Name:'CJK Strokes';FromChar:12736;ToChar:12783),
       (Name:'Katakana Phonetic Extensions';FromChar:12784;ToChar:12799),
       (Name:'Enclosed CJK Letters and Months';FromChar:12800;ToChar:13055),
       (Name:'CJK Compatibility';FromChar:13056;ToChar:13311),
       (Name:'CJK Unified Ideographs Extension A';FromChar:13312;ToChar:19903),
       (Name:'Yijing Hexagram Symbols';FromChar:19904;ToChar:19967),
       (Name:'CJK Unified Ideographs';FromChar:19968;ToChar:40959),
       (Name:'Yi Syllables';FromChar:40960;ToChar:42127),
       (Name:'Yi Radicals';FromChar:42128;ToChar:42191),
       (Name:'Lisu';FromChar:42192;ToChar:42239),
       (Name:'Vai';FromChar:42240;ToChar:42559),
       (Name:'Cyrillic Extended-B';FromChar:42560;ToChar:42655),
       (Name:'Bamum';FromChar:42656;ToChar:42751),
       (Name:'Modifier Tone Letters';FromChar:42752;ToChar:42783),
       (Name:'Latin Extended-D';FromChar:42784;ToChar:43007),
       (Name:'Syloti Nagri';FromChar:43008;ToChar:43055),
       (Name:'Common Indic Number Forms';FromChar:43056;ToChar:43071),
       (Name:'Phags-pa';FromChar:43072;ToChar:43135),
       (Name:'Saurashtra';FromChar:43136;ToChar:43231),
       (Name:'Devanagari Extended';FromChar:43232;ToChar:43263),
       (Name:'Kayah Li';FromChar:43264;ToChar:43311),
       (Name:'Rejang';FromChar:43312;ToChar:43359),
       (Name:'Hangul Jamo Extended-A';FromChar:43360;ToChar:43391),
       (Name:'Javanese';FromChar:43392;ToChar:43487),
       (Name:'Myanmar Extended-B';FromChar:43488;ToChar:43519),
       (Name:'Cham';FromChar:43520;ToChar:43615),
       (Name:'Myanmar Extended-A';FromChar:43616;ToChar:43647),
       (Name:'Tai Viet';FromChar:43648;ToChar:43743),
       (Name:'Meetei Mayek Extensions';FromChar:43744;ToChar:43775),
       (Name:'Ethiopic Extended-A';FromChar:43776;ToChar:43823),
       (Name:'Latin Extended-E';FromChar:43824;ToChar:43887),
       (Name:'Cherokee Supplement';FromChar:43888;ToChar:43967),
       (Name:'Meetei Mayek';FromChar:43968;ToChar:44031),
       (Name:'Hangul Syllables';FromChar:44032;ToChar:55215),
       (Name:'Hangul Jamo Extended-B';FromChar:55216;ToChar:55295),
       (Name:'High Surrogates';FromChar:55296;ToChar:56191),
       (Name:'High Private Use Surrogates';FromChar:56192;ToChar:56319),
       (Name:'Low Surrogates';FromChar:56320;ToChar:57343),
       (Name:'Private Use Area';FromChar:57344;ToChar:63743),
       (Name:'CJK Compatibility Ideographs';FromChar:63744;ToChar:64255),
       (Name:'Alphabetic Presentation Forms';FromChar:64256;ToChar:64335),
       (Name:'Arabic Presentation Forms-A';FromChar:64336;ToChar:65023),
       (Name:'Variation Selectors';FromChar:65024;ToChar:65039),
       (Name:'Vertical Forms';FromChar:65040;ToChar:65055),
       (Name:'Combining Half Marks';FromChar:65056;ToChar:65071),
       (Name:'CJK Compatibility Forms';FromChar:65072;ToChar:65103),
       (Name:'Small Form Variants';FromChar:65104;ToChar:65135),
       (Name:'Arabic Presentation Forms-B';FromChar:65136;ToChar:65279),
       (Name:'Halfwidth and Fullwidth Forms';FromChar:65280;ToChar:65519),
       (Name:'Specials';FromChar:65520;ToChar:65535),
       (Name:'Linear B Syllabary';FromChar:65536;ToChar:65663),
       (Name:'Linear B Ideograms';FromChar:65664;ToChar:65791),
       (Name:'Aegean Numbers';FromChar:65792;ToChar:65855),
       (Name:'Ancient Greek Numbers';FromChar:65856;ToChar:65935),
       (Name:'Ancient Symbols';FromChar:65936;ToChar:65999),
       (Name:'Phaistos Disc';FromChar:66000;ToChar:66047),
       (Name:'Lycian';FromChar:66176;ToChar:66207),
       (Name:'Carian';FromChar:66208;ToChar:66271),
       (Name:'Coptic Epact Numbers';FromChar:66272;ToChar:66303),
       (Name:'Old Italic';FromChar:66304;ToChar:66351),
       (Name:'Gothic';FromChar:66352;ToChar:66383),
       (Name:'Old Permic';FromChar:66384;ToChar:66431),
       (Name:'Ugaritic';FromChar:66432;ToChar:66463),
       (Name:'Old Persian';FromChar:66464;ToChar:66527),
       (Name:'Deseret';FromChar:66560;ToChar:66639),
       (Name:'Shavian';FromChar:66640;ToChar:66687),
       (Name:'Osmanya';FromChar:66688;ToChar:66735),
       (Name:'Elbasan';FromChar:66816;ToChar:66863),
       (Name:'Caucasian Albanian';FromChar:66864;ToChar:66927),
       (Name:'Linear A';FromChar:67072;ToChar:67455),
       (Name:'Cypriot Syllabary';FromChar:67584;ToChar:67647),
       (Name:'Imperial Aramaic';FromChar:67648;ToChar:67679),
       (Name:'Palmyrene';FromChar:67680;ToChar:67711),
       (Name:'Nabataean';FromChar:67712;ToChar:67759),
       (Name:'Hatran';FromChar:67808;ToChar:67839),
       (Name:'Phoenician';FromChar:67840;ToChar:67871),
       (Name:'Lydian';FromChar:67872;ToChar:67903),
       (Name:'Meroitic Hieroglyphs';FromChar:67968;ToChar:67999),
       (Name:'Meroitic Cursive';FromChar:68000;ToChar:68095),
       (Name:'Kharoshthi';FromChar:68096;ToChar:68191),
       (Name:'Old South Arabian';FromChar:68192;ToChar:68223),
       (Name:'Old North Arabian';FromChar:68224;ToChar:68255),
       (Name:'Manichaean';FromChar:68288;ToChar:68351),
       (Name:'Avestan';FromChar:68352;ToChar:68415),
       (Name:'Inscriptional Parthian';FromChar:68416;ToChar:68447),
       (Name:'Inscriptional Pahlavi';FromChar:68448;ToChar:68479),
       (Name:'Psalter Pahlavi';FromChar:68480;ToChar:68527),
       (Name:'Old Turkic';FromChar:68608;ToChar:68687),
       (Name:'Old Hungarian';FromChar:68736;ToChar:68863),
       (Name:'Rumi Numeral Symbols';FromChar:69216;ToChar:69247),
       (Name:'Brahmi';FromChar:69632;ToChar:69759),
       (Name:'Kaithi';FromChar:69760;ToChar:69839),
       (Name:'Sora Sompeng';FromChar:69840;ToChar:69887),
       (Name:'Chakma';FromChar:69888;ToChar:69967),
       (Name:'Mahajani';FromChar:69968;ToChar:70015),
       (Name:'Sharada';FromChar:70016;ToChar:70111),
       (Name:'Sinhala Archaic Numbers';FromChar:70112;ToChar:70143),
       (Name:'Khojki';FromChar:70144;ToChar:70223),
       (Name:'Multani';FromChar:70272;ToChar:70319),
       (Name:'Khudawadi';FromChar:70320;ToChar:70399),
       (Name:'Grantha';FromChar:70400;ToChar:70527),
       (Name:'Tirhuta';FromChar:70784;ToChar:70879),
       (Name:'Siddham';FromChar:71040;ToChar:71167),
       (Name:'Modi';FromChar:71168;ToChar:71263),
       (Name:'Takri';FromChar:71296;ToChar:71375),
       (Name:'Ahom';FromChar:71424;ToChar:71487),
       (Name:'Warang Citi';FromChar:71840;ToChar:71935),
       (Name:'Pau Cin Hau';FromChar:72384;ToChar:72447),
       (Name:'Cuneiform';FromChar:73728;ToChar:74751),
       (Name:'Cuneiform Numbers and Punctuation';FromChar:74752;ToChar:74879),
       (Name:'Early Dynastic Cuneiform';FromChar:74880;ToChar:75087),
       (Name:'Egyptian Hieroglyphs';FromChar:77824;ToChar:78895),
       (Name:'Anatolian Hieroglyphs';FromChar:82944;ToChar:83583),
       (Name:'Bamum Supplement';FromChar:92160;ToChar:92735),
       (Name:'Mro';FromChar:92736;ToChar:92783),
       (Name:'Bassa Vah';FromChar:92880;ToChar:92927),
       (Name:'Pahawh Hmong';FromChar:92928;ToChar:93071),
       (Name:'Miao';FromChar:93952;ToChar:94111),
       (Name:'Kana Supplement';FromChar:110592;ToChar:110847),
       (Name:'Duployan';FromChar:113664;ToChar:113823),
       (Name:'Shorthand Format Controls';FromChar:113824;ToChar:113839),
       (Name:'Byzantine Musical Symbols';FromChar:118784;ToChar:119039),
       (Name:'Musical Symbols';FromChar:119040;ToChar:119295),
       (Name:'Ancient Greek Musical Notation';FromChar:119296;ToChar:119375),
       (Name:'Tai Xuan Jing Symbols';FromChar:119552;ToChar:119647),
       (Name:'Counting Rod Numerals';FromChar:119648;ToChar:119679),
       (Name:'Mathematical Alphanumeric Symbols';FromChar:119808;ToChar:120831),
       (Name:'Sutton SignWriting';FromChar:120832;ToChar:121519),
       (Name:'Mende Kikakui';FromChar:124928;ToChar:125151),
       (Name:'Arabic Mathematical Alphabetic Symbols';FromChar:126464;ToChar:126719),
       (Name:'Mahjong Tiles';FromChar:126976;ToChar:127023),
       (Name:'Domino Tiles';FromChar:127024;ToChar:127135),
       (Name:'Playing Cards';FromChar:127136;ToChar:127231),
       (Name:'Enclosed Alphanumeric Supplement';FromChar:127232;ToChar:127487),
       (Name:'Enclosed Ideographic Supplement';FromChar:127488;ToChar:127743),
       (Name:'Miscellaneous Symbols and Pictographs';FromChar:127744;ToChar:128511),
       (Name:'Emoticons';FromChar:128512;ToChar:128591),
       (Name:'Ornamental Dingbats';FromChar:128592;ToChar:128639),
       (Name:'Transport and Map Symbols';FromChar:128640;ToChar:128767),
       (Name:'Alchemical Symbols';FromChar:128768;ToChar:128895),
       (Name:'Geometric Shapes Extended';FromChar:128896;ToChar:129023),
       (Name:'Supplemental Arrows-C';FromChar:129024;ToChar:129279),
       (Name:'Supplemental Symbols and Pictographs';FromChar:129280;ToChar:129535),
       (Name:'CJK Unified Ideographs Extension B';FromChar:131072;ToChar:173791),
       (Name:'CJK Unified Ideographs Extension C';FromChar:173824;ToChar:177983),
       (Name:'CJK Unified Ideographs Extension D';FromChar:177984;ToChar:178207),
       (Name:'CJK Unified Ideographs Extension E';FromChar:178208;ToChar:183983),
       (Name:'CJK Compatibility Ideographs Supplement';FromChar:194560;ToChar:195103),
       (Name:'Tags';FromChar:917504;ToChar:917631),
       (Name:'Variation Selectors Supplement';FromChar:917760;ToChar:917999),
       (Name:'Supplementary Private Use Area-A';FromChar:983040;ToChar:1048575),
       (Name:'Supplementary Private Use Area-B';FromChar:1048576;ToChar:1114111));

const FLREUnicodeCategoryIDs:array[0..29] of TFLRERawByteString=(
'Cn',
'Lu',
'Ll',
'Lt',
'Lm',
'Lo',
'Mn',
'Me',
'Mc',
'Nd',
'Nl',
'No',
'Zs',
'Zl',
'Zp',
'Cc',
'Cf',
'Co',
'Cs',
'Pd',
'Ps',
'Pe',
'Pc',
'Po',
'Sm',
'Sc',
'Sk',
'So',
'Pi',
'Pf'
);
      FLREUnicodeCategoryCn=0;
      FLREUnicodeCategoryLu=1;
      FLREUnicodeCategoryLl=2;
      FLREUnicodeCategoryLt=3;
      FLREUnicodeCategoryLm=4;
      FLREUnicodeCategoryLo=5;
      FLREUnicodeCategoryMn=6;
      FLREUnicodeCategoryMe=7;
      FLREUnicodeCategoryMc=8;
      FLREUnicodeCategoryNd=9;
      FLREUnicodeCategoryNl=10;
      FLREUnicodeCategoryNo=11;
      FLREUnicodeCategoryZs=12;
      FLREUnicodeCategoryZl=13;
      FLREUnicodeCategoryZp=14;
      FLREUnicodeCategoryCc=15;
      FLREUnicodeCategoryCf=16;
      FLREUnicodeCategoryCo=17;
      FLREUnicodeCategoryCs=18;
      FLREUnicodeCategoryPd=19;
      FLREUnicodeCategoryPs=20;
      FLREUnicodeCategoryPe=21;
      FLREUnicodeCategoryPc=22;
      FLREUnicodeCategoryPo=23;
      FLREUnicodeCategorySm=24;
      FLREUnicodeCategorySc=25;
      FLREUnicodeCategorySk=26;
      FLREUnicodeCategorySo=27;
      FLREUnicodeCategoryPi=28;
      FLREUnicodeCategoryPf=29;
      FLREUnicodeCategoryCount=30;
      FLRE_CT_UNASSIGNED=FLREUnicodeCategoryCn;
      FLRE_CT_UPPERCASE_LETTER=FLREUnicodeCategoryLu;
      FLRE_CT_LOWERCASE_LETTER=FLREUnicodeCategoryLl;
      FLRE_CT_TITLECASE_LETTER=FLREUnicodeCategoryLt;
      FLRE_CT_MODIFIER_LETTER=FLREUnicodeCategoryLm;
      FLRE_CT_OTHER_LETTER=FLREUnicodeCategoryLo;
      FLRE_CT_NON_SPACING_MARK=FLREUnicodeCategoryMn;
      FLRE_CT_ENCLOSING_MARK=FLREUnicodeCategoryMe;
      FLRE_CT_COMBINING_SPACING_MARK=FLREUnicodeCategoryMc;
      FLRE_CT_DECIMAL_DIGIT_NUMBER=FLREUnicodeCategoryNd;
      FLRE_CT_LETTER_NUMBER=FLREUnicodeCategoryNl;
      FLRE_CT_OTHER_NUMBER=FLREUnicodeCategoryNo;
      FLRE_CT_SPACE_SEPARATOR=FLREUnicodeCategoryZs;
      FLRE_CT_LINE_SEPARATOR=FLREUnicodeCategoryZl;
      FLRE_CT_PARAGRAPH_SEPARATOR=FLREUnicodeCategoryZp;
      FLRE_CT_CONTROL=FLREUnicodeCategoryCc;
      FLRE_CT_FORMAT=FLREUnicodeCategoryCf;
      FLRE_CT_PRIVATE_USE=FLREUnicodeCategoryCo;
      FLRE_CT_SURROGATE=FLREUnicodeCategoryCs;
      FLRE_CT_DASH_PUNCTUATION=FLREUnicodeCategoryPd;
      FLRE_CT_START_PUNCTUATION=FLREUnicodeCategoryPs;
      FLRE_CT_END_PUNCTUATION=FLREUnicodeCategoryPe;
      FLRE_CT_INITIAL_PUNCTUATION=FLREUnicodeCategoryPi;
      FLRE_CT_FINAL_PUNCTUATION=FLREUnicodeCategoryPf;
      FLRE_CT_CONNECTOR_PUNCTUATION=FLREUnicodeCategoryPc;
      FLRE_CT_OTHER_PUNCTUATION=FLREUnicodeCategoryPo;
      FLRE_CT_MATH_SYMBOL=FLREUnicodeCategorySm;
      FLRE_CT_CURRENCY_SYMBOL=FLREUnicodeCategorySc;
      FLRE_CT_MODIFIER_SYMBOL=FLREUnicodeCategorySk;
      FLRE_CT_OTHER_SYMBOL=FLREUnicodeCategorySo;

const FLREUnicodeScriptIDs:array[0..131] of TFLRERawByteString=(
'Unknown',
'Common',
'Latin',
'Greek',
'Cyrillic',
'Armenian',
'Hebrew',
'Arabic',
'Syriac',
'Thaana',
'Devanagari',
'Bengali',
'Gurmukhi',
'Gujarati',
'Oriya',
'Tamil',
'Telugu',
'Kannada',
'Malayalam',
'Sinhala',
'Thai',
'Lao',
'Tibetan',
'Myanmar',
'Georgian',
'Hangul',
'Ethiopic',
'Cherokee',
'Canadian_Aboriginal',
'Ogham',
'Runic',
'Khmer',
'Mongolian',
'Hiragana',
'Katakana',
'Bopomofo',
'Han',
'Yi',
'Old_Italic',
'Gothic',
'Deseret',
'Inherited',
'Tagalog',
'Hanunoo',
'Buhid',
'Tagbanwa',
'Limbu',
'Tai_Le',
'Linear_B',
'Ugaritic',
'Shavian',
'Osmanya',
'Cypriot',
'Braille',
'Buginese',
'Coptic',
'New_Tai_Lue',
'Glagolitic',
'Tifinagh',
'Syloti_Nagri',
'Old_Persian',
'Kharoshthi',
'Balinese',
'Cuneiform',
'Phoenician',
'Phags_Pa',
'Nko',
'Sundanese',
'Lepcha',
'Ol_Chiki',
'Vai',
'Saurashtra',
'Kayah_Li',
'Rejang',
'Lycian',
'Carian',
'Lydian',
'Cham',
'Tai_Tham',
'Tai_Viet',
'Avestan',
'Egyptian_Hieroglyphs',
'Samaritan',
'Lisu',
'Bamum',
'Javanese',
'Meetei_Mayek',
'Imperial_Aramaic',
'Old_South_Arabian',
'Inscriptional_Parthian',
'Inscriptional_Pahlavi',
'Old_Turkic',
'Kaithi',
'Batak',
'Brahmi',
'Mandaic',
'Chakma',
'Meroitic_Cursive',
'Meroitic_Hieroglyphs',
'Miao',
'Sharada',
'Sora_Sompeng',
'Takri',
'Caucasian_Albanian',
'Bassa_Vah',
'Duployan',
'Elbasan',
'Grantha',
'Pahawh_Hmong',
'Khojki',
'Linear_A',
'Mahajani',
'Manichaean',
'Mende_Kikakui',
'Modi',
'Mro',
'Old_North_Arabian',
'Nabataean',
'Palmyrene',
'Pau_Cin_Hau',
'Old_Permic',
'Psalter_Pahlavi',
'Siddham',
'Khudawadi',
'Tirhuta',
'Warang_Citi',
'Ahom',
'Anatolian_Hieroglyphs',
'Hatran',
'Multani',
'Old_Hungarian',
'SignWriting'
);
     FLREUnicodeScriptUnknown=0;
     FLREUnicodeScriptCommon=1;
     FLREUnicodeScriptLatin=2;
     FLREUnicodeScriptGreek=3;
     FLREUnicodeScriptCyrillic=4;
     FLREUnicodeScriptArmenian=5;
     FLREUnicodeScriptHebrew=6;
     FLREUnicodeScriptArabic=7;
     FLREUnicodeScriptSyriac=8;
     FLREUnicodeScriptThaana=9;
     FLREUnicodeScriptDevanagari=10;
     FLREUnicodeScriptBengali=11;
     FLREUnicodeScriptGurmukhi=12;
     FLREUnicodeScriptGujarati=13;
     FLREUnicodeScriptOriya=14;
     FLREUnicodeScriptTamil=15;
     FLREUnicodeScriptTelugu=16;
     FLREUnicodeScriptKannada=17;
     FLREUnicodeScriptMalayalam=18;
     FLREUnicodeScriptSinhala=19;
     FLREUnicodeScriptThai=20;
     FLREUnicodeScriptLao=21;
     FLREUnicodeScriptTibetan=22;
     FLREUnicodeScriptMyanmar=23;
     FLREUnicodeScriptGeorgian=24;
     FLREUnicodeScriptHangul=25;
     FLREUnicodeScriptEthiopic=26;
     FLREUnicodeScriptCherokee=27;
     FLREUnicodeScriptCanadian_Aboriginal=28;
     FLREUnicodeScriptOgham=29;
     FLREUnicodeScriptRunic=30;
     FLREUnicodeScriptKhmer=31;
     FLREUnicodeScriptMongolian=32;
     FLREUnicodeScriptHiragana=33;
     FLREUnicodeScriptKatakana=34;
     FLREUnicodeScriptBopomofo=35;
     FLREUnicodeScriptHan=36;
     FLREUnicodeScriptYi=37;
     FLREUnicodeScriptOld_Italic=38;
     FLREUnicodeScriptGothic=39;
     FLREUnicodeScriptDeseret=40;
     FLREUnicodeScriptInherited=41;
     FLREUnicodeScriptTagalog=42;
     FLREUnicodeScriptHanunoo=43;
     FLREUnicodeScriptBuhid=44;
     FLREUnicodeScriptTagbanwa=45;
     FLREUnicodeScriptLimbu=46;
     FLREUnicodeScriptTai_Le=47;
     FLREUnicodeScriptLinear_B=48;
     FLREUnicodeScriptUgaritic=49;
     FLREUnicodeScriptShavian=50;
     FLREUnicodeScriptOsmanya=51;
     FLREUnicodeScriptCypriot=52;
     FLREUnicodeScriptBraille=53;
     FLREUnicodeScriptBuginese=54;
     FLREUnicodeScriptCoptic=55;
     FLREUnicodeScriptNew_Tai_Lue=56;
     FLREUnicodeScriptGlagolitic=57;
     FLREUnicodeScriptTifinagh=58;
     FLREUnicodeScriptSyloti_Nagri=59;
     FLREUnicodeScriptOld_Persian=60;
     FLREUnicodeScriptKharoshthi=61;
     FLREUnicodeScriptBalinese=62;
     FLREUnicodeScriptCuneiform=63;
     FLREUnicodeScriptPhoenician=64;
     FLREUnicodeScriptPhags_Pa=65;
     FLREUnicodeScriptNko=66;
     FLREUnicodeScriptSundanese=67;
     FLREUnicodeScriptLepcha=68;
     FLREUnicodeScriptOl_Chiki=69;
     FLREUnicodeScriptVai=70;
     FLREUnicodeScriptSaurashtra=71;
     FLREUnicodeScriptKayah_Li=72;
     FLREUnicodeScriptRejang=73;
     FLREUnicodeScriptLycian=74;
     FLREUnicodeScriptCarian=75;
     FLREUnicodeScriptLydian=76;
     FLREUnicodeScriptCham=77;
     FLREUnicodeScriptTai_Tham=78;
     FLREUnicodeScriptTai_Viet=79;
     FLREUnicodeScriptAvestan=80;
     FLREUnicodeScriptEgyptian_Hieroglyphs=81;
     FLREUnicodeScriptSamaritan=82;
     FLREUnicodeScriptLisu=83;
     FLREUnicodeScriptBamum=84;
     FLREUnicodeScriptJavanese=85;
     FLREUnicodeScriptMeetei_Mayek=86;
     FLREUnicodeScriptImperial_Aramaic=87;
     FLREUnicodeScriptOld_South_Arabian=88;
     FLREUnicodeScriptInscriptional_Parthian=89;
     FLREUnicodeScriptInscriptional_Pahlavi=90;
     FLREUnicodeScriptOld_Turkic=91;
     FLREUnicodeScriptKaithi=92;
     FLREUnicodeScriptBatak=93;
     FLREUnicodeScriptBrahmi=94;
     FLREUnicodeScriptMandaic=95;
     FLREUnicodeScriptChakma=96;
     FLREUnicodeScriptMeroitic_Cursive=97;
     FLREUnicodeScriptMeroitic_Hieroglyphs=98;
     FLREUnicodeScriptMiao=99;
     FLREUnicodeScriptSharada=100;
     FLREUnicodeScriptSora_Sompeng=101;
     FLREUnicodeScriptTakri=102;
     FLREUnicodeScriptCaucasian_Albanian=103;
     FLREUnicodeScriptBassa_Vah=104;
     FLREUnicodeScriptDuployan=105;
     FLREUnicodeScriptElbasan=106;
     FLREUnicodeScriptGrantha=107;
     FLREUnicodeScriptPahawh_Hmong=108;
     FLREUnicodeScriptKhojki=109;
     FLREUnicodeScriptLinear_A=110;
     FLREUnicodeScriptMahajani=111;
     FLREUnicodeScriptManichaean=112;
     FLREUnicodeScriptMende_Kikakui=113;
     FLREUnicodeScriptModi=114;
     FLREUnicodeScriptMro=115;
     FLREUnicodeScriptOld_North_Arabian=116;
     FLREUnicodeScriptNabataean=117;
     FLREUnicodeScriptPalmyrene=118;
     FLREUnicodeScriptPau_Cin_Hau=119;
     FLREUnicodeScriptOld_Permic=120;
     FLREUnicodeScriptPsalter_Pahlavi=121;
     FLREUnicodeScriptSiddham=122;
     FLREUnicodeScriptKhudawadi=123;
     FLREUnicodeScriptTirhuta=124;
     FLREUnicodeScriptWarang_Citi=125;
     FLREUnicodeScriptAhom=126;
     FLREUnicodeScriptAnatolian_Hieroglyphs=127;
     FLREUnicodeScriptHatran=128;
     FLREUnicodeScriptMultani=129;
     FLREUnicodeScriptOld_Hungarian=130;
     FLREUnicodeScriptSignWriting=131;
     FLREUnicodeScriptCount=132;

// FLREUnicodeCategoryArray: 35840 bytes, 212 blocks with 128 items per 1 bytes and 8704 indices per 1 bytes
const FLREUnicodeCategoryArrayBlockBits=7;
      FLREUnicodeCategoryArrayBlockMask=127;
      FLREUnicodeCategoryArrayBlockSize=128;
      FLREUnicodeCategoryArrayBlockCount=212;
      FLREUnicodeCategoryArrayBlockData:array[0..211,0..127] of byte=(
(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,12,23,23,23,25,23,23,23,20,21,23,24,23,19,23,23,9,9,9,9,9,9,9,9,9,
9,23,23,24,24,24,23,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,23,
21,26,22,26,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,24,21,24,15),
(15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,
15,15,15,15,15,12,23,25,25,25,25,27,23,26,27,5,28,24,16,27,26,27,24,11,11,26,2,23,
23,26,11,5,29,11,11,11,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,1,1,1,
1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24,2,2,2,2,2,2,2,2),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,
2,1,2,1,2,2),
(2,1,1,2,1,2,1,1,2,1,1,1,2,2,1,1,1,1,2,1,1,2,1,1,1,2,2,2,1,1,2,1,1,2,1,2,1,2,1,1,
2,1,2,2,1,2,1,1,2,1,1,1,2,1,2,1,1,2,2,5,1,2,2,2,5,5,5,5,1,3,2,1,3,2,1,3,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,3,2,1,2,1,1,1,2,
1,2,1,2,1,2),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,2,2,2,2,2,2,1,1,2,1,1,2,2,1,2,1,1,1,1,2,1,2,1,2,1,2,1,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,26,26,26,26,4,4,4,4,4,4,4,4,4,
4,4,4,26,26,26,26,26,26,26,26,26,26,26,26,26,26,4,4,4,4,4,26,26,26,26,26,26,26,4,
26,4,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26),
(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,1,2,1,2,4,26,1,2,0,
0,4,2,2,2,23,1),
(0,0,0,0,26,26,1,23,1,1,1,0,1,0,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,
1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
2,2,1,1,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,2,2,2,1,2,24,1,
2,1,1,2,2,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2),
(1,2,27,6,6,6,6,6,7,7,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,0,0,4,23,23,23,23,23,23,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,0,23,19,0,0,27,27,25,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,19,6,23,6,6,23,6,6,23,6,0,0,0,0,0,
0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,23,23,
0,0,0,0,0,0,0,0,0,0,0),
(16,16,16,16,16,16,24,24,24,23,23,25,23,23,27,27,6,6,6,6,6,6,6,6,6,6,6,23,16,0,23,
23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,
5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,9,9,9,9,9,9,9,9,9,9,23,23,23,23,
5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,23,5,6,6,6,6,6,6,6,16,27,6,6,6,6,6,6,4,4,6,6,27,6,6,6,6,5,5,9,9,9,9,9,9,9,9,
9,9,5,5,5,27,27,5),
(23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,16,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,
6,6,6,6,6,6,6,6,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,4,4,27,23,23,
23,4,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,4,6,6,6,6,6,6,6,6,6,4,6,6,6,
4,6,6,6,6,6,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6),
(6,6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,6,5,8,8,8,6,6,6,6,6,6,6,6,8,8,8,8,6,8,8,5,
6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,6,6,23,23,9,9,9,9,9,9,9,9,9,9,23,4,5,5,5,5,5,5,
5,5,5,5,5,5,5,5),
(5,6,8,8,0,5,5,5,5,5,5,5,5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,0,5,0,0,0,5,5,5,5,0,0,6,5,8,8,8,6,6,6,6,0,0,8,8,0,0,8,8,6,5,0,0,
0,0,0,0,0,0,8,0,0,0,0,5,5,0,5,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,5,5,25,25,11,11,11,
11,11,11,27,25,0,0,0,0),
(0,6,6,8,0,5,5,5,5,5,5,0,0,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,0,5,5,0,5,5,0,5,5,0,0,6,0,8,8,8,6,6,0,0,0,0,6,6,0,0,6,6,6,0,0,0,
6,0,0,0,0,0,0,0,5,5,5,5,0,5,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,6,6,5,5,5,6,0,0,0,0,
0,0,0,0,0,0),
(0,6,6,8,0,5,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,0,0,6,5,8,8,8,6,6,6,6,6,0,6,6,8,0,8,8,6,0,0,5,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,23,25,0,0,0,0,0,0,0,
5,0,0,0,0,0,0),
(0,6,8,8,0,5,5,5,5,5,5,5,5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,0,0,6,5,8,6,8,6,6,6,6,0,0,8,8,0,0,8,8,6,0,0,0,
0,0,0,0,0,6,8,0,0,0,0,5,5,0,5,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,27,5,11,11,11,11,11,
11,0,0,0,0,0,0,0,0),
(0,0,6,5,0,5,5,5,5,5,5,0,0,0,5,5,5,0,5,5,5,5,0,0,0,5,5,0,5,0,5,5,0,0,0,5,5,0,0,0,
5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,8,8,6,8,8,0,0,0,8,8,8,0,8,8,8,6,0,0,5,
0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,11,11,11,27,27,27,27,
27,27,25,27,0,0,0,0,0),
(6,8,8,8,0,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,6,6,6,8,8,8,8,0,6,6,6,0,6,6,6,6,0,0,0,
0,0,0,0,6,6,0,5,5,5,0,0,0,0,0,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,11,
11,11,11,11,11,11,27),
(0,6,8,8,0,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,0,0,6,5,8,6,8,8,8,8,8,0,6,8,8,0,8,8,6,6,0,0,0,
0,0,0,0,8,8,0,0,0,0,0,0,0,5,0,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,0,5,5,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,6,8,8,0,5,5,5,5,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,8,8,8,6,6,6,6,0,8,8,8,0,8,8,8,6,5,0,0,
0,0,0,0,0,0,8,0,0,0,0,0,0,0,5,5,5,6,6,0,0,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,0,
0,0,27,5,5,5,5,5,5),
(0,0,8,8,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,0,5,0,0,5,5,5,5,5,5,5,0,0,0,6,0,0,0,0,8,8,
8,6,6,6,0,6,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,8,8,23,0,0,0,0,
0,0,0,0,0,0,0),
(0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,6,5,5,6,6,6,6,6,6,6,0,0,0,0,25,5,5,5,5,5,5,4,6,6,6,6,6,6,6,6,23,
9,9,9,9,9,9,9,9,9,9,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(0,5,5,0,5,0,0,5,5,0,5,0,0,5,0,0,0,0,0,0,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,0,5,0,5,
0,0,5,5,0,5,5,5,5,6,5,5,6,6,6,6,6,6,0,6,6,5,0,0,5,5,5,5,5,0,4,0,6,6,6,6,6,6,0,0,9,
9,9,9,9,9,9,9,9,9,0,0,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,27,27,27,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,27,23,27,27,27,6,6,27,27,
27,27,27,27,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,11,27,6,27,6,27,6,20,21,
20,21,8,8,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,8),
(6,6,6,6,6,23,6,6,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,27,27,27,27,27,27,27,27,6,27,27,27,27,
27,27,0,27,27,23,23,23,23,23,27,27,27,27,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,8,8,6,6,6,6,8,6,6,6,6,6,6,8,6,6,8,8,6,6,5,9,9,9,9,9,9,9,9,9,9,23,23,23,23,23,
23,5,5,5,5,5,5,8,8,6,6,5,5,5,5,6,6,6,5,8,8,8,5,5,8,8,8,8,8,8,8,5,5,5,6,6,6,6,5,5,
5,5,5,5,5,5,5,5,5),
(5,5,6,8,8,6,6,8,8,8,8,8,8,6,5,8,9,9,9,9,9,9,9,9,9,9,8,8,8,6,27,27,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,1,0,0,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,23,4,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,
5,5,5,5,5,5,0,5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,0,5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,23,23,23,23,23,23,23,23,23,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,2,2,2,2,2,2,0,0),
(19,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,23,23,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5),
(12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,20,21,0,0,0,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,23,23,23,10,10,10,5,5,5,5,5,
5,5,5,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,6,6,6,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,6,6,6,23,23,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,0,6,6,0,0,0,0,0,
0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,6,6,8,6,6,6,6,6,6,6,8,8,8,8,8,8,8,8,6,8,8,6,6,6,6,6,6,6,6,
6,6,6,23,23,23,4,23,23,23,25,5,6,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,11,11,11,11,
11,11,11,11,11,11,0,0,0,0,0,0),
(23,23,23,23,23,23,19,23,23,23,23,6,6,6,16,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,6,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,6,6,6,8,8,8,8,6,
6,8,8,8,0,0,0,0,8,8,6,8,8,8,8,8,8,6,6,6,0,0,0,0,27,0,0,0,23,23,9,9,9,9,9,9,9,9,9,
9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,0,0,0,
0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,9,
9,9,9,9,9,9,9,9,9,11,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,8,8,6,0,0,23,23,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,8,6,8,6,6,6,6,6,6,6,0,6,8,6,8,8,6,6,6,6,6,6,6,6,8,8,8,8,8,8,6,6,6,6,6,6,
6,6,6,6,0,0,6),
(9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,23,23,23,23,23,23,
23,4,23,23,23,23,23,23,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0),
(6,6,6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,6,8,6,6,6,6,6,8,6,8,8,8,8,8,6,8,8,5,5,5,5,5,5,5,0,0,0,0,9,
9,9,9,9,9,9,9,9,9,23,23,23,23,23,23,23,27,27,27,27,27,27,27,27,27,27,6,6,6,6,6,6,
6,6,6,27,27,27,27,27,27,27,27,27,0,0,0),
(6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,6,6,6,6,8,8,
6,6,8,6,6,6,5,5,9,9,9,9,9,9,9,9,9,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,6,6,8,8,8,6,8,6,6,6,8,8,0,0,0,0,0,0,
0,0,23,23,23,23),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,
8,8,8,8,6,6,6,6,6,6,6,6,8,8,6,6,0,0,0,23,23,23,23,23,9,9,9,9,9,9,9,9,9,9,0,0,0,5,
5,5,9,9,9,9,9,9,9,9,9,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,4,4,4,4,4,4,23,23),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,0,0,0,0,0,
0,0,0,6,6,6,23,6,6,6,6,6,6,6,6,6,6,6,6,6,8,6,6,6,6,6,6,6,5,5,5,5,6,5,5,5,5,8,8,6,
5,5,0,6,6,0,0,0,0,0,0),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,
0,0,6,6,6,6),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,2,2,2,2,2,2,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2),
(2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2,0,0,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,
1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2,0,0,1,1,1,1,1,1,0,0,2,
2,2,2,2,2,2,2,0,1,0,1,0,1,0,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,0,0),
(2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,
3,3,3,3,3,3,3,3,2,2,2,2,2,0,2,2,1,1,1,1,3,26,2,26,26,26,2,2,2,0,2,2,1,1,1,1,3,26,
26,26,2,2,2,2,0,0,2,2,1,1,1,1,0,26,26,26,2,2,2,2,2,2,2,2,1,1,1,1,1,26,26,26,0,0,2,
2,2,0,2,2,1,1,1,1,3,26,26,0),
(12,12,12,12,12,12,12,12,12,12,12,16,16,16,16,16,19,19,19,19,19,19,23,23,28,29,20,
28,28,29,20,28,23,23,23,23,23,23,23,23,13,14,16,16,16,16,16,12,23,23,23,23,23,23,
23,23,23,28,29,23,23,23,23,22,22,23,23,23,24,20,21,23,23,23,23,23,23,23,23,23,23,
23,24,23,22,23,23,23,23,23,23,23,23,23,23,12,16,16,16,16,16,0,16,16,16,16,16,16,16,
16,16,16,11,4,0,0,11,11,11,11,11,11,24,24,24,20,21,4),
(11,11,11,11,11,11,11,11,11,11,24,24,24,20,21,0,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,6,7,
7,7,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,1,27,27,27,27,1,27,27,2,1,1,1,2,2,1,1,1,2,27,1,27,27,24,1,1,1,1,1,27,27,27,
27,27,27,1,27,1,27,1,27,1,1,1,1,27,2,1,1,1,1,2,5,5,5,5,2,27,27,2,2,1,1,24,24,24,24,
24,1,2,2,2,2,27,24,27,27,2,27,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10),
(10,10,10,1,2,10,10,10,10,11,27,27,0,0,0,0,24,24,24,24,24,27,27,27,27,27,24,24,27,
27,27,27,24,27,27,24,27,27,24,27,27,27,27,27,27,27,24,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,24,24,27,27,24,
27,24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,24,24,24,24,24,24,24,24,24,24,24,24),
(24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24),
(27,27,27,27,27,27,27,27,20,21,20,21,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,24,24,27,27,27,27,27,27,27,20,21,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,24,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,24,24,24,24,24,24,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11),
(11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,24,27,27,27,27,27,27,27,27,27,24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,24,24,24,24,24,24,24,24),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,24,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,20,21,20,21,
20,21,20,21,20,21,20,21,20,21,11,11,11,11,11,11,11,11,11,11),
(11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,24,24,24,24,24,20,21,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,20,21,20,21,20,21,
20,21,20,21,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24),
(24,24,24,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,20,21,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,20,21,20,21,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,20,21,24,24),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,27,27,24,24,24,24,24,24,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,0,0,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,2,1,1,1,2,2,1,2,1,2,1,2,1,1,1,1,2,1,2,2,1,2,2,2,2,
2,2,4,4,1,1),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,27,27,27,27,27,27,1,2,1,2,6,6,6,1,2,0,0,0,
0,0,23,23,23,23,11,23,23),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,
0,0,0,0,0,2,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,4,23,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,6),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,
5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,5,
5,5,5,5,5,5,0,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6),
(23,23,28,29,28,29,23,23,23,28,29,23,28,29,23,23,23,23,23,23,23,23,23,19,23,23,19,
23,28,29,23,23,28,29,20,21,20,21,20,21,20,21,23,23,23,23,23,4,23,23,23,23,23,23,23,
23,23,23,19,19,23,23,23,23,19,23,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,
27,27,27,27,27,27,27,0,0,0,0),
(12,23,23,23,27,4,5,10,20,21,20,21,20,21,20,21,20,21,27,27,20,21,20,21,20,21,20,21,
19,20,21,21,27,10,10,10,10,10,10,10,10,10,6,6,6,6,8,8,19,4,4,4,4,4,27,27,10,10,10,
4,5,23,27,27,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,26,26,4,4,5,19,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,23,4,4,4,5),
(0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,27,27,11,11,11,11,27,27,27,27,27,27,27,27,27,27,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,0,11,11,11,11,11,11,11,11,11,11,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,11,11,11,11,11,11,11,11,27,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(11,11,11,11,11,11,11,11,11,11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,23,23),
(5,5,5,5,5,5,5,5,5,5,5,5,4,23,23,23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,9,9,9,9,9,9,9,
9,9,9,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,5,6,7,7,7,23,6,6,6,6,
6,6,6,6,6,6,23,4),
(1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,4,4,6,6,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,6,6,23,23,
23,23,23,23,0,0,0,0,0,0,0,0),
(26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,4,4,4,4,4,4,
4,4,4,26,26,1,2,1,2,1,2,1,2,1,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,4,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2),
(1,2,1,2,1,2,1,2,4,26,26,1,2,1,2,5,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,
2,1,2,1,1,1,1,0,0,1,1,1,1,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,4,
4,2,5,5,5,5,5),
(5,5,6,5,5,5,6,5,5,5,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,6,6,8,
27,27,27,27,0,0,0,0,11,11,11,11,11,11,27,27,25,27,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,23,23,23,23,0,0,0,0,0,0,0,0),
(8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,6,0,0,0,0,0,0,0,0,0,23,23,
9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,23,
23,23,5,23,5,0,0),
(9,9,9,9,9,9,9,9,9,9,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,
6,6,6,6,6,6,23,23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,
6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,0,0,0),
(6,6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,6,8,8,6,6,6,6,8,8,6,8,8,8,8,23,23,23,23,23,23,23,23,23,23,23,
23,23,0,4,9,9,9,9,9,9,9,9,9,9,0,0,0,0,23,23,5,5,5,5,5,6,4,5,5,5,5,5,5,5,5,5,9,9,9,
9,9,9,9,9,9,9,5,5,5,5,5,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,6,6,6,6,6,6,8,8,6,6,8,8,6,6,0,0,0,0,0,0,0,0,0,5,5,5,6,5,5,5,5,5,5,5,5,6,8,0,0,9,
9,9,9,9,9,9,9,9,9,0,0,23,23,23,23,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,27,
27,27,5,8,6,8,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,6,5,6,6,6,5,5,6,6,5,5,5,5,5,6,6,5,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,5,5,4,23,23,5,5,5,5,5,5,5,5,5,5,5,8,6,6,8,8,23,23,5,4,4,8,6,0,
0,0,0,0,0,0,0,0),
(0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,0,
5,5,5,5,5,5,5,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,26,4,4,4,4,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,8,8,6,8,8,6,8,8,23,8,6,0,0,9,9,9,9,9,9,9,9,9,
9,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,
0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,0,0,0,0),
(18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18),
(17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,5,6,5,5,5,5,5,5,5,5,5,
5,24,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,0,5,0,5,5,0,5,5,0,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,21,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,
5,5,25,27,0,0),
(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,23,23,23,23,23,23,23,20,21,23,0,0,0,0,0,0,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,23,19,19,22,22,20,21,20,21,20,21,20,21,20,21,20,21,20,21,
20,21,23,23,20,21,23,23,23,23,22,22,22,23,23,23,0,23,23,23,23,19,20,21,20,21,20,21,
23,23,23,24,19,24,24,24,0,23,25,23,23,0,0,0,0,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,0,0,16),
(0,23,23,23,25,23,23,23,20,21,23,24,23,19,23,23,9,9,9,9,9,9,9,9,9,9,23,23,24,24,24,
23,23,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,20,23,21,26,22,26,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,24,21,24,20,21,23,20,21,23,23,5,
5,5,5,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,0,0,5,5,5,5,5,5,0,
0,5,5,5,5,5,5,0,0,5,5,5,0,0,0,25,25,24,26,27,25,25,0,27,24,24,24,24,27,27,0,0,0,0,
0,0,0,0,0,0,16,16,16,27,27,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,0,0,0,0),
(23,23,23,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,27,
27,27,27,27,27,27,27,27,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,11,11,11,11,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,11,11,27,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,
0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,6,0,
0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,0,0,
0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,5,5,5,5,5,5,5,5,10,0,0,0,
0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,
6,6,6,6,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,23,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,5,5,5,5,5,5,5,5,23,
10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,9,9,9,9,9,9,9,9,
9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,0,0,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,0,0,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,0,23,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,27,27,11,11,11,11,11,11,11),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,11,
11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,
0,0,0,0,0,11,11,11,11,11),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,0,0,0,23,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11),
(5,6,6,6,0,6,6,0,0,0,0,0,6,6,6,6,5,5,5,5,0,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,6,6,6,0,0,0,0,6,11,11,11,11,11,11,11,11,0,0,0,0,0,
0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,11,11,23),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,27,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,0,0,0,0,11,11,11,11,11,23,23,23,23,
23,23,23,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,23,23,23,23,23,23,23,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,0,0,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,0,0,0,0,11,11,11,11,11,11,11,11),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,23,23,23,23,0,0,0,0,0,0,0,0,0,
0,0,0,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,
11,11,11,11,11,11),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,11,11,0),
(8,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,23,23,23,23,23,23,23,
0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,
9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6),
(6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,8,8,6,6,23,23,16,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,9,9,9,9,9,9,
9,9,9,9,0,0,0,0,0,0),
(6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,
6,6,6,6,8,6,6,6,6,6,6,6,6,0,9,9,9,9,9,9,9,9,9,9,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,
0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,23,23,5,
0,0,0,0,0,0,0,0,0),
(6,6,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,6,6,6,6,6,8,8,5,5,5,5,23,23,23,23,23,6,6,6,23,
0,0,9,9,9,9,9,9,9,9,9,9,5,23,5,23,23,23,0,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,8,8,8,6,6,6,8,8,6,8,6,6,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,0,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,
5,23,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,8,8,8,6,6,6,6,6,6,6,6,0,0,0,0,0,9,9,9,9,9,9,9,9,9,
9,0,0,0,0,0,0),
(6,6,8,8,0,5,5,5,5,5,5,5,5,0,0,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,0,5,5,5,5,5,5,5,0,5,5,0,5,5,5,5,5,0,0,6,5,8,8,6,8,8,8,8,0,0,8,8,0,0,8,8,8,0,0,5,
0,0,0,0,0,0,8,0,0,0,0,0,5,5,5,5,5,8,8,0,0,6,6,6,6,6,6,6,0,0,0,6,6,6,6,6,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,6,6,8,6,8,8,8,8,6,6,8,6,6,5,5,23,5,0,0,0,0,0,0,0,0,
9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,8,8,8,6,6,6,6,0,0,8,8,8,8,6,6,8,6,6,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,5,5,5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,8,8,8,6,6,6,6,6,6,6,6,8,8,6,8,6,6,23,23,23,5,0,0,0,0,0,0,0,0,0,0,
0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,6,8,6,8,8,6,6,6,6,6,6,8,6,0,0,0,0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,6,6,6,8,8,6,6,6,6,8,6,
6,6,6,6,0,0,0,0,9,9,9,9,9,9,9,9,9,9,11,11,23,23,23,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,11,11,0,0,
0,0,0,0,0,0,0,0,0,0,5),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,0,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,0,0,0,0,23,23,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,23,0,0,0,
0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,23,23,23,23,23,27,27,27,27,4,4,4,4,23,27,0,0,0,0,0,
0,0,0,0,0,9,9,9,9,9,9,9,9,9,9,0,11,11,11,11,11,11,11,0,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,
5,5,5,0,0,0),
(5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,0,0,27,6,6,23,16,16,16,16,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,8,8,6,6,6,27,27,27,8,8,8,
8,8,8,16,16,16,16,16,16,16,16,6,6,6,6,6),
(6,6,6,27,27,6,6,6,6,6,6,6,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,6,6,6,6,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,6,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,
2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,1,1,0,0,1,0,0,1,1,0,
0,1,1,1,1,0,1,1,1,1,1,1,1,1,2,2,2,2,0,2,0,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,
0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,24,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,24,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24,
2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,24,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,24,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,24,2,2,2,2,2,2,1,2,0,0,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9),
(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,27,27,27,27,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,27,27,27,27,27,27,27,
27,6,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,6,27,27,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,6,0,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,11,11,11,11,11,11,11,
11,11,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0),
(5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,5,0,5,0,0,5,
0,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,0,5,0,0,0,0,0,0,5,0,0,0,0,5,0,5,0,5,0,5,5,5,0,
5,5,0,5,0,0,5,0,5,0,5,0,5,0,5,0,5,5,0,5,0,0,5,5,5,5,0,5,5,5,5,5,5,5,0,5,5,5,5,0,5,
5,5,5,0,5,0),
(5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,5,5,5,0,5,5,5,
5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,24,0,0,0,0,0,0,0,
0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,
0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,0,0,0,0,0,0,0,0,0,0),
(11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,
0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,0,0,0,0,0,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,27,27,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,26,26,26,26,26),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,27,27,
27,27,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,27,27,27,27,27,
27,27,27,27,27,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0),
(27,27,27,27,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16),
(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6),
(6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,0)
);

// FLREUnicodeCategoryArrayIndex: 1168 bytes, 28 blocks with 32 items per 1 bytes and 272 indices per 1 bytes
const FLREUnicodeCategoryArrayIndexBlockBits=5;
      FLREUnicodeCategoryArrayIndexBlockMask=31;
      FLREUnicodeCategoryArrayIndexBlockSize=32;
      FLREUnicodeCategoryArrayIndexBlockCount=28;
      FLREUnicodeCategoryArrayIndexBlockData:array[0..27,0..31] of byte=(
(0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,
30,31),
(32,33,34,34,35,36,37,38,39,34,34,34,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,
55,56,57,58,59),
(60,61,62,63,64,64,65,66,67,68,69,70,71,69,72,73,69,69,64,74,64,64,75,76,77,78,79,
80,81,82,69,83),
(84,85,86,87,88,89,69,69,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
90,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,91),
(92,34,34,34,34,34,34,34,34,93,34,34,94,95,96,97,98,99,100,101,102,103,104,105,34,
34,34,34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,106,107,107,107,107,107,107,107,107,
107,107,107,107,107,107,107,107),
(108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,108,108,108,108),
(108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,34,34,109,
110,111,112,34,34,113,114,115,116,117,118),
(119,120,121,122,123,124,125,126,127,128,129,123,34,34,130,123,131,132,133,134,135,
136,137,138,139,140,123,123,141,123,123,123),
(142,143,144,145,146,147,148,123,123,149,123,150,151,152,153,123,123,154,123,123,
123,155,123,123,123,123,123,123,123,123,123,123),
(34,34,34,34,34,34,34,156,157,34,158,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123),
(34,34,34,34,34,34,34,34,159,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123),
(123,123,123,123,123,123,123,123,34,34,34,34,160,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123),
(123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123),
(123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,34,34,34,34,161,
162,163,164,123,123,123,123,123,123,165,166),
(167,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,168,169,123,123,123,123,123,123),
(69,170,171,172,173,123,174,123,175,176,177,178,179,180,181,182,69,69,69,69,183,184,
123,123,123,123,123,123,123,123,123,123),
(123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,34,185,123,123,123,
123,123,123,123,123,123,123,186,187,123,123),
(188,189,190,191,192,123,69,193,69,69,194,195,69,196,197,198,199,200,201,202,123,
123,123,123,123,123,123,123,123,123,123,123),
(34,34,34,34,34,34,34,34,34,34,34,34,34,203,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,204,34,205,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,206,123,123),
(123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,34,34,34,34,207,
123,123,123,123,123,123,123,123,123,123,123),
(208,123,209,210,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123),
(108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,108,108,108,211)
);
      FLREUnicodeCategoryArrayIndexIndexCount=28;
      FLREUnicodeCategoryArrayIndexIndexData:array[0..271] of byte=(
0,1,2,3,4,5,5,5,5,6,7,5,5,8,9,10,11,12,13,14,15,16,17,16,16,16,16,18,16,19,20,21,
5,5,5,5,5,5,5,5,5,5,22,23,24,16,16,25,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,26,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,27,9,9,
9,9,9,9,9,9,9,9,9,9,9,9,9,27
);


// FLREUnicodeScriptArray: 34688 bytes, 203 blocks with 128 items per 1 bytes and 8704 indices per 1 bytes
const FLREUnicodeScriptArrayBlockBits=7;
      FLREUnicodeScriptArrayBlockMask=127;
      FLREUnicodeScriptArrayBlockSize=128;
      FLREUnicodeScriptArrayBlockCount=203;
      FLREUnicodeScriptArrayBlockData:array[0..202,0..127] of byte=(
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,35,35,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1),
(41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,3,3,3,3,1,3,3,3,0,0,3,3,3,3,1,3),
(0,0,0,0,3,1,3,1,3,3,3,0,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,55,55,55,55,55,55,55,55,55,55,55,55,55,55,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3),
(4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4),
(4,4,4,4,4,41,41,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4),
(4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,0,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,0,1,5,0,0,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,
0,0,0,0,0,0),
(7,7,7,7,7,1,7,7,7,7,7,7,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,1,0,7,1,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,7,7,7,7,7,7,7,7,7,7,41,41,41,41,
41,41,41,41,41,41,41,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,41,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,0,8,8,8,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
9,9,9,9,9,9,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,66,66,66,66,66,66,66,66,66,66,
66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,
66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,0),
(82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,82,82,82,82,82,82,82,
82,82,82,82,82,82,82,82,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,
95,95,95,95,95,95,95,95,95,0,0,95,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
41,41,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,1,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10),
(11,11,11,11,0,11,11,11,11,11,11,11,11,0,0,11,11,0,0,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,0,11,0,0,0,11,11,11,11,
0,0,11,11,11,11,11,11,11,11,11,0,0,11,11,0,0,11,11,11,11,0,0,0,0,0,0,0,0,11,0,0,0,
0,11,11,0,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
11,11,11,11,0,0,0,0),
(0,12,12,12,0,12,12,12,12,12,12,0,0,0,0,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,12,0,12,12,0,12,12,0,12,12,0,
0,12,0,12,12,12,12,12,0,0,0,0,12,12,0,0,12,12,12,0,0,0,12,0,0,0,0,0,0,0,12,12,12,
12,0,12,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,
0,0,0,0),
(0,13,13,13,0,13,13,13,13,13,13,13,13,13,0,13,13,13,0,13,13,13,13,13,13,13,13,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,0,13,13,0,13,13,13,
13,13,0,0,13,13,13,13,13,13,13,13,13,13,0,13,13,13,0,13,13,13,0,0,13,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,
0,13,0,0,0,0,0,0),
(0,14,14,14,0,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,14,14,14,14,14,14,14,
14,14,14,14,14,14,14,14,14,14,14,14,0,14,14,14,14,14,14,14,0,14,14,0,14,14,14,14,
14,0,0,14,14,14,14,14,14,14,14,14,0,0,14,14,0,0,14,14,14,0,0,0,0,0,0,0,0,14,14,0,
0,0,0,14,14,0,14,14,14,14,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,
14,14,0,0,0,0,0,0,0,0),
(0,0,15,15,0,15,15,15,15,15,15,0,0,0,15,15,15,0,15,15,15,15,0,0,0,15,15,0,15,0,15,
15,0,0,0,15,15,0,0,0,15,15,15,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,15,
15,15,15,15,0,0,0,15,15,15,0,15,15,15,15,0,0,15,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,0,
0),
(16,16,16,16,0,16,16,16,16,16,16,16,16,0,16,16,16,0,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,0,0,0,16,16,16,16,16,16,16,16,0,16,16,16,0,16,16,16,16,0,0,0,0,0,0,0,16,16,
0,16,16,16,0,0,0,0,0,16,16,16,16,0,0,16,16,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,
0,16,16,16,16,16,16,16,16),
(0,17,17,17,0,17,17,17,17,17,17,17,17,0,17,17,17,0,17,17,17,17,17,17,17,17,17,17,
17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,0,17,17,17,
17,17,0,0,17,17,17,17,17,17,17,17,17,0,17,17,17,0,17,17,17,17,0,0,0,0,0,0,0,17,17,
0,0,0,0,0,0,0,17,0,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,0,17,17,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(0,18,18,18,0,18,18,18,18,18,18,18,18,0,18,18,18,0,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,18,18,18,0,0,18,18,18,18,18,18,18,18,0,18,18,18,0,18,18,18,18,18,0,0,0,0,0,0,0,
0,18,0,0,0,0,0,0,0,18,18,18,18,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,
18,0,0,0,18,18,18,18,18,18,18),
(0,0,19,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,19,19,19,
19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,
19,19,19,0,19,0,0,19,19,19,19,19,19,19,0,0,0,19,0,0,0,0,19,19,19,19,19,19,0,19,0,
19,19,19,19,19,19,19,19,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,0,0,19,19,19,0,
0,0,0,0,0,0,0,0,0,0),
(0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
20,20,20,20,20,0,0,0,0,1,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(0,21,21,0,21,0,0,21,21,0,21,0,0,21,0,0,0,0,0,0,21,21,21,21,0,21,21,21,21,21,21,21,
0,21,21,21,0,21,0,21,0,0,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,0,21,21,21,
0,0,21,21,21,21,21,0,21,0,21,21,21,21,21,21,0,0,21,21,21,21,21,21,21,21,21,21,0,0,
21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
0,0,0,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22),
(22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,0,22,22,22,22,
22,22,22,1,1,1,1,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23),
(23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,24,0,0,0,0,0,24,0,0,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,24,1,24,24,24,24),
(25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25),
(26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,0,26,26,
26,26,26,26,26,0,26,0,26,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26),
(26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,0,
26,26,26,26,26,26,26,0,26,0,26,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26),
(26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,0,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0),
(26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,
0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,0,0,27,27,27,27,27,27,0,0),
(28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28),
(29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,
29,29,0,0,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,
30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,
30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,1,1,1,
30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,0,0,0),
(42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,
0,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,1,1,0,0,0,0,0,
0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,0,0,0,0,
0,0,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,0,45,45,45,0,45,45,0,0,0,0,0,0,0,
0,0,0,0,0),
(31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,
31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,
31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,
31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,31,31,31,31,31,31,31,31,31,31,0,0,0,0,
0,0,31,31,31,31,31,31,31,31,31,31,0,0,0,0,0,0),
(32,32,1,1,32,1,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,0,0,0,
0,0,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0),
(32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,0,0,0,0,0,0,0,0,0,0),
(46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,
46,46,46,46,0,46,46,46,46,46,46,46,46,46,46,46,46,0,0,0,0,46,46,46,46,46,46,46,46,
46,46,46,46,0,0,0,0,46,0,0,0,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,
47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,0,0,47,47,
47,47,47,0,0,0,0,0,0,0,0,0,0,0),
(56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,
56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,56,56,56,56,56,56,56,56,
56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,56,56,56,56,56,
56,56,56,56,56,56,0,0,0,56,56,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,
31,31,31,31,31,31,31,31,31,31,31,31,31,31,31),
(54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,
54,0,0,54,54,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,
78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,
78,78,78,78,78,78,78,78,78,78,78,78,78,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,
78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,78),
(78,78,78,78,78,78,78,78,78,78,0,0,0,0,0,0,78,78,78,78,78,78,78,78,78,78,0,0,0,0,
0,0,78,78,78,78,78,78,78,78,78,78,78,78,78,78,0,0,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0,0,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,
62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,0,0,0),
(67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,
67,67,67,67,67,67,67,67,67,67,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,
93,93,93,93,93,93,93,93,0,0,0,0,0,0,0,0,93,93,93,93),
(68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,
68,68,0,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,0,0,0,68,68,68,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,
69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,67,67,67,67,67,67,67,67,0,0,0,0,0,
0,0,0,41,41,41,1,41,41,41,41,41,41,41,41,41,41,41,41,41,1,41,41,41,41,41,41,41,1,
1,1,1,41,1,1,1,1,1,1,41,1,1,0,41,41,0,0,0,0,0,0),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,
3,3,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,2,2,2,2,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,4,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,41,41,41,41),
(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,0,0,3,
3,3,3,3,3,3,3,0,3,0,3,0,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,0,0),
(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,0,0,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,
3,3,3,3,3,0),
(1,1,1,1,1,1,1,1,1,1,1,1,41,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,2,0,0,1,1,1,1,1,
1,1,1,1,1,1,2),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,
1,1,2,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,2,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,
53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,
57,57,57,57,57,57,57,57,57,57,57,57,57,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2),
(55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,
55,55,55,55,55,55,55,55,0,0,0,0,0,55,55,55,55,55,55,55),
(24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,
24,24,24,24,24,24,24,24,24,24,24,0,24,0,0,0,0,0,24,0,0,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,
58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,0,0,0,0,0,58,58,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,58),
(26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,
0,0,0,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,26,26,
26,26,26,26,26,0,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,26,26,26,26,26,26,
26,0,26,26,26,26,26,26,26,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,
1,1,1,1,1,0,0,0,0),
(1,1,1,1,1,36,1,36,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,36,36,36,36,
36,36,36,36,36,41,41,41,41,25,25,1,1,1,1,1,1,1,1,36,36,36,36,1,1,1,1,0,33,33,33,33,
33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,
33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,
33,33,33,33,33),
(33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,0,41,41,1,
1,33,33,33,1,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,1,1,34,34,34),
(0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,
35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25),
(25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,
35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,
0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
0,0,0,0,0,0,0,0,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34),
(25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,34,34,34,34,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37),
(37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,
37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,0,0,0,0,0,0,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,
83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83),
(70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70),
(70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,
70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4),
(4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,0,0,0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2),
(2,2,2,2,2,2,2,2,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,
2,2,2,2,2,2),
(59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,
59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,
0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,
65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,
65,65,65,65,65,0,0,0,0,0,0,0,0),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,0,0,0,0,0,0,71,71,71,71,71,71,
71,71,71,71,71,71,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,0,0),
(72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,
72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,1,72,73,73,73,73,73,73,73,
73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,
73,73,0,0,0,0,0,0,0,0,0,0,0,73,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,0,0,0),
(85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,
85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,1,85,85,
85,85,85,85,85,85,85,85,0,0,0,0,85,85,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0),
(77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,
77,0,0,0,0,0,0,0,0,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,77,77,77,77,77,
77,77,77,77,77,0,0,77,77,77,77,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,
23,23,23,23,23,23,23,23,23,23,23,23,23,23,23),
(79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,
79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,79,79,79,79,79,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
86,86,86,0,0,0,0,0,0,0,0,0),
(0,26,26,26,26,26,26,0,0,26,26,26,26,26,26,0,0,26,26,26,26,26,26,0,0,0,0,0,0,0,0,
0,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,3,0,0,0,0,
0,0,0,0,0,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27),
(27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,
27,27,27,27,27,27,27,27,27,27,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,
86,86,0,0,86,86,86,86,86,86,86,86,86,86,0,0,0,0,0,0),
(25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0),
(2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,0,6,0,6,6,0,6,6,0,6,6,6,6,6,6,6,6,6,6,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,0,0),
(41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,4,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,
1,0,0,0,0,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7),
(7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,0,0,1),
(0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,34,34,34,34,34,34,34,34,34,34,1,34,34,34,
34,34,34,34,34,34,34,34,34,34,34,34),
(34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,
34,34,34,1,1,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,0,0,0,25,25,25,25,25,25,0,0,25,25,25,25,25,25,0,0,25,25,25,
25,25,25,0,0,25,25,25,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,
1,1,1,0,0),
(48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,0,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0),
(1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3),
(3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,41,0,0),
(74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,
74,74,0,0,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,
75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0),
(38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,
38,38,38,38,38,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,
39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,0,0,120,120,120,120,120,
120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,
120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0),
(49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,
49,49,49,0,49,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,
60,60,60,60,60,60,60,60,60,60,60,60,60,0,0,0,0,60,60,60,60,60,60,60,60,60,60,60,60,
60,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0),
(40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,
40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,
40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,50,
50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50),
(51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,
51,51,51,0,0,51,51,51,51,51,51,51,51,51,51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,
106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,0,
0,0,0,0,0,0,0,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,
103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,
103,103,103,103,103,103,103,103,103,103,103,103,103,103,0,0,0,0,0,0,0,0,0,0,0,103,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110),
(110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,0,110,110,
110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,0,
0,0,0,0,0,0,0,0,0,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0),
(52,52,52,52,52,52,0,0,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,
52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,
52,0,0,0,52,0,0,52,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,
87,0,87,87,87,87,87,87,87,87,87,118,118,118,118,118,118,118,118,118,118,118,118,118,
118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118),
(117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,
117,117,117,117,117,117,117,117,117,117,117,0,0,0,0,0,0,0,0,117,117,117,117,117,117,
117,117,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,128,128,128,128,128,128,128,128,128,128,128,
128,128,128,128,128,0,128,128,0,0,0,0,0,128,128,128,128,128),
(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,0,0,0,64,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,
76,76,76,0,0,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,0,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,
97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97),
(61,61,61,61,0,61,61,0,0,0,0,0,61,61,61,61,61,61,61,61,0,61,61,61,0,61,61,61,61,61,
61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,0,0,0,0,61,61,61,
0,0,0,0,61,61,61,61,61,61,61,61,61,0,0,0,0,0,0,0,0,61,61,61,61,61,61,61,61,61,0,0,
0,0,0,0,0,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,
88,88,88,88,88,88,88,88),
(116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,
116,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,
112,112,112,112,112,0,0,0,0,112,112,112,112,112,112,112,112,112,112,112,112,0,0,0,
0,0,0,0,0,0),
(80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,
80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,
0,0,0,80,80,80,80,80,80,80,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,
89,89,89,89,0,0,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,
90,90,90,90,90,0,0,0,0,0,90,90,90,90,90,90,90,90),
(121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,0,0,0,0,
0,0,0,121,121,121,121,0,0,0,0,0,0,0,0,0,0,0,0,121,121,121,121,121,121,121,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,
91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,
91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0),
(130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,
130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,
130,130,130,130,130,130,130,130,130,130,0,0,0,0,0,0,0,0,0,0,0,0,0,130,130,130,130,
130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,
130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,
130,130,130,130,130,0,0,0,0,0,0,0,130,130,130,130,130,130),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,0),
(94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,
94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,
94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,0,0,0,0,94,
94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,
94,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,94),
(92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,
92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,
92,92,92,92,92,92,92,92,92,92,92,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,101,101,101,101,101,
101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,0,
0,0,0,0,0,0,101,101,101,101,101,101,101,101,101,101,0,0,0,0,0,0),
(96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,96,
96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,
111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,
111,111,111,111,111,111,111,111,111,111,111,111,111,0,0,0,0,0,0,0,0,0),
(100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,0,0,100,100,100,100,
100,100,100,100,100,100,100,100,100,100,100,100,0,19,19,19,19,19,19,19,19,19,19,19,
19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0),
(109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,109,109,
109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,
109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(129,129,129,129,129,129,129,0,129,0,129,129,129,129,0,129,129,129,129,129,129,129,
129,129,129,129,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,0,0,
0,0,0,0,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,
123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,0,0,0,
0,0,123,123,123,123,123,123,123,123,123,123,0,0,0,0,0,0),
(107,107,107,107,0,107,107,107,107,107,107,107,107,0,0,107,107,0,0,107,107,107,107,
107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,0,107,107,
107,107,107,107,107,0,107,107,0,107,107,107,107,107,0,0,107,107,107,107,107,107,107,
107,107,0,0,107,107,0,0,107,107,107,0,0,107,0,0,0,0,0,0,107,0,0,0,0,0,107,107,107,
107,107,107,107,0,0,107,107,107,107,107,107,107,0,0,0,107,107,107,107,107,0,0,0,0,
0,0,0,0,0,0,0),
(124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,
124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,
124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,
124,124,124,124,124,124,124,124,124,124,0,0,0,0,0,0,0,0,124,124,124,124,124,124,124,
124,124,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0),
(122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,
122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,
122,122,122,122,122,122,122,122,122,122,122,122,122,0,0,122,122,122,122,122,122,122,
122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,
122,122,122,122,122,122,122,122,122,122,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,
114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,
114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,
114,114,114,114,114,114,114,0,0,0,0,0,0,0,0,0,0,0,114,114,114,114,114,114,114,114,
114,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0),
(102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,
102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,
102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,0,0,0,0,0,0,0,0,102,102,
102,102,102,102,102,102,102,102,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,
126,126,126,126,126,126,0,0,0,126,126,126,126,126,126,126,126,126,126,126,126,126,
126,126,0,0,0,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,125,125,125,
125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,
125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,
125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,
125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,0,0,0,0,0,0,
0,0,0,125),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,
119,119,119,119,119,119,0,0,0,0,0,0,0),
(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63),
(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,0,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0),
(63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,
63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81),
(81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,
81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127),
(127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,
127,127,127,127,127,127,127,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84),
(84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,
84,84,84,0,0,0,0,0,0,0,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,
115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,0,115,115,115,115,
115,115,115,115,115,115,0,0,0,0,115,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,
104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,
104,104,104,104,104,104,104,104,0,0,104,104,104,104,104,104,0,0,0,0,0,0,0,0,0,0),
(108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,0,0,0,0,0,0,0,0,0,0,108,108,108,108,108,108,108,108,
108,108,0,108,108,108,108,108,108,108,0,108,108,108,108,108,108,108,108,108,108,108,
108,108,108,108,108,108,108,108,108,108,0,0,0,0,0,108,108,108),
(108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0,0,0,0,0,0,0,0,0,0,0,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(34,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0),
(105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,
105,105,105,0,0,0,0,0,105,105,105,105,105,105,105,105,105,105,105,105,105,0,0,0),
(105,105,105,105,105,105,105,105,105,0,0,0,0,0,0,0,105,105,105,105,105,105,105,105,
105,105,0,0,105,105,105,105,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,41,41,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,41,41,41,41,41),
(41,41,41,1,1,41,41,41,41,41,41,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,41,41,41,41,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,1,0,0,1,1,0,
0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,
131,131,131),
(131,131,131,131,131,131,131,131,131,131,131,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,
131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113),
(113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,113,113,113,113,0,0,113,113,113,113,113,113,113,113,113,113,113,113,113,
113,113,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,7,7,0,7,0,0,7,
0,7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,0,7,0,7,0,0,0,0,0,0,7,0,0,0,0,7,0,7,0,7,0,7,7,7,0,
7,7,0,7,0,0,7,0,7,0,7,0,7,0,7,0,7,7,0,7,0,0,7,7,7,7,0,7,7,7,7,7,7,7,0,7,7,7,7,0,7,
7,7,7,0,7,0),
(7,7,7,7,7,7,7,7,7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,7,7,7,0,7,7,7,
7,7,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(33,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
0,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,
1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,0,0,
0,0,0,0,0,0,0,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,0,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,36,36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,
36,36,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,1,1,1),
(41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41),
(41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,
41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
);

// FLREUnicodeScriptArrayIndex: 1136 bytes, 27 blocks with 32 items per 1 bytes and 272 indices per 1 bytes
const FLREUnicodeScriptArrayIndexBlockBits=5;
      FLREUnicodeScriptArrayIndexBlockMask=31;
      FLREUnicodeScriptArrayIndexBlockSize=32;
      FLREUnicodeScriptArrayIndexBlockCount=27;
      FLREUnicodeScriptArrayIndexBlockData:array[0..26,0..31] of byte=(
(0,1,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,
29),
(30,31,32,32,33,34,35,36,37,37,37,37,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,
52,2,2,53,54),
(55,56,57,58,59,59,59,60,61,59,59,59,59,59,59,59,62,62,59,59,59,59,63,64,65,66,67,
68,69,70,71,72),
(73,74,75,76,77,78,79,59,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,71),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
80,71,71,71,71),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,71),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,81),
(82,82,82,82,82,82,82,82,82,83,84,84,85,86,87,88,89,90,91,92,93,94,95,96,32,32,32,
32,32,32,32,32),
(32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32),
(32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,97,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,71,71,99,100,101,102,103,103,
104,105,106,107,108,109),
(110,111,112,113,98,114,115,116,117,118,119,98,120,120,121,98,122,123,124,125,126,
127,128,129,130,131,98,98,132,98,98,98),
(133,134,135,136,137,138,139,98,98,140,98,141,142,143,144,98,98,145,98,98,98,146,
98,98,98,98,98,98,98,98,98,98),
(147,147,147,147,147,147,147,148,149,147,150,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,98,98,98,98),
(151,151,151,151,151,151,151,151,152,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,98,98,98),
(98,98,98,98,98,98,98,98,153,153,153,153,154,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,98,98),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,155,155,155,155,156,157,158,159,
98,98,98,98,98,98,160,161),
(162,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,163,164,
98,98,98,98,98,98),
(59,165,166,167,168,98,169,98,170,171,172,59,59,173,59,174,175,175,175,175,175,176,
98,98,98,98,98,98,98,98,98,98),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,177,178,98,98,98,98,98,98,98,98,
98,98,179,180,98,98),
(181,182,183,184,185,98,59,59,59,59,186,187,59,188,189,190,191,192,193,194,98,98,
98,98,98,98,98,98,98,98,98,98),
(71,71,71,71,71,71,71,71,71,71,71,71,71,195,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,71,71,71),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,196,71,197,71,71,71,71,71,71,71,71,71,
71,71,71,71,71,71),
(71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,
71,71,198,98,98),
(98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,71,71,71,71,199,98,98,98,98,98,98,
98,98,98,98,98),
(200,98,201,202,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,
98,98,98,98,98,98)
);
      FLREUnicodeScriptArrayIndexIndexCount=27;
      FLREUnicodeScriptArrayIndexIndexData:array[0..271] of byte=(
0,1,2,3,4,5,5,5,5,6,7,8,8,9,10,11,12,13,14,15,16,10,17,10,10,10,10,18,10,19,20,21,
5,5,5,5,5,5,5,5,5,5,22,23,24,10,10,25,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,26,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10
);


// FLREUnicodeUpperCaseDeltaArray: 26624 bytes, 35 blocks with 128 items per 4 bytes and 8704 indices per 4 bytes
const FLREUnicodeUpperCaseDeltaArrayBlockBits=7;
      FLREUnicodeUpperCaseDeltaArrayBlockMask=127;
      FLREUnicodeUpperCaseDeltaArrayBlockSize=128;
      FLREUnicodeUpperCaseDeltaArrayBlockCount=35;
      FLREUnicodeUpperCaseDeltaArrayBlockData:array[0..34,0..127] of longint=(
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,743,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,-32,-32,-32,-32,-32,-32,-32,121),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-232,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,-300),
(195,0,0,-1,0,-1,0,0,-1,0,0,0,-1,0,0,0,0,0,-1,0,0,97,0,0,0,-1,163,0,0,0,130,0,0,-1,
0,-1,0,-1,0,0,-1,0,0,0,0,-1,0,0,-1,0,0,0,-1,0,-1,0,0,-1,0,0,0,-1,0,56,0,0,0,0,0,-1,
-2,0,-1,-2,0,-1,-2,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-79,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,-2,0,-1,0,0,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,-1,0,0,10815,10815,
0,-1,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,10783,10780,10782,-210,-206,0,-205,-205,0,-202,
0,-203,42319,0,0,0,-205,42315,0,-207,0,42280,42308,0,-209,-211,0,10743,42305,0,0,
-211,0,10749,-213,0,0,-214,0,0,0,0,0,0,0,10727,0,0),
(-218,0,0,-218,0,0,0,42282,-218,-69,-217,-217,-71,0,0,0,0,0,-219,0,0,0,0,0,0,0,0,
0,0,42261,42258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,-1,
0,0,0,130,130,130,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-38,-37,-37,-37,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-64,-63,-63,0,-62,-57,0,0,0,-47,
-54,-8,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-86,-80,7,-116,
0,-96,0,0,-1,0,0,-1,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-80,-80,-80,-80,-80,-80,
-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-15,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48),
(-48,-48,-48,-48,-48,-48,-48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,
-8,-8,-8,-8,-8,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35332,
0,0,0,3814,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,-59,0,0,0,0,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,
0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,
8,0,8,0,8,0,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,74,74,86,86,86,86,100,
100,128,128,112,112,126,126,0,0),
(8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,
0,0,0,0,0,0,0,0,8,8,0,9,0,0,0,0,0,0,0,0,0,0,-7205,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,
0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,
0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-28,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-16,-16,-16,-16,
-16,-16,-16,-16,-16,-16,-16,-16,-16,-16,-16),
(0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-26,
-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,
-26,-26,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,0,0,-1,0,0,0,-10795,-10792,0,-1,0,-1,0,-1,0,0,
0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0),
(-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,
-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,
-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,0,-7264,0,0,0,0,0,-7264,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-928,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864),
(-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,
-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
);

// FLREUnicodeUpperCaseDeltaArrayIndex: 520 bytes, 6 blocks with 64 items per 1 bytes and 136 indices per 1 bytes
const FLREUnicodeUpperCaseDeltaArrayIndexBlockBits=6;
      FLREUnicodeUpperCaseDeltaArrayIndexBlockMask=63;
      FLREUnicodeUpperCaseDeltaArrayIndexBlockSize=64;
      FLREUnicodeUpperCaseDeltaArrayIndexBlockCount=6;
      FLREUnicodeUpperCaseDeltaArrayIndexBlockData:array[0..5,0..63] of byte=(
(0,1,2,3,4,5,6,7,8,9,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,14,12,15,16,17,18),
(12,12,19,20,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,22,23,24,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,25,26,27,28,12,12,12,12,12,12,29,30,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,31,12),
(12,12,12,12,12,12,12,12,32,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,33,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,12,12,12,
12,12,12,12,12,12,12,12,12,12)
);
      FLREUnicodeUpperCaseDeltaArrayIndexIndexCount=6;
      FLREUnicodeUpperCaseDeltaArrayIndexIndexData:array[0..135] of byte=(
0,1,2,2,2,3,2,4,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2
);

// FLREUnicodeLowerCaseDeltaArray: 24064 bytes, 30 blocks with 128 items per 4 bytes and 8704 indices per 4 bytes
const FLREUnicodeLowerCaseDeltaArrayBlockBits=7;
      FLREUnicodeLowerCaseDeltaArrayBlockMask=127;
      FLREUnicodeLowerCaseDeltaArrayBlockSize=128;
      FLREUnicodeLowerCaseDeltaArrayBlockCount=30;
      FLREUnicodeLowerCaseDeltaArrayBlockData:array[0..29,0..127] of longint=(
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,0,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,-199,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
-121,1,0,1,0,1,0,0),
(0,210,1,0,1,0,206,1,0,205,205,1,0,0,79,202,203,1,0,205,207,0,211,209,1,0,0,0,211,
213,0,214,1,0,1,0,1,0,218,1,0,218,0,0,1,0,218,1,0,217,217,1,0,1,0,219,1,0,0,0,1,0,
0,0,0,0,0,0,2,1,0,2,1,0,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,0,2,1,0,1,0,-97,-56,1,0,1,0,1,0,1,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,-130,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,10795,1,0,-163,10792,0,0,1,0,-195,69,71,1,0,
1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,
0,0,0,0,0,116),
(0,0,0,0,0,0,38,0,37,37,37,0,64,0,63,63,0,32,32,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,0,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,0,0,0,0,-60,0,0,1,0,-7,1,0,0,-130,-130,-130),
(80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,32,32,32,32,32,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0),
(1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,15,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7264,7264,7264,7264,
7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,
7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,7264,
0,7264,0,0,0,0,0,7264,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,38864,
38864,38864,38864,38864,38864,38864,38864,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,-7615,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0),
(0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,0,0,0,
0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,
0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,0,0,0,-8,0,-8,0,-8,0,-8,0,0,0,0,0,0,
0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,
0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-8,-8,0,0,0,0,0,0,0,0,-8,-8,-74,-74,-9,0,0,0,0,
0,0,0,0,0,0,0,-86,-86,-86,-86,-9,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-100,-100,0,0,0,0,0,
0,0,0,0,0,0,0,-8,-8,-112,-112,-7,0,0,0,0,0,0,0,0,0,0,0,-128,-128,-126,-126,-9,0,0,
0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7517,
0,0,0,-8383,-8262,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,
48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,-10743,
-3814,-10727,0,0,1,0,1,0,1,0,-10780,-10749,-10783,-10782,0,1,0,0,1,0,0,0,0,0,0,0,
0,-10815,-10815),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,0,
1,0,1,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,
0,1,0,-35332,1,0),
(1,0,1,0,1,0,1,0,0,0,0,1,0,-42280,0,0,1,0,1,0,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
1,0,1,0,-42308,-42319,-42315,-42305,0,0,-42258,-42282,-42261,928,1,0,1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,
40,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,
64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,32,32,32,32,32,
32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
);

// FLREUnicodeLowerCaseDeltaArrayIndex: 520 bytes, 6 blocks with 64 items per 1 bytes and 136 indices per 1 bytes
const FLREUnicodeLowerCaseDeltaArrayIndexBlockBits=6;
      FLREUnicodeLowerCaseDeltaArrayIndexBlockMask=63;
      FLREUnicodeLowerCaseDeltaArrayIndexBlockSize=64;
      FLREUnicodeLowerCaseDeltaArrayIndexBlockCount=6;
      FLREUnicodeLowerCaseDeltaArrayIndexBlockData:array[0..5,0..63] of byte=(
(0,1,2,3,4,5,6,7,8,9,10,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,5,5,5,5,5,
12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,14,15,16),
(5,5,17,18,5,5,5,5,5,19,5,5,5,5,5,5,5,5,5,5,5,5,5,5,20,21,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,22,23,24,25,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5),
(5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,26,5),
(5,5,5,5,5,5,5,5,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,28,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,29,5,5,5,5,5,5,5,5,5,5,5,5,5,5)
);
      FLREUnicodeLowerCaseDeltaArrayIndexIndexCount=6;
      FLREUnicodeLowerCaseDeltaArrayIndexIndexData:array[0..135] of byte=(
0,1,2,2,2,3,2,4,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2
);

// FLREUnicodeTitleCaseDeltaArray: 26624 bytes, 35 blocks with 128 items per 4 bytes and 8704 indices per 4 bytes
const FLREUnicodeTitleCaseDeltaArrayBlockBits=7;
      FLREUnicodeTitleCaseDeltaArrayBlockMask=127;
      FLREUnicodeTitleCaseDeltaArrayBlockSize=128;
      FLREUnicodeTitleCaseDeltaArrayBlockCount=35;
      FLREUnicodeTitleCaseDeltaArrayBlockData:array[0..34,0..127] of longint=(
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,743,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,-32,-32,-32,-32,-32,-32,-32,121),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-232,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,0,-1,0,-1,-300),
(195,0,0,-1,0,-1,0,0,-1,0,0,0,-1,0,0,0,0,0,-1,0,0,97,0,0,0,-1,163,0,0,0,130,0,0,-1,
0,-1,0,-1,0,0,-1,0,0,0,0,-1,0,0,-1,0,0,0,-1,0,-1,0,0,-1,0,0,0,-1,0,56,0,0,0,0,1,0,
-1,1,0,-1,1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-79,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,1,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,-1,0,0,10815,10815,
0,-1,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,10783,10780,10782,-210,-206,0,-205,-205,0,-202,
0,-203,42319,0,0,0,-205,42315,0,-207,0,42280,42308,0,-209,-211,0,10743,42305,0,0,
-211,0,10749,-213,0,0,-214,0,0,0,0,0,0,0,10727,0,0),
(-218,0,0,-218,0,0,0,42282,-218,-69,-217,-217,-71,0,0,0,0,0,-219,0,0,0,0,0,0,0,0,
0,0,42261,42258,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,-1,
0,0,0,130,130,130,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,-38,-37,-37,-37,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-64,-63,-63,0,-62,-57,0,0,0,-47,
-54,-8,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-86,-80,7,-116,
0,-96,0,0,-1,0,0,-1,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-80,-80,-80,-80,-80,-80,
-80,-80,-80,-80,-80,-80,-80,-80,-80,-80,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,-15,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48),
(-48,-48,-48,-48,-48,-48,-48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,
-8,-8,-8,-8,-8,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,35332,
0,0,0,3814,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,-59,0,0,0,0,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1),
(8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,
0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,
8,0,8,0,8,0,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,74,74,86,86,86,86,100,
100,128,128,112,112,126,126,0,0),
(8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,
0,0,0,0,0,0,0,0,8,8,0,9,0,0,0,0,0,0,0,0,0,0,-7205,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,
0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,
0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-28,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-16,-16,-16,-16,
-16,-16,-16,-16,-16,-16,-16,-16,-16,-16,-16),
(0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-26,
-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,
-26,-26,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,-48,
-48,-48,-48,-48,-48,-48,-48,-48,-48,0,0,-1,0,0,0,-10795,-10792,0,-1,0,-1,0,-1,0,0,
0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0),
(-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,
-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,
-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,-7264,0,-7264,0,0,0,0,0,-7264,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,0,
-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,-1),
(0,-1,0,-1,0,-1,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,-1,0,0,0,-1,0,-1,0,-1,0,-1,0,-1,0,-1,
0,-1,0,-1,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,-928,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864),
(-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,-38864,
-38864,-38864,-38864,-38864,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,
-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-64,-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,
-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,-64,
0,0,0,0,0,0,0,0,0,0,0,0,0),
(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,
-32,-32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
);

// FLREUnicodeTitleCaseDeltaArrayIndex: 520 bytes, 6 blocks with 64 items per 1 bytes and 136 indices per 1 bytes
const FLREUnicodeTitleCaseDeltaArrayIndexBlockBits=6;
      FLREUnicodeTitleCaseDeltaArrayIndexBlockMask=63;
      FLREUnicodeTitleCaseDeltaArrayIndexBlockSize=64;
      FLREUnicodeTitleCaseDeltaArrayIndexBlockCount=6;
      FLREUnicodeTitleCaseDeltaArrayIndexBlockData:array[0..5,0..63] of byte=(
(0,1,2,3,4,5,6,7,8,9,10,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,14,12,15,16,17,18),
(12,12,19,20,12,12,12,12,12,21,12,12,12,12,12,12,12,12,12,12,12,12,12,12,22,23,24,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,25,26,27,28,12,12,12,12,12,12,29,30,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12),
(12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
12,12,12,12,12,12,12,12,31,12),
(12,12,12,12,12,12,12,12,32,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,33,12,
12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,34,12,12,12,12,
12,12,12,12,12,12,12,12,12,12)
);
      FLREUnicodeTitleCaseDeltaArrayIndexIndexCount=6;
      FLREUnicodeTitleCaseDeltaArrayIndexIndexData:array[0..135] of byte=(
0,1,2,2,2,3,2,4,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2
);

const FLREucrWORDS=0;
      FLREucrDIGITS=1;
      FLREucrWHITESPACES=2;
      FLREucrLAST=FLREucrWHITESPACES;

type PFLREUnicodeCharRange=^TFLREUnicodeCharRange;
     TFLREUnicodeCharRange=array[0..1] of longword;

     PFLREUnicodeCharRanges=^TFLREUnicodeCharRanges;
     TFLREUnicodeCharRanges=array[0..0] of TFLREUnicodeCharRange;

const FLREUnicodeCharRangeClasses0:array[0..627] of TFLREUnicodeCharRange=(
(48,57),
(65,90),
(95,95),
(97,122),
(170,170),
(178,179),
(181,181),
(185,186),
(188,190),
(192,214),
(216,246),
(248,705),
(710,721),
(736,740),
(748,748),
(750,750),
(880,884),
(886,887),
(890,893),
(895,895),
(902,902),
(904,906),
(908,908),
(910,929),
(931,1013),
(1015,1153),
(1162,1327),
(1329,1366),
(1369,1369),
(1377,1415),
(1488,1514),
(1520,1522),
(1568,1610),
(1632,1641),
(1646,1647),
(1649,1747),
(1749,1749),
(1765,1766),
(1774,1788),
(1791,1791),
(1808,1808),
(1810,1839),
(1869,1957),
(1969,1969),
(1984,2026),
(2036,2037),
(2042,2042),
(2048,2069),
(2074,2074),
(2084,2084),
(2088,2088),
(2112,2136),
(2208,2228),
(2308,2361),
(2365,2365),
(2384,2384),
(2392,2401),
(2406,2415),
(2417,2432),
(2437,2444),
(2447,2448),
(2451,2472),
(2474,2480),
(2482,2482),
(2486,2489),
(2493,2493),
(2510,2510),
(2524,2525),
(2527,2529),
(2534,2545),
(2548,2553),
(2565,2570),
(2575,2576),
(2579,2600),
(2602,2608),
(2610,2611),
(2613,2614),
(2616,2617),
(2649,2652),
(2654,2654),
(2662,2671),
(2674,2676),
(2693,2701),
(2703,2705),
(2707,2728),
(2730,2736),
(2738,2739),
(2741,2745),
(2749,2749),
(2768,2768),
(2784,2785),
(2790,2799),
(2809,2809),
(2821,2828),
(2831,2832),
(2835,2856),
(2858,2864),
(2866,2867),
(2869,2873),
(2877,2877),
(2908,2909),
(2911,2913),
(2918,2927),
(2929,2935),
(2947,2947),
(2949,2954),
(2958,2960),
(2962,2965),
(2969,2970),
(2972,2972),
(2974,2975),
(2979,2980),
(2984,2986),
(2990,3001),
(3024,3024),
(3046,3058),
(3077,3084),
(3086,3088),
(3090,3112),
(3114,3129),
(3133,3133),
(3160,3162),
(3168,3169),
(3174,3183),
(3192,3198),
(3205,3212),
(3214,3216),
(3218,3240),
(3242,3251),
(3253,3257),
(3261,3261),
(3294,3294),
(3296,3297),
(3302,3311),
(3313,3314),
(3333,3340),
(3342,3344),
(3346,3386),
(3389,3389),
(3406,3406),
(3423,3425),
(3430,3445),
(3450,3455),
(3461,3478),
(3482,3505),
(3507,3515),
(3517,3517),
(3520,3526),
(3558,3567),
(3585,3632),
(3634,3635),
(3648,3654),
(3664,3673),
(3713,3714),
(3716,3716),
(3719,3720),
(3722,3722),
(3725,3725),
(3732,3735),
(3737,3743),
(3745,3747),
(3749,3749),
(3751,3751),
(3754,3755),
(3757,3760),
(3762,3763),
(3773,3773),
(3776,3780),
(3782,3782),
(3792,3801),
(3804,3807),
(3840,3840),
(3872,3891),
(3904,3911),
(3913,3948),
(3976,3980),
(4096,4138),
(4159,4169),
(4176,4181),
(4186,4189),
(4193,4193),
(4197,4198),
(4206,4208),
(4213,4225),
(4238,4238),
(4240,4249),
(4256,4293),
(4295,4295),
(4301,4301),
(4304,4346),
(4348,4680),
(4682,4685),
(4688,4694),
(4696,4696),
(4698,4701),
(4704,4744),
(4746,4749),
(4752,4784),
(4786,4789),
(4792,4798),
(4800,4800),
(4802,4805),
(4808,4822),
(4824,4880),
(4882,4885),
(4888,4954),
(4969,4988),
(4992,5007),
(5024,5109),
(5112,5117),
(5121,5740),
(5743,5759),
(5761,5786),
(5792,5866),
(5870,5880),
(5888,5900),
(5902,5905),
(5920,5937),
(5952,5969),
(5984,5996),
(5998,6000),
(6016,6067),
(6103,6103),
(6108,6108),
(6112,6121),
(6128,6137),
(6160,6169),
(6176,6263),
(6272,6312),
(6314,6314),
(6320,6389),
(6400,6430),
(6470,6509),
(6512,6516),
(6528,6571),
(6576,6601),
(6608,6618),
(6656,6678),
(6688,6740),
(6784,6793),
(6800,6809),
(6823,6823),
(6917,6963),
(6981,6987),
(6992,7001),
(7043,7072),
(7086,7141),
(7168,7203),
(7232,7241),
(7245,7293),
(7401,7404),
(7406,7409),
(7413,7414),
(7424,7615),
(7680,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8016,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8064,8116),
(8118,8124),
(8126,8126),
(8130,8132),
(8134,8140),
(8144,8147),
(8150,8155),
(8160,8172),
(8178,8180),
(8182,8188),
(8255,8256),
(8276,8276),
(8304,8305),
(8308,8313),
(8319,8329),
(8336,8348),
(8450,8450),
(8455,8455),
(8458,8467),
(8469,8469),
(8473,8477),
(8484,8484),
(8486,8486),
(8488,8488),
(8490,8493),
(8495,8505),
(8508,8511),
(8517,8521),
(8526,8526),
(8528,8585),
(9312,9371),
(9450,9471),
(10102,10131),
(11264,11310),
(11312,11358),
(11360,11492),
(11499,11502),
(11506,11507),
(11517,11517),
(11520,11557),
(11559,11559),
(11565,11565),
(11568,11623),
(11631,11631),
(11648,11670),
(11680,11686),
(11688,11694),
(11696,11702),
(11704,11710),
(11712,11718),
(11720,11726),
(11728,11734),
(11736,11742),
(11823,11823),
(12293,12295),
(12321,12329),
(12337,12341),
(12344,12348),
(12353,12438),
(12445,12447),
(12449,12538),
(12540,12543),
(12549,12589),
(12593,12686),
(12690,12693),
(12704,12730),
(12784,12799),
(12832,12841),
(12872,12879),
(12881,12895),
(12928,12937),
(12977,12991),
(13312,19893),
(19968,40917),
(40960,42124),
(42192,42237),
(42240,42508),
(42512,42539),
(42560,42606),
(42623,42653),
(42656,42735),
(42775,42783),
(42786,42888),
(42891,42925),
(42928,42935),
(42999,43009),
(43011,43013),
(43015,43018),
(43020,43042),
(43056,43061),
(43072,43123),
(43138,43187),
(43216,43225),
(43250,43255),
(43259,43259),
(43261,43261),
(43264,43301),
(43312,43334),
(43360,43388),
(43396,43442),
(43471,43481),
(43488,43492),
(43494,43518),
(43520,43560),
(43584,43586),
(43588,43595),
(43600,43609),
(43616,43638),
(43642,43642),
(43646,43695),
(43697,43697),
(43701,43702),
(43705,43709),
(43712,43712),
(43714,43714),
(43739,43741),
(43744,43754),
(43762,43764),
(43777,43782),
(43785,43790),
(43793,43798),
(43808,43814),
(43816,43822),
(43824,43866),
(43868,43877),
(43888,44002),
(44016,44025),
(44032,55203),
(55216,55238),
(55243,55291),
(63744,64109),
(64112,64217),
(64256,64262),
(64275,64279),
(64285,64285),
(64287,64296),
(64298,64310),
(64312,64316),
(64318,64318),
(64320,64321),
(64323,64324),
(64326,64433),
(64467,64829),
(64848,64911),
(64914,64967),
(65008,65019),
(65075,65076),
(65101,65103),
(65136,65140),
(65142,65276),
(65296,65305),
(65313,65338),
(65343,65343),
(65345,65370),
(65382,65470),
(65474,65479),
(65482,65487),
(65490,65495),
(65498,65500),
(65536,65547),
(65549,65574),
(65576,65594),
(65596,65597),
(65599,65613),
(65616,65629),
(65664,65786),
(65799,65843),
(65856,65912),
(65930,65931),
(66176,66204),
(66208,66256),
(66273,66299),
(66304,66339),
(66352,66378),
(66384,66421),
(66432,66461),
(66464,66499),
(66504,66511),
(66513,66517),
(66560,66717),
(66720,66729),
(66816,66855),
(66864,66915),
(67072,67382),
(67392,67413),
(67424,67431),
(67584,67589),
(67592,67592),
(67594,67637),
(67639,67640),
(67644,67644),
(67647,67669),
(67672,67702),
(67705,67742),
(67751,67759),
(67808,67826),
(67828,67829),
(67835,67867),
(67872,67897),
(67968,68023),
(68028,68047),
(68050,68096),
(68112,68115),
(68117,68119),
(68121,68147),
(68160,68167),
(68192,68222),
(68224,68255),
(68288,68295),
(68297,68324),
(68331,68335),
(68352,68405),
(68416,68437),
(68440,68466),
(68472,68497),
(68521,68527),
(68608,68680),
(68736,68786),
(68800,68850),
(68858,68863),
(69216,69246),
(69635,69687),
(69714,69743),
(69763,69807),
(69840,69864),
(69872,69881),
(69891,69926),
(69942,69951),
(69968,70002),
(70006,70006),
(70019,70066),
(70081,70084),
(70096,70106),
(70108,70108),
(70113,70132),
(70144,70161),
(70163,70187),
(70272,70278),
(70280,70280),
(70282,70285),
(70287,70301),
(70303,70312),
(70320,70366),
(70384,70393),
(70405,70412),
(70415,70416),
(70419,70440),
(70442,70448),
(70450,70451),
(70453,70457),
(70461,70461),
(70480,70480),
(70493,70497),
(70784,70831),
(70852,70853),
(70855,70855),
(70864,70873),
(71040,71086),
(71128,71131),
(71168,71215),
(71236,71236),
(71248,71257),
(71296,71338),
(71360,71369),
(71424,71449),
(71472,71483),
(71840,71922),
(71935,71935),
(72384,72440),
(73728,74649),
(74752,74862),
(74880,75075),
(77824,78894),
(82944,83526),
(92160,92728),
(92736,92766),
(92768,92777),
(92880,92909),
(92928,92975),
(92992,92995),
(93008,93017),
(93019,93025),
(93027,93047),
(93053,93071),
(93952,94020),
(94032,94032),
(94099,94111),
(110592,110593),
(113664,113770),
(113776,113788),
(113792,113800),
(113808,113817),
(119648,119665),
(119808,119892),
(119894,119964),
(119966,119967),
(119970,119970),
(119973,119974),
(119977,119980),
(119982,119993),
(119995,119995),
(119997,120003),
(120005,120069),
(120071,120074),
(120077,120084),
(120086,120092),
(120094,120121),
(120123,120126),
(120128,120132),
(120134,120134),
(120138,120144),
(120146,120485),
(120488,120512),
(120514,120538),
(120540,120570),
(120572,120596),
(120598,120628),
(120630,120654),
(120656,120686),
(120688,120712),
(120714,120744),
(120746,120770),
(120772,120779),
(120782,120831),
(124928,125124),
(125127,125135),
(126464,126467),
(126469,126495),
(126497,126498),
(126500,126500),
(126503,126503),
(126505,126514),
(126516,126519),
(126521,126521),
(126523,126523),
(126530,126530),
(126535,126535),
(126537,126537),
(126539,126539),
(126541,126543),
(126545,126546),
(126548,126548),
(126551,126551),
(126553,126553),
(126555,126555),
(126557,126557),
(126559,126559),
(126561,126562),
(126564,126564),
(126567,126570),
(126572,126578),
(126580,126583),
(126585,126588),
(126590,126590),
(126592,126601),
(126603,126619),
(126625,126627),
(126629,126633),
(126635,126651),
(127232,127244),
(131072,173782),
(173824,177972),
(177984,178205),
(178208,183969),
(194560,195101)
);

const FLREUnicodeCharRangeClasses1:array[0..50] of TFLREUnicodeCharRange=(
(48,57),
(1632,1641),
(1776,1785),
(1984,1993),
(2406,2415),
(2534,2543),
(2662,2671),
(2790,2799),
(2918,2927),
(3046,3055),
(3174,3183),
(3302,3311),
(3430,3439),
(3558,3567),
(3664,3673),
(3792,3801),
(3872,3881),
(4160,4169),
(4240,4249),
(6112,6121),
(6160,6169),
(6470,6479),
(6608,6617),
(6784,6793),
(6800,6809),
(6992,7001),
(7088,7097),
(7232,7241),
(7248,7257),
(42528,42537),
(43216,43225),
(43264,43273),
(43472,43481),
(43504,43513),
(43600,43609),
(44016,44025),
(65296,65305),
(66720,66729),
(69734,69743),
(69872,69881),
(69942,69951),
(70096,70105),
(70384,70393),
(70864,70873),
(71248,71257),
(71360,71369),
(71472,71481),
(71904,71913),
(92768,92777),
(93008,93017),
(120782,120831)
);

const FLREUnicodeCharRangeClasses2:array[0..11] of TFLREUnicodeCharRange=(
(9,13),
(32,32),
(160,160),
(5760,5760),
(6158,6158),
(8192,8203),
(8232,8233),
(8239,8239),
(8287,8287),
(12288,12288),
(65279,65279),
(65534,65534)
);

const FLREUnicodeCharRangeClassesData:array[0..2] of pointer=(
@FLREUnicodeCharRangeClasses0,
@FLREUnicodeCharRangeClasses1,
@FLREUnicodeCharRangeClasses2
);

const FLREUnicodeCharRangeClassesCounts:array[0..2] of longint=(
628,
51,
12
);

const FLRECountUnicodeCategoryBlocks=29;

const FLREUnicodeCategoryBlocks0:array[0..612] of TFLREUnicodeCharRange=(
(888,889),
(896,899),
(907,907),
(909,909),
(930,930),
(1328,1328),
(1367,1368),
(1376,1376),
(1416,1416),
(1419,1420),
(1424,1424),
(1480,1487),
(1515,1519),
(1525,1535),
(1565,1565),
(1806,1806),
(1867,1868),
(1970,1983),
(2043,2047),
(2094,2095),
(2111,2111),
(2140,2141),
(2143,2207),
(2229,2274),
(2436,2436),
(2445,2446),
(2449,2450),
(2473,2473),
(2481,2481),
(2483,2485),
(2490,2491),
(2501,2502),
(2505,2506),
(2511,2518),
(2520,2523),
(2526,2526),
(2532,2533),
(2556,2560),
(2564,2564),
(2571,2574),
(2577,2578),
(2601,2601),
(2609,2609),
(2612,2612),
(2615,2615),
(2618,2619),
(2621,2621),
(2627,2630),
(2633,2634),
(2638,2640),
(2642,2648),
(2653,2653),
(2655,2661),
(2678,2688),
(2692,2692),
(2702,2702),
(2706,2706),
(2729,2729),
(2737,2737),
(2740,2740),
(2746,2747),
(2758,2758),
(2762,2762),
(2766,2767),
(2769,2783),
(2788,2789),
(2802,2808),
(2810,2816),
(2820,2820),
(2829,2830),
(2833,2834),
(2857,2857),
(2865,2865),
(2868,2868),
(2874,2875),
(2885,2886),
(2889,2890),
(2894,2901),
(2904,2907),
(2910,2910),
(2916,2917),
(2936,2945),
(2948,2948),
(2955,2957),
(2961,2961),
(2966,2968),
(2971,2971),
(2973,2973),
(2976,2978),
(2981,2983),
(2987,2989),
(3002,3005),
(3011,3013),
(3017,3017),
(3022,3023),
(3025,3030),
(3032,3045),
(3067,3071),
(3076,3076),
(3085,3085),
(3089,3089),
(3113,3113),
(3130,3132),
(3141,3141),
(3145,3145),
(3150,3156),
(3159,3159),
(3163,3167),
(3172,3173),
(3184,3191),
(3200,3200),
(3204,3204),
(3213,3213),
(3217,3217),
(3241,3241),
(3252,3252),
(3258,3259),
(3269,3269),
(3273,3273),
(3278,3284),
(3287,3293),
(3295,3295),
(3300,3301),
(3312,3312),
(3315,3328),
(3332,3332),
(3341,3341),
(3345,3345),
(3387,3388),
(3397,3397),
(3401,3401),
(3407,3414),
(3416,3422),
(3428,3429),
(3446,3448),
(3456,3457),
(3460,3460),
(3479,3481),
(3506,3506),
(3516,3516),
(3518,3519),
(3527,3529),
(3531,3534),
(3541,3541),
(3543,3543),
(3552,3557),
(3568,3569),
(3573,3584),
(3643,3646),
(3676,3712),
(3715,3715),
(3717,3718),
(3721,3721),
(3723,3724),
(3726,3731),
(3736,3736),
(3744,3744),
(3748,3748),
(3750,3750),
(3752,3753),
(3756,3756),
(3770,3770),
(3774,3775),
(3781,3781),
(3783,3783),
(3790,3791),
(3802,3803),
(3808,3839),
(3912,3912),
(3949,3952),
(3992,3992),
(4029,4029),
(4045,4045),
(4059,4095),
(4294,4294),
(4296,4300),
(4302,4303),
(4681,4681),
(4686,4687),
(4695,4695),
(4697,4697),
(4702,4703),
(4745,4745),
(4750,4751),
(4785,4785),
(4790,4791),
(4799,4799),
(4801,4801),
(4806,4807),
(4823,4823),
(4881,4881),
(4886,4887),
(4955,4956),
(4989,4991),
(5018,5023),
(5110,5111),
(5118,5119),
(5789,5791),
(5881,5887),
(5901,5901),
(5909,5919),
(5943,5951),
(5972,5983),
(5997,5997),
(6001,6001),
(6004,6015),
(6110,6111),
(6122,6127),
(6138,6143),
(6159,6159),
(6170,6175),
(6264,6271),
(6315,6319),
(6390,6399),
(6431,6431),
(6444,6447),
(6460,6463),
(6465,6467),
(6510,6511),
(6517,6527),
(6572,6575),
(6602,6607),
(6619,6621),
(6684,6685),
(6751,6751),
(6781,6782),
(6794,6799),
(6810,6815),
(6830,6831),
(6847,6911),
(6988,6991),
(7037,7039),
(7156,7163),
(7224,7226),
(7242,7244),
(7296,7359),
(7368,7375),
(7415,7415),
(7418,7423),
(7670,7675),
(7958,7959),
(7966,7967),
(8006,8007),
(8014,8015),
(8024,8024),
(8026,8026),
(8028,8028),
(8030,8030),
(8062,8063),
(8117,8117),
(8133,8133),
(8148,8149),
(8156,8156),
(8176,8177),
(8181,8181),
(8191,8191),
(8293,8293),
(8306,8307),
(8335,8335),
(8349,8351),
(8383,8399),
(8433,8447),
(8588,8591),
(9211,9215),
(9255,9279),
(9291,9311),
(11124,11125),
(11158,11159),
(11194,11196),
(11209,11209),
(11218,11243),
(11248,11263),
(11311,11311),
(11359,11359),
(11508,11512),
(11558,11558),
(11560,11564),
(11566,11567),
(11624,11630),
(11633,11646),
(11671,11679),
(11687,11687),
(11695,11695),
(11703,11703),
(11711,11711),
(11719,11719),
(11727,11727),
(11735,11735),
(11743,11743),
(11843,11903),
(11930,11930),
(12020,12031),
(12246,12271),
(12284,12287),
(12352,12352),
(12439,12440),
(12544,12548),
(12590,12592),
(12687,12687),
(12731,12735),
(12772,12783),
(12831,12831),
(13055,13055),
(19894,19903),
(40918,40959),
(42125,42127),
(42183,42191),
(42540,42559),
(42744,42751),
(42926,42927),
(42936,42998),
(43052,43055),
(43066,43071),
(43128,43135),
(43205,43213),
(43226,43231),
(43262,43263),
(43348,43358),
(43389,43391),
(43470,43470),
(43482,43485),
(43519,43519),
(43575,43583),
(43598,43599),
(43610,43611),
(43715,43738),
(43767,43776),
(43783,43784),
(43791,43792),
(43799,43807),
(43815,43815),
(43823,43823),
(43878,43887),
(44014,44015),
(44026,44031),
(55204,55215),
(55239,55242),
(55292,55295),
(64110,64111),
(64218,64255),
(64263,64274),
(64280,64284),
(64311,64311),
(64317,64317),
(64319,64319),
(64322,64322),
(64325,64325),
(64450,64466),
(64832,64847),
(64912,64913),
(64968,65007),
(65022,65023),
(65050,65055),
(65107,65107),
(65127,65127),
(65132,65135),
(65141,65141),
(65277,65278),
(65280,65280),
(65471,65473),
(65480,65481),
(65488,65489),
(65496,65497),
(65501,65503),
(65511,65511),
(65519,65528),
(65534,65535),
(65548,65548),
(65575,65575),
(65595,65595),
(65598,65598),
(65614,65615),
(65630,65663),
(65787,65791),
(65795,65798),
(65844,65846),
(65933,65935),
(65948,65951),
(65953,65999),
(66046,66175),
(66205,66207),
(66257,66271),
(66300,66303),
(66340,66351),
(66379,66383),
(66427,66431),
(66462,66462),
(66500,66503),
(66518,66559),
(66718,66719),
(66730,66815),
(66856,66863),
(66916,66926),
(66928,67071),
(67383,67391),
(67414,67423),
(67432,67583),
(67590,67591),
(67593,67593),
(67638,67638),
(67641,67643),
(67645,67646),
(67670,67670),
(67743,67750),
(67760,67807),
(67827,67827),
(67830,67834),
(67868,67870),
(67898,67902),
(67904,67967),
(68024,68027),
(68048,68049),
(68100,68100),
(68103,68107),
(68116,68116),
(68120,68120),
(68148,68151),
(68155,68158),
(68168,68175),
(68185,68191),
(68256,68287),
(68327,68330),
(68343,68351),
(68406,68408),
(68438,68439),
(68467,68471),
(68498,68504),
(68509,68520),
(68528,68607),
(68681,68735),
(68787,68799),
(68851,68857),
(68864,69215),
(69247,69631),
(69710,69713),
(69744,69758),
(69826,69839),
(69865,69871),
(69882,69887),
(69941,69941),
(69956,69967),
(70007,70015),
(70094,70095),
(70112,70112),
(70133,70143),
(70162,70162),
(70206,70271),
(70279,70279),
(70281,70281),
(70286,70286),
(70302,70302),
(70314,70319),
(70379,70383),
(70394,70399),
(70404,70404),
(70413,70414),
(70417,70418),
(70441,70441),
(70449,70449),
(70452,70452),
(70458,70459),
(70469,70470),
(70473,70474),
(70478,70479),
(70481,70486),
(70488,70492),
(70500,70501),
(70509,70511),
(70517,70783),
(70856,70863),
(70874,71039),
(71094,71095),
(71134,71167),
(71237,71247),
(71258,71295),
(71352,71359),
(71370,71423),
(71450,71452),
(71468,71471),
(71488,71839),
(71923,71934),
(71936,72383),
(72441,73727),
(74650,74751),
(74863,74863),
(74869,74879),
(75076,77823),
(78895,82943),
(83527,92159),
(92729,92735),
(92767,92767),
(92778,92781),
(92784,92879),
(92910,92911),
(92918,92927),
(92998,93007),
(93018,93018),
(93026,93026),
(93048,93052),
(93072,93951),
(94021,94031),
(94079,94094),
(94112,110591),
(110594,113663),
(113771,113775),
(113789,113791),
(113801,113807),
(113818,113819),
(113828,118783),
(119030,119039),
(119079,119080),
(119273,119295),
(119366,119551),
(119639,119647),
(119666,119807),
(119893,119893),
(119965,119965),
(119968,119969),
(119971,119972),
(119975,119976),
(119981,119981),
(119994,119994),
(119996,119996),
(120004,120004),
(120070,120070),
(120075,120076),
(120085,120085),
(120093,120093),
(120122,120122),
(120127,120127),
(120133,120133),
(120135,120137),
(120145,120145),
(120486,120487),
(120780,120781),
(121484,121498),
(121504,121504),
(121520,124927),
(125125,125126),
(125143,126463),
(126468,126468),
(126496,126496),
(126499,126499),
(126501,126502),
(126504,126504),
(126515,126515),
(126520,126520),
(126522,126522),
(126524,126529),
(126531,126534),
(126536,126536),
(126538,126538),
(126540,126540),
(126544,126544),
(126547,126547),
(126549,126550),
(126552,126552),
(126554,126554),
(126556,126556),
(126558,126558),
(126560,126560),
(126563,126563),
(126565,126566),
(126571,126571),
(126579,126579),
(126584,126584),
(126589,126589),
(126591,126591),
(126602,126602),
(126620,126624),
(126628,126628),
(126634,126634),
(126652,126703),
(126706,126975),
(127020,127023),
(127124,127135),
(127151,127152),
(127168,127168),
(127184,127184),
(127222,127231),
(127245,127247),
(127279,127279),
(127340,127343),
(127387,127461),
(127491,127503),
(127547,127551),
(127561,127567),
(127570,127743),
(128378,128378),
(128420,128420),
(128721,128735),
(128749,128751),
(128756,128767),
(128884,128895),
(128981,129023),
(129036,129039),
(129096,129103),
(129114,129119),
(129160,129167),
(129198,129295),
(129305,129407),
(129413,129471),
(129473,131071),
(173783,173823),
(177973,177983),
(178206,178207),
(183970,194559),
(195102,917504),
(917506,917535),
(917632,917759),
(918000,983039),
(1048574,1048575),
(1114110,1114111)
);

const FLREUnicodeCategoryBlocks1:array[0..624] of TFLREUnicodeCharRange=(
(65,90),
(192,214),
(216,222),
(256,256),
(258,258),
(260,260),
(262,262),
(264,264),
(266,266),
(268,268),
(270,270),
(272,272),
(274,274),
(276,276),
(278,278),
(280,280),
(282,282),
(284,284),
(286,286),
(288,288),
(290,290),
(292,292),
(294,294),
(296,296),
(298,298),
(300,300),
(302,302),
(304,304),
(306,306),
(308,308),
(310,310),
(313,313),
(315,315),
(317,317),
(319,319),
(321,321),
(323,323),
(325,325),
(327,327),
(330,330),
(332,332),
(334,334),
(336,336),
(338,338),
(340,340),
(342,342),
(344,344),
(346,346),
(348,348),
(350,350),
(352,352),
(354,354),
(356,356),
(358,358),
(360,360),
(362,362),
(364,364),
(366,366),
(368,368),
(370,370),
(372,372),
(374,374),
(376,377),
(379,379),
(381,381),
(385,386),
(388,388),
(390,391),
(393,395),
(398,401),
(403,404),
(406,408),
(412,413),
(415,416),
(418,418),
(420,420),
(422,423),
(425,425),
(428,428),
(430,431),
(433,435),
(437,437),
(439,440),
(444,444),
(452,452),
(455,455),
(458,458),
(461,461),
(463,463),
(465,465),
(467,467),
(469,469),
(471,471),
(473,473),
(475,475),
(478,478),
(480,480),
(482,482),
(484,484),
(486,486),
(488,488),
(490,490),
(492,492),
(494,494),
(497,497),
(500,500),
(502,504),
(506,506),
(508,508),
(510,510),
(512,512),
(514,514),
(516,516),
(518,518),
(520,520),
(522,522),
(524,524),
(526,526),
(528,528),
(530,530),
(532,532),
(534,534),
(536,536),
(538,538),
(540,540),
(542,542),
(544,544),
(546,546),
(548,548),
(550,550),
(552,552),
(554,554),
(556,556),
(558,558),
(560,560),
(562,562),
(570,571),
(573,574),
(577,577),
(579,582),
(584,584),
(586,586),
(588,588),
(590,590),
(880,880),
(882,882),
(886,886),
(895,895),
(902,902),
(904,906),
(908,908),
(910,911),
(913,929),
(931,939),
(975,975),
(978,980),
(984,984),
(986,986),
(988,988),
(990,990),
(992,992),
(994,994),
(996,996),
(998,998),
(1000,1000),
(1002,1002),
(1004,1004),
(1006,1006),
(1012,1012),
(1015,1015),
(1017,1018),
(1021,1071),
(1120,1120),
(1122,1122),
(1124,1124),
(1126,1126),
(1128,1128),
(1130,1130),
(1132,1132),
(1134,1134),
(1136,1136),
(1138,1138),
(1140,1140),
(1142,1142),
(1144,1144),
(1146,1146),
(1148,1148),
(1150,1150),
(1152,1152),
(1162,1162),
(1164,1164),
(1166,1166),
(1168,1168),
(1170,1170),
(1172,1172),
(1174,1174),
(1176,1176),
(1178,1178),
(1180,1180),
(1182,1182),
(1184,1184),
(1186,1186),
(1188,1188),
(1190,1190),
(1192,1192),
(1194,1194),
(1196,1196),
(1198,1198),
(1200,1200),
(1202,1202),
(1204,1204),
(1206,1206),
(1208,1208),
(1210,1210),
(1212,1212),
(1214,1214),
(1216,1217),
(1219,1219),
(1221,1221),
(1223,1223),
(1225,1225),
(1227,1227),
(1229,1229),
(1232,1232),
(1234,1234),
(1236,1236),
(1238,1238),
(1240,1240),
(1242,1242),
(1244,1244),
(1246,1246),
(1248,1248),
(1250,1250),
(1252,1252),
(1254,1254),
(1256,1256),
(1258,1258),
(1260,1260),
(1262,1262),
(1264,1264),
(1266,1266),
(1268,1268),
(1270,1270),
(1272,1272),
(1274,1274),
(1276,1276),
(1278,1278),
(1280,1280),
(1282,1282),
(1284,1284),
(1286,1286),
(1288,1288),
(1290,1290),
(1292,1292),
(1294,1294),
(1296,1296),
(1298,1298),
(1300,1300),
(1302,1302),
(1304,1304),
(1306,1306),
(1308,1308),
(1310,1310),
(1312,1312),
(1314,1314),
(1316,1316),
(1318,1318),
(1320,1320),
(1322,1322),
(1324,1324),
(1326,1326),
(1329,1366),
(4256,4293),
(4295,4295),
(4301,4301),
(5024,5109),
(7680,7680),
(7682,7682),
(7684,7684),
(7686,7686),
(7688,7688),
(7690,7690),
(7692,7692),
(7694,7694),
(7696,7696),
(7698,7698),
(7700,7700),
(7702,7702),
(7704,7704),
(7706,7706),
(7708,7708),
(7710,7710),
(7712,7712),
(7714,7714),
(7716,7716),
(7718,7718),
(7720,7720),
(7722,7722),
(7724,7724),
(7726,7726),
(7728,7728),
(7730,7730),
(7732,7732),
(7734,7734),
(7736,7736),
(7738,7738),
(7740,7740),
(7742,7742),
(7744,7744),
(7746,7746),
(7748,7748),
(7750,7750),
(7752,7752),
(7754,7754),
(7756,7756),
(7758,7758),
(7760,7760),
(7762,7762),
(7764,7764),
(7766,7766),
(7768,7768),
(7770,7770),
(7772,7772),
(7774,7774),
(7776,7776),
(7778,7778),
(7780,7780),
(7782,7782),
(7784,7784),
(7786,7786),
(7788,7788),
(7790,7790),
(7792,7792),
(7794,7794),
(7796,7796),
(7798,7798),
(7800,7800),
(7802,7802),
(7804,7804),
(7806,7806),
(7808,7808),
(7810,7810),
(7812,7812),
(7814,7814),
(7816,7816),
(7818,7818),
(7820,7820),
(7822,7822),
(7824,7824),
(7826,7826),
(7828,7828),
(7838,7838),
(7840,7840),
(7842,7842),
(7844,7844),
(7846,7846),
(7848,7848),
(7850,7850),
(7852,7852),
(7854,7854),
(7856,7856),
(7858,7858),
(7860,7860),
(7862,7862),
(7864,7864),
(7866,7866),
(7868,7868),
(7870,7870),
(7872,7872),
(7874,7874),
(7876,7876),
(7878,7878),
(7880,7880),
(7882,7882),
(7884,7884),
(7886,7886),
(7888,7888),
(7890,7890),
(7892,7892),
(7894,7894),
(7896,7896),
(7898,7898),
(7900,7900),
(7902,7902),
(7904,7904),
(7906,7906),
(7908,7908),
(7910,7910),
(7912,7912),
(7914,7914),
(7916,7916),
(7918,7918),
(7920,7920),
(7922,7922),
(7924,7924),
(7926,7926),
(7928,7928),
(7930,7930),
(7932,7932),
(7934,7934),
(7944,7951),
(7960,7965),
(7976,7983),
(7992,7999),
(8008,8013),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8031),
(8040,8047),
(8120,8123),
(8136,8139),
(8152,8155),
(8168,8172),
(8184,8187),
(8450,8450),
(8455,8455),
(8459,8461),
(8464,8466),
(8469,8469),
(8473,8477),
(8484,8484),
(8486,8486),
(8488,8488),
(8490,8493),
(8496,8499),
(8510,8511),
(8517,8517),
(8579,8579),
(11264,11310),
(11360,11360),
(11362,11364),
(11367,11367),
(11369,11369),
(11371,11371),
(11373,11376),
(11378,11378),
(11381,11381),
(11390,11392),
(11394,11394),
(11396,11396),
(11398,11398),
(11400,11400),
(11402,11402),
(11404,11404),
(11406,11406),
(11408,11408),
(11410,11410),
(11412,11412),
(11414,11414),
(11416,11416),
(11418,11418),
(11420,11420),
(11422,11422),
(11424,11424),
(11426,11426),
(11428,11428),
(11430,11430),
(11432,11432),
(11434,11434),
(11436,11436),
(11438,11438),
(11440,11440),
(11442,11442),
(11444,11444),
(11446,11446),
(11448,11448),
(11450,11450),
(11452,11452),
(11454,11454),
(11456,11456),
(11458,11458),
(11460,11460),
(11462,11462),
(11464,11464),
(11466,11466),
(11468,11468),
(11470,11470),
(11472,11472),
(11474,11474),
(11476,11476),
(11478,11478),
(11480,11480),
(11482,11482),
(11484,11484),
(11486,11486),
(11488,11488),
(11490,11490),
(11499,11499),
(11501,11501),
(11506,11506),
(42560,42560),
(42562,42562),
(42564,42564),
(42566,42566),
(42568,42568),
(42570,42570),
(42572,42572),
(42574,42574),
(42576,42576),
(42578,42578),
(42580,42580),
(42582,42582),
(42584,42584),
(42586,42586),
(42588,42588),
(42590,42590),
(42592,42592),
(42594,42594),
(42596,42596),
(42598,42598),
(42600,42600),
(42602,42602),
(42604,42604),
(42624,42624),
(42626,42626),
(42628,42628),
(42630,42630),
(42632,42632),
(42634,42634),
(42636,42636),
(42638,42638),
(42640,42640),
(42642,42642),
(42644,42644),
(42646,42646),
(42648,42648),
(42650,42650),
(42786,42786),
(42788,42788),
(42790,42790),
(42792,42792),
(42794,42794),
(42796,42796),
(42798,42798),
(42802,42802),
(42804,42804),
(42806,42806),
(42808,42808),
(42810,42810),
(42812,42812),
(42814,42814),
(42816,42816),
(42818,42818),
(42820,42820),
(42822,42822),
(42824,42824),
(42826,42826),
(42828,42828),
(42830,42830),
(42832,42832),
(42834,42834),
(42836,42836),
(42838,42838),
(42840,42840),
(42842,42842),
(42844,42844),
(42846,42846),
(42848,42848),
(42850,42850),
(42852,42852),
(42854,42854),
(42856,42856),
(42858,42858),
(42860,42860),
(42862,42862),
(42873,42873),
(42875,42875),
(42877,42878),
(42880,42880),
(42882,42882),
(42884,42884),
(42886,42886),
(42891,42891),
(42893,42893),
(42896,42896),
(42898,42898),
(42902,42902),
(42904,42904),
(42906,42906),
(42908,42908),
(42910,42910),
(42912,42912),
(42914,42914),
(42916,42916),
(42918,42918),
(42920,42920),
(42922,42925),
(42928,42932),
(42934,42934),
(65313,65338),
(66560,66599),
(68736,68786),
(71840,71871),
(119808,119833),
(119860,119885),
(119912,119937),
(119964,119964),
(119966,119967),
(119970,119970),
(119973,119974),
(119977,119980),
(119982,119989),
(120016,120041),
(120068,120069),
(120071,120074),
(120077,120084),
(120086,120092),
(120120,120121),
(120123,120126),
(120128,120132),
(120134,120134),
(120138,120144),
(120172,120197),
(120224,120249),
(120276,120301),
(120328,120353),
(120380,120405),
(120432,120457),
(120488,120512),
(120546,120570),
(120604,120628),
(120662,120686),
(120720,120744),
(120778,120778)
);

const FLREUnicodeCategoryBlocks2:array[0..629] of TFLREUnicodeCharRange=(
(97,122),
(181,181),
(223,246),
(248,255),
(257,257),
(259,259),
(261,261),
(263,263),
(265,265),
(267,267),
(269,269),
(271,271),
(273,273),
(275,275),
(277,277),
(279,279),
(281,281),
(283,283),
(285,285),
(287,287),
(289,289),
(291,291),
(293,293),
(295,295),
(297,297),
(299,299),
(301,301),
(303,303),
(305,305),
(307,307),
(309,309),
(311,312),
(314,314),
(316,316),
(318,318),
(320,320),
(322,322),
(324,324),
(326,326),
(328,329),
(331,331),
(333,333),
(335,335),
(337,337),
(339,339),
(341,341),
(343,343),
(345,345),
(347,347),
(349,349),
(351,351),
(353,353),
(355,355),
(357,357),
(359,359),
(361,361),
(363,363),
(365,365),
(367,367),
(369,369),
(371,371),
(373,373),
(375,375),
(378,378),
(380,380),
(382,384),
(387,387),
(389,389),
(392,392),
(396,397),
(402,402),
(405,405),
(409,411),
(414,414),
(417,417),
(419,419),
(421,421),
(424,424),
(426,427),
(429,429),
(432,432),
(436,436),
(438,438),
(441,442),
(445,447),
(454,454),
(457,457),
(460,460),
(462,462),
(464,464),
(466,466),
(468,468),
(470,470),
(472,472),
(474,474),
(476,477),
(479,479),
(481,481),
(483,483),
(485,485),
(487,487),
(489,489),
(491,491),
(493,493),
(495,496),
(499,499),
(501,501),
(505,505),
(507,507),
(509,509),
(511,511),
(513,513),
(515,515),
(517,517),
(519,519),
(521,521),
(523,523),
(525,525),
(527,527),
(529,529),
(531,531),
(533,533),
(535,535),
(537,537),
(539,539),
(541,541),
(543,543),
(545,545),
(547,547),
(549,549),
(551,551),
(553,553),
(555,555),
(557,557),
(559,559),
(561,561),
(563,569),
(572,572),
(575,576),
(578,578),
(583,583),
(585,585),
(587,587),
(589,589),
(591,659),
(661,687),
(881,881),
(883,883),
(887,887),
(891,893),
(912,912),
(940,974),
(976,977),
(981,983),
(985,985),
(987,987),
(989,989),
(991,991),
(993,993),
(995,995),
(997,997),
(999,999),
(1001,1001),
(1003,1003),
(1005,1005),
(1007,1011),
(1013,1013),
(1016,1016),
(1019,1020),
(1072,1119),
(1121,1121),
(1123,1123),
(1125,1125),
(1127,1127),
(1129,1129),
(1131,1131),
(1133,1133),
(1135,1135),
(1137,1137),
(1139,1139),
(1141,1141),
(1143,1143),
(1145,1145),
(1147,1147),
(1149,1149),
(1151,1151),
(1153,1153),
(1163,1163),
(1165,1165),
(1167,1167),
(1169,1169),
(1171,1171),
(1173,1173),
(1175,1175),
(1177,1177),
(1179,1179),
(1181,1181),
(1183,1183),
(1185,1185),
(1187,1187),
(1189,1189),
(1191,1191),
(1193,1193),
(1195,1195),
(1197,1197),
(1199,1199),
(1201,1201),
(1203,1203),
(1205,1205),
(1207,1207),
(1209,1209),
(1211,1211),
(1213,1213),
(1215,1215),
(1218,1218),
(1220,1220),
(1222,1222),
(1224,1224),
(1226,1226),
(1228,1228),
(1230,1231),
(1233,1233),
(1235,1235),
(1237,1237),
(1239,1239),
(1241,1241),
(1243,1243),
(1245,1245),
(1247,1247),
(1249,1249),
(1251,1251),
(1253,1253),
(1255,1255),
(1257,1257),
(1259,1259),
(1261,1261),
(1263,1263),
(1265,1265),
(1267,1267),
(1269,1269),
(1271,1271),
(1273,1273),
(1275,1275),
(1277,1277),
(1279,1279),
(1281,1281),
(1283,1283),
(1285,1285),
(1287,1287),
(1289,1289),
(1291,1291),
(1293,1293),
(1295,1295),
(1297,1297),
(1299,1299),
(1301,1301),
(1303,1303),
(1305,1305),
(1307,1307),
(1309,1309),
(1311,1311),
(1313,1313),
(1315,1315),
(1317,1317),
(1319,1319),
(1321,1321),
(1323,1323),
(1325,1325),
(1327,1327),
(1377,1415),
(5112,5117),
(7424,7467),
(7531,7543),
(7545,7578),
(7681,7681),
(7683,7683),
(7685,7685),
(7687,7687),
(7689,7689),
(7691,7691),
(7693,7693),
(7695,7695),
(7697,7697),
(7699,7699),
(7701,7701),
(7703,7703),
(7705,7705),
(7707,7707),
(7709,7709),
(7711,7711),
(7713,7713),
(7715,7715),
(7717,7717),
(7719,7719),
(7721,7721),
(7723,7723),
(7725,7725),
(7727,7727),
(7729,7729),
(7731,7731),
(7733,7733),
(7735,7735),
(7737,7737),
(7739,7739),
(7741,7741),
(7743,7743),
(7745,7745),
(7747,7747),
(7749,7749),
(7751,7751),
(7753,7753),
(7755,7755),
(7757,7757),
(7759,7759),
(7761,7761),
(7763,7763),
(7765,7765),
(7767,7767),
(7769,7769),
(7771,7771),
(7773,7773),
(7775,7775),
(7777,7777),
(7779,7779),
(7781,7781),
(7783,7783),
(7785,7785),
(7787,7787),
(7789,7789),
(7791,7791),
(7793,7793),
(7795,7795),
(7797,7797),
(7799,7799),
(7801,7801),
(7803,7803),
(7805,7805),
(7807,7807),
(7809,7809),
(7811,7811),
(7813,7813),
(7815,7815),
(7817,7817),
(7819,7819),
(7821,7821),
(7823,7823),
(7825,7825),
(7827,7827),
(7829,7837),
(7839,7839),
(7841,7841),
(7843,7843),
(7845,7845),
(7847,7847),
(7849,7849),
(7851,7851),
(7853,7853),
(7855,7855),
(7857,7857),
(7859,7859),
(7861,7861),
(7863,7863),
(7865,7865),
(7867,7867),
(7869,7869),
(7871,7871),
(7873,7873),
(7875,7875),
(7877,7877),
(7879,7879),
(7881,7881),
(7883,7883),
(7885,7885),
(7887,7887),
(7889,7889),
(7891,7891),
(7893,7893),
(7895,7895),
(7897,7897),
(7899,7899),
(7901,7901),
(7903,7903),
(7905,7905),
(7907,7907),
(7909,7909),
(7911,7911),
(7913,7913),
(7915,7915),
(7917,7917),
(7919,7919),
(7921,7921),
(7923,7923),
(7925,7925),
(7927,7927),
(7929,7929),
(7931,7931),
(7933,7933),
(7935,7943),
(7952,7957),
(7968,7975),
(7984,7991),
(8000,8005),
(8016,8023),
(8032,8039),
(8048,8061),
(8064,8071),
(8080,8087),
(8096,8103),
(8112,8116),
(8118,8119),
(8126,8126),
(8130,8132),
(8134,8135),
(8144,8147),
(8150,8151),
(8160,8167),
(8178,8180),
(8182,8183),
(8458,8458),
(8462,8463),
(8467,8467),
(8495,8495),
(8500,8500),
(8505,8505),
(8508,8509),
(8518,8521),
(8526,8526),
(8580,8580),
(11312,11358),
(11361,11361),
(11365,11366),
(11368,11368),
(11370,11370),
(11372,11372),
(11377,11377),
(11379,11380),
(11382,11387),
(11393,11393),
(11395,11395),
(11397,11397),
(11399,11399),
(11401,11401),
(11403,11403),
(11405,11405),
(11407,11407),
(11409,11409),
(11411,11411),
(11413,11413),
(11415,11415),
(11417,11417),
(11419,11419),
(11421,11421),
(11423,11423),
(11425,11425),
(11427,11427),
(11429,11429),
(11431,11431),
(11433,11433),
(11435,11435),
(11437,11437),
(11439,11439),
(11441,11441),
(11443,11443),
(11445,11445),
(11447,11447),
(11449,11449),
(11451,11451),
(11453,11453),
(11455,11455),
(11457,11457),
(11459,11459),
(11461,11461),
(11463,11463),
(11465,11465),
(11467,11467),
(11469,11469),
(11471,11471),
(11473,11473),
(11475,11475),
(11477,11477),
(11479,11479),
(11481,11481),
(11483,11483),
(11485,11485),
(11487,11487),
(11489,11489),
(11491,11492),
(11500,11500),
(11502,11502),
(11507,11507),
(11520,11557),
(11559,11559),
(11565,11565),
(42561,42561),
(42563,42563),
(42565,42565),
(42567,42567),
(42569,42569),
(42571,42571),
(42573,42573),
(42575,42575),
(42577,42577),
(42579,42579),
(42581,42581),
(42583,42583),
(42585,42585),
(42587,42587),
(42589,42589),
(42591,42591),
(42593,42593),
(42595,42595),
(42597,42597),
(42599,42599),
(42601,42601),
(42603,42603),
(42605,42605),
(42625,42625),
(42627,42627),
(42629,42629),
(42631,42631),
(42633,42633),
(42635,42635),
(42637,42637),
(42639,42639),
(42641,42641),
(42643,42643),
(42645,42645),
(42647,42647),
(42649,42649),
(42651,42651),
(42787,42787),
(42789,42789),
(42791,42791),
(42793,42793),
(42795,42795),
(42797,42797),
(42799,42801),
(42803,42803),
(42805,42805),
(42807,42807),
(42809,42809),
(42811,42811),
(42813,42813),
(42815,42815),
(42817,42817),
(42819,42819),
(42821,42821),
(42823,42823),
(42825,42825),
(42827,42827),
(42829,42829),
(42831,42831),
(42833,42833),
(42835,42835),
(42837,42837),
(42839,42839),
(42841,42841),
(42843,42843),
(42845,42845),
(42847,42847),
(42849,42849),
(42851,42851),
(42853,42853),
(42855,42855),
(42857,42857),
(42859,42859),
(42861,42861),
(42863,42863),
(42865,42872),
(42874,42874),
(42876,42876),
(42879,42879),
(42881,42881),
(42883,42883),
(42885,42885),
(42887,42887),
(42892,42892),
(42894,42894),
(42897,42897),
(42899,42901),
(42903,42903),
(42905,42905),
(42907,42907),
(42909,42909),
(42911,42911),
(42913,42913),
(42915,42915),
(42917,42917),
(42919,42919),
(42921,42921),
(42933,42933),
(42935,42935),
(43002,43002),
(43824,43866),
(43872,43877),
(43888,43967),
(64256,64262),
(64275,64279),
(65345,65370),
(66600,66639),
(68800,68850),
(71872,71903),
(119834,119859),
(119886,119892),
(119894,119911),
(119938,119963),
(119990,119993),
(119995,119995),
(119997,120003),
(120005,120015),
(120042,120067),
(120094,120119),
(120146,120171),
(120198,120223),
(120250,120275),
(120302,120327),
(120354,120379),
(120406,120431),
(120458,120485),
(120514,120538),
(120540,120545),
(120572,120596),
(120598,120603),
(120630,120654),
(120656,120661),
(120688,120712),
(120714,120719),
(120746,120770),
(120772,120777),
(120779,120779)
);

const FLREUnicodeCategoryBlocks3:array[0..9] of TFLREUnicodeCharRange=(
(453,453),
(456,456),
(459,459),
(498,498),
(8072,8079),
(8088,8095),
(8104,8111),
(8124,8124),
(8140,8140),
(8188,8188)
);

const FLREUnicodeCategoryBlocks4:array[0..55] of TFLREUnicodeCharRange=(
(688,705),
(710,721),
(736,740),
(748,748),
(750,750),
(884,884),
(890,890),
(1369,1369),
(1600,1600),
(1765,1766),
(2036,2037),
(2042,2042),
(2074,2074),
(2084,2084),
(2088,2088),
(2417,2417),
(3654,3654),
(3782,3782),
(4348,4348),
(6103,6103),
(6211,6211),
(6823,6823),
(7288,7293),
(7468,7530),
(7544,7544),
(7579,7615),
(8305,8305),
(8319,8319),
(8336,8348),
(11388,11389),
(11631,11631),
(11823,11823),
(12293,12293),
(12337,12341),
(12347,12347),
(12445,12446),
(12540,12542),
(40981,40981),
(42232,42237),
(42508,42508),
(42623,42623),
(42652,42653),
(42775,42783),
(42864,42864),
(42888,42888),
(43000,43001),
(43471,43471),
(43494,43494),
(43632,43632),
(43741,43741),
(43763,43764),
(43868,43871),
(65392,65392),
(65438,65439),
(92992,92995),
(94099,94111)
);

const FLREUnicodeCategoryBlocks5:array[0..432] of TFLREUnicodeCharRange=(
(170,170),
(186,186),
(443,443),
(448,451),
(660,660),
(1488,1514),
(1520,1522),
(1568,1599),
(1601,1610),
(1646,1647),
(1649,1747),
(1749,1749),
(1774,1775),
(1786,1788),
(1791,1791),
(1808,1808),
(1810,1839),
(1869,1957),
(1969,1969),
(1994,2026),
(2048,2069),
(2112,2136),
(2208,2228),
(2308,2361),
(2365,2365),
(2384,2384),
(2392,2401),
(2418,2432),
(2437,2444),
(2447,2448),
(2451,2472),
(2474,2480),
(2482,2482),
(2486,2489),
(2493,2493),
(2510,2510),
(2524,2525),
(2527,2529),
(2544,2545),
(2565,2570),
(2575,2576),
(2579,2600),
(2602,2608),
(2610,2611),
(2613,2614),
(2616,2617),
(2649,2652),
(2654,2654),
(2674,2676),
(2693,2701),
(2703,2705),
(2707,2728),
(2730,2736),
(2738,2739),
(2741,2745),
(2749,2749),
(2768,2768),
(2784,2785),
(2809,2809),
(2821,2828),
(2831,2832),
(2835,2856),
(2858,2864),
(2866,2867),
(2869,2873),
(2877,2877),
(2908,2909),
(2911,2913),
(2929,2929),
(2947,2947),
(2949,2954),
(2958,2960),
(2962,2965),
(2969,2970),
(2972,2972),
(2974,2975),
(2979,2980),
(2984,2986),
(2990,3001),
(3024,3024),
(3077,3084),
(3086,3088),
(3090,3112),
(3114,3129),
(3133,3133),
(3160,3162),
(3168,3169),
(3205,3212),
(3214,3216),
(3218,3240),
(3242,3251),
(3253,3257),
(3261,3261),
(3294,3294),
(3296,3297),
(3313,3314),
(3333,3340),
(3342,3344),
(3346,3386),
(3389,3389),
(3406,3406),
(3423,3425),
(3450,3455),
(3461,3478),
(3482,3505),
(3507,3515),
(3517,3517),
(3520,3526),
(3585,3632),
(3634,3635),
(3648,3653),
(3713,3714),
(3716,3716),
(3719,3720),
(3722,3722),
(3725,3725),
(3732,3735),
(3737,3743),
(3745,3747),
(3749,3749),
(3751,3751),
(3754,3755),
(3757,3760),
(3762,3763),
(3773,3773),
(3776,3780),
(3804,3807),
(3840,3840),
(3904,3911),
(3913,3948),
(3976,3980),
(4096,4138),
(4159,4159),
(4176,4181),
(4186,4189),
(4193,4193),
(4197,4198),
(4206,4208),
(4213,4225),
(4238,4238),
(4304,4346),
(4349,4680),
(4682,4685),
(4688,4694),
(4696,4696),
(4698,4701),
(4704,4744),
(4746,4749),
(4752,4784),
(4786,4789),
(4792,4798),
(4800,4800),
(4802,4805),
(4808,4822),
(4824,4880),
(4882,4885),
(4888,4954),
(4992,5007),
(5121,5740),
(5743,5759),
(5761,5786),
(5792,5866),
(5873,5880),
(5888,5900),
(5902,5905),
(5920,5937),
(5952,5969),
(5984,5996),
(5998,6000),
(6016,6067),
(6108,6108),
(6176,6210),
(6212,6263),
(6272,6312),
(6314,6314),
(6320,6389),
(6400,6430),
(6480,6509),
(6512,6516),
(6528,6571),
(6576,6601),
(6656,6678),
(6688,6740),
(6917,6963),
(6981,6987),
(7043,7072),
(7086,7087),
(7098,7141),
(7168,7203),
(7245,7247),
(7258,7287),
(7401,7404),
(7406,7409),
(7413,7414),
(8501,8504),
(11568,11623),
(11648,11670),
(11680,11686),
(11688,11694),
(11696,11702),
(11704,11710),
(11712,11718),
(11720,11726),
(11728,11734),
(11736,11742),
(12294,12294),
(12348,12348),
(12353,12438),
(12447,12447),
(12449,12538),
(12543,12543),
(12549,12589),
(12593,12686),
(12704,12730),
(12784,12799),
(13312,19893),
(19968,40917),
(40960,40980),
(40982,42124),
(42192,42231),
(42240,42507),
(42512,42527),
(42538,42539),
(42606,42606),
(42656,42725),
(42895,42895),
(42999,42999),
(43003,43009),
(43011,43013),
(43015,43018),
(43020,43042),
(43072,43123),
(43138,43187),
(43250,43255),
(43259,43259),
(43261,43261),
(43274,43301),
(43312,43334),
(43360,43388),
(43396,43442),
(43488,43492),
(43495,43503),
(43514,43518),
(43520,43560),
(43584,43586),
(43588,43595),
(43616,43631),
(43633,43638),
(43642,43642),
(43646,43695),
(43697,43697),
(43701,43702),
(43705,43709),
(43712,43712),
(43714,43714),
(43739,43740),
(43744,43754),
(43762,43762),
(43777,43782),
(43785,43790),
(43793,43798),
(43808,43814),
(43816,43822),
(43968,44002),
(44032,55203),
(55216,55238),
(55243,55291),
(63744,64109),
(64112,64217),
(64285,64285),
(64287,64296),
(64298,64310),
(64312,64316),
(64318,64318),
(64320,64321),
(64323,64324),
(64326,64433),
(64467,64829),
(64848,64911),
(64914,64967),
(65008,65019),
(65136,65140),
(65142,65276),
(65382,65391),
(65393,65437),
(65440,65470),
(65474,65479),
(65482,65487),
(65490,65495),
(65498,65500),
(65536,65547),
(65549,65574),
(65576,65594),
(65596,65597),
(65599,65613),
(65616,65629),
(65664,65786),
(66176,66204),
(66208,66256),
(66304,66335),
(66352,66368),
(66370,66377),
(66384,66421),
(66432,66461),
(66464,66499),
(66504,66511),
(66640,66717),
(66816,66855),
(66864,66915),
(67072,67382),
(67392,67413),
(67424,67431),
(67584,67589),
(67592,67592),
(67594,67637),
(67639,67640),
(67644,67644),
(67647,67669),
(67680,67702),
(67712,67742),
(67808,67826),
(67828,67829),
(67840,67861),
(67872,67897),
(67968,68023),
(68030,68031),
(68096,68096),
(68112,68115),
(68117,68119),
(68121,68147),
(68192,68220),
(68224,68252),
(68288,68295),
(68297,68324),
(68352,68405),
(68416,68437),
(68448,68466),
(68480,68497),
(68608,68680),
(69635,69687),
(69763,69807),
(69840,69864),
(69891,69926),
(69968,70002),
(70006,70006),
(70019,70066),
(70081,70084),
(70106,70106),
(70108,70108),
(70144,70161),
(70163,70187),
(70272,70278),
(70280,70280),
(70282,70285),
(70287,70301),
(70303,70312),
(70320,70366),
(70405,70412),
(70415,70416),
(70419,70440),
(70442,70448),
(70450,70451),
(70453,70457),
(70461,70461),
(70480,70480),
(70493,70497),
(70784,70831),
(70852,70853),
(70855,70855),
(71040,71086),
(71128,71131),
(71168,71215),
(71236,71236),
(71296,71338),
(71424,71449),
(71935,71935),
(72384,72440),
(73728,74649),
(74880,75075),
(77824,78894),
(82944,83526),
(92160,92728),
(92736,92766),
(92880,92909),
(92928,92975),
(93027,93047),
(93053,93071),
(93952,94020),
(94032,94032),
(110592,110593),
(113664,113770),
(113776,113788),
(113792,113800),
(113808,113817),
(124928,125124),
(126464,126467),
(126469,126495),
(126497,126498),
(126500,126500),
(126503,126503),
(126505,126514),
(126516,126519),
(126521,126521),
(126523,126523),
(126530,126530),
(126535,126535),
(126537,126537),
(126539,126539),
(126541,126543),
(126545,126546),
(126548,126548),
(126551,126551),
(126553,126553),
(126555,126555),
(126557,126557),
(126559,126559),
(126561,126562),
(126564,126564),
(126567,126570),
(126572,126578),
(126580,126583),
(126585,126588),
(126590,126590),
(126592,126601),
(126603,126619),
(126625,126627),
(126629,126633),
(126635,126651),
(131072,173782),
(173824,177972),
(177984,178205),
(178208,183969),
(194560,195101)
);

const FLREUnicodeCategoryBlocks6:array[0..265] of TFLREUnicodeCharRange=(
(768,879),
(1155,1159),
(1425,1469),
(1471,1471),
(1473,1474),
(1476,1477),
(1479,1479),
(1552,1562),
(1611,1631),
(1648,1648),
(1750,1756),
(1759,1764),
(1767,1768),
(1770,1773),
(1809,1809),
(1840,1866),
(1958,1968),
(2027,2035),
(2070,2073),
(2075,2083),
(2085,2087),
(2089,2093),
(2137,2139),
(2275,2306),
(2362,2362),
(2364,2364),
(2369,2376),
(2381,2381),
(2385,2391),
(2402,2403),
(2433,2433),
(2492,2492),
(2497,2500),
(2509,2509),
(2530,2531),
(2561,2562),
(2620,2620),
(2625,2626),
(2631,2632),
(2635,2637),
(2641,2641),
(2672,2673),
(2677,2677),
(2689,2690),
(2748,2748),
(2753,2757),
(2759,2760),
(2765,2765),
(2786,2787),
(2817,2817),
(2876,2876),
(2879,2879),
(2881,2884),
(2893,2893),
(2902,2902),
(2914,2915),
(2946,2946),
(3008,3008),
(3021,3021),
(3072,3072),
(3134,3136),
(3142,3144),
(3146,3149),
(3157,3158),
(3170,3171),
(3201,3201),
(3260,3260),
(3263,3263),
(3270,3270),
(3276,3277),
(3298,3299),
(3329,3329),
(3393,3396),
(3405,3405),
(3426,3427),
(3530,3530),
(3538,3540),
(3542,3542),
(3633,3633),
(3636,3642),
(3655,3662),
(3761,3761),
(3764,3769),
(3771,3772),
(3784,3789),
(3864,3865),
(3893,3893),
(3895,3895),
(3897,3897),
(3953,3966),
(3968,3972),
(3974,3975),
(3981,3991),
(3993,4028),
(4038,4038),
(4141,4144),
(4146,4151),
(4153,4154),
(4157,4158),
(4184,4185),
(4190,4192),
(4209,4212),
(4226,4226),
(4229,4230),
(4237,4237),
(4253,4253),
(4957,4959),
(5906,5908),
(5938,5940),
(5970,5971),
(6002,6003),
(6068,6069),
(6071,6077),
(6086,6086),
(6089,6099),
(6109,6109),
(6155,6157),
(6313,6313),
(6432,6434),
(6439,6440),
(6450,6450),
(6457,6459),
(6679,6680),
(6683,6683),
(6742,6742),
(6744,6750),
(6752,6752),
(6754,6754),
(6757,6764),
(6771,6780),
(6783,6783),
(6832,6845),
(6912,6915),
(6964,6964),
(6966,6970),
(6972,6972),
(6978,6978),
(7019,7027),
(7040,7041),
(7074,7077),
(7080,7081),
(7083,7085),
(7142,7142),
(7144,7145),
(7149,7149),
(7151,7153),
(7212,7219),
(7222,7223),
(7376,7378),
(7380,7392),
(7394,7400),
(7405,7405),
(7412,7412),
(7416,7417),
(7616,7669),
(7676,7679),
(8400,8412),
(8417,8417),
(8421,8432),
(11503,11505),
(11647,11647),
(11744,11775),
(12330,12333),
(12441,12442),
(42607,42607),
(42612,42621),
(42654,42655),
(42736,42737),
(43010,43010),
(43014,43014),
(43019,43019),
(43045,43046),
(43204,43204),
(43232,43249),
(43302,43309),
(43335,43345),
(43392,43394),
(43443,43443),
(43446,43449),
(43452,43452),
(43493,43493),
(43561,43566),
(43569,43570),
(43573,43574),
(43587,43587),
(43596,43596),
(43644,43644),
(43696,43696),
(43698,43700),
(43703,43704),
(43710,43711),
(43713,43713),
(43756,43757),
(43766,43766),
(44005,44005),
(44008,44008),
(44013,44013),
(64286,64286),
(65024,65039),
(65056,65071),
(66045,66045),
(66272,66272),
(66422,66426),
(68097,68099),
(68101,68102),
(68108,68111),
(68152,68154),
(68159,68159),
(68325,68326),
(69633,69633),
(69688,69702),
(69759,69761),
(69811,69814),
(69817,69818),
(69888,69890),
(69927,69931),
(69933,69940),
(70003,70003),
(70016,70017),
(70070,70078),
(70090,70092),
(70191,70193),
(70196,70196),
(70198,70199),
(70367,70367),
(70371,70378),
(70400,70401),
(70460,70460),
(70464,70464),
(70502,70508),
(70512,70516),
(70835,70840),
(70842,70842),
(70847,70848),
(70850,70851),
(71090,71093),
(71100,71101),
(71103,71104),
(71132,71133),
(71219,71226),
(71229,71229),
(71231,71232),
(71339,71339),
(71341,71341),
(71344,71349),
(71351,71351),
(71453,71455),
(71458,71461),
(71463,71467),
(92912,92916),
(92976,92982),
(94095,94098),
(113821,113822),
(119143,119145),
(119163,119170),
(119173,119179),
(119210,119213),
(119362,119364),
(121344,121398),
(121403,121452),
(121461,121461),
(121476,121476),
(121499,121503),
(121505,121519),
(125136,125142),
(917760,917999)
);

const FLREUnicodeCategoryBlocks7:array[0..4] of TFLREUnicodeCharRange=(
(1160,1161),
(6846,6846),
(8413,8416),
(8418,8420),
(42608,42610)
);

const FLREUnicodeCategoryBlocks8:array[0..146] of TFLREUnicodeCharRange=(
(2307,2307),
(2363,2363),
(2366,2368),
(2377,2380),
(2382,2383),
(2434,2435),
(2494,2496),
(2503,2504),
(2507,2508),
(2519,2519),
(2563,2563),
(2622,2624),
(2691,2691),
(2750,2752),
(2761,2761),
(2763,2764),
(2818,2819),
(2878,2878),
(2880,2880),
(2887,2888),
(2891,2892),
(2903,2903),
(3006,3007),
(3009,3010),
(3014,3016),
(3018,3020),
(3031,3031),
(3073,3075),
(3137,3140),
(3202,3203),
(3262,3262),
(3264,3268),
(3271,3272),
(3274,3275),
(3285,3286),
(3330,3331),
(3390,3392),
(3398,3400),
(3402,3404),
(3415,3415),
(3458,3459),
(3535,3537),
(3544,3551),
(3570,3571),
(3902,3903),
(3967,3967),
(4139,4140),
(4145,4145),
(4152,4152),
(4155,4156),
(4182,4183),
(4194,4196),
(4199,4205),
(4227,4228),
(4231,4236),
(4239,4239),
(4250,4252),
(6070,6070),
(6078,6085),
(6087,6088),
(6435,6438),
(6441,6443),
(6448,6449),
(6451,6456),
(6681,6682),
(6741,6741),
(6743,6743),
(6753,6753),
(6755,6756),
(6765,6770),
(6916,6916),
(6965,6965),
(6971,6971),
(6973,6977),
(6979,6980),
(7042,7042),
(7073,7073),
(7078,7079),
(7082,7082),
(7143,7143),
(7146,7148),
(7150,7150),
(7154,7155),
(7204,7211),
(7220,7221),
(7393,7393),
(7410,7411),
(12334,12335),
(43043,43044),
(43047,43047),
(43136,43137),
(43188,43203),
(43346,43347),
(43395,43395),
(43444,43445),
(43450,43451),
(43453,43456),
(43567,43568),
(43571,43572),
(43597,43597),
(43643,43643),
(43645,43645),
(43755,43755),
(43758,43759),
(43765,43765),
(44003,44004),
(44006,44007),
(44009,44010),
(44012,44012),
(69632,69632),
(69634,69634),
(69762,69762),
(69808,69810),
(69815,69816),
(69932,69932),
(70018,70018),
(70067,70069),
(70079,70080),
(70188,70190),
(70194,70195),
(70197,70197),
(70368,70370),
(70402,70403),
(70462,70463),
(70465,70468),
(70471,70472),
(70475,70477),
(70487,70487),
(70498,70499),
(70832,70834),
(70841,70841),
(70843,70846),
(70849,70849),
(71087,71089),
(71096,71099),
(71102,71102),
(71216,71218),
(71227,71228),
(71230,71230),
(71340,71340),
(71342,71343),
(71350,71350),
(71456,71457),
(71462,71462),
(94033,94078),
(119141,119142),
(119149,119154)
);

const FLREUnicodeCategoryBlocks9:array[0..50] of TFLREUnicodeCharRange=(
(48,57),
(1632,1641),
(1776,1785),
(1984,1993),
(2406,2415),
(2534,2543),
(2662,2671),
(2790,2799),
(2918,2927),
(3046,3055),
(3174,3183),
(3302,3311),
(3430,3439),
(3558,3567),
(3664,3673),
(3792,3801),
(3872,3881),
(4160,4169),
(4240,4249),
(6112,6121),
(6160,6169),
(6470,6479),
(6608,6617),
(6784,6793),
(6800,6809),
(6992,7001),
(7088,7097),
(7232,7241),
(7248,7257),
(42528,42537),
(43216,43225),
(43264,43273),
(43472,43481),
(43504,43513),
(43600,43609),
(44016,44025),
(65296,65305),
(66720,66729),
(69734,69743),
(69872,69881),
(69942,69951),
(70096,70105),
(70384,70393),
(70864,70873),
(71248,71257),
(71360,71369),
(71472,71481),
(71904,71913),
(92768,92777),
(93008,93017),
(120782,120831)
);

const FLREUnicodeCategoryBlocks10:array[0..11] of TFLREUnicodeCharRange=(
(5870,5872),
(8544,8578),
(8581,8584),
(12295,12295),
(12321,12329),
(12344,12346),
(42726,42735),
(65856,65908),
(66369,66369),
(66378,66378),
(66513,66517),
(74752,74862)
);

const FLREUnicodeCategoryBlocks11:array[0..57] of TFLREUnicodeCharRange=(
(178,179),
(185,185),
(188,190),
(2548,2553),
(2930,2935),
(3056,3058),
(3192,3198),
(3440,3445),
(3882,3891),
(4969,4988),
(6128,6137),
(6618,6618),
(8304,8304),
(8308,8313),
(8320,8329),
(8528,8543),
(8585,8585),
(9312,9371),
(9450,9471),
(10102,10131),
(11517,11517),
(12690,12693),
(12832,12841),
(12872,12879),
(12881,12895),
(12928,12937),
(12977,12991),
(43056,43061),
(65799,65843),
(65909,65912),
(65930,65931),
(66273,66299),
(66336,66339),
(67672,67679),
(67705,67711),
(67751,67759),
(67835,67839),
(67862,67867),
(68028,68029),
(68032,68047),
(68050,68095),
(68160,68167),
(68221,68222),
(68253,68255),
(68331,68335),
(68440,68447),
(68472,68479),
(68521,68527),
(68858,68863),
(69216,69246),
(69714,69733),
(70113,70132),
(71482,71483),
(71914,71922),
(93019,93025),
(119648,119665),
(125127,125135),
(127232,127244)
);

const FLREUnicodeCategoryBlocks12:array[0..6] of TFLREUnicodeCharRange=(
(32,32),
(160,160),
(5760,5760),
(8192,8202),
(8239,8239),
(8287,8287),
(12288,12288)
);

const FLREUnicodeCategoryBlocks13:array[0..0] of TFLREUnicodeCharRange=(
(8232,8232)
);

const FLREUnicodeCategoryBlocks14:array[0..0] of TFLREUnicodeCharRange=(
(8233,8233)
);

const FLREUnicodeCategoryBlocks15:array[0..1] of TFLREUnicodeCharRange=(
(0,31),
(127,159)
);

const FLREUnicodeCategoryBlocks16:array[0..16] of TFLREUnicodeCharRange=(
(173,173),
(1536,1541),
(1564,1564),
(1757,1757),
(1807,1807),
(6158,6158),
(8203,8207),
(8234,8238),
(8288,8292),
(8294,8303),
(65279,65279),
(65529,65531),
(69821,69821),
(113824,113827),
(119155,119162),
(917505,917505),
(917536,917631)
);

const FLREUnicodeCategoryBlocks17:array[0..2] of TFLREUnicodeCharRange=(
(57344,63743),
(983040,1048573),
(1048576,1114109)
);

const FLREUnicodeCategoryBlocks18:array[0..0] of TFLREUnicodeCharRange=(
(55296,57343)
);

const FLREUnicodeCategoryBlocks19:array[0..16] of TFLREUnicodeCharRange=(
(45,45),
(1418,1418),
(1470,1470),
(5120,5120),
(6150,6150),
(8208,8213),
(11799,11799),
(11802,11802),
(11834,11835),
(11840,11840),
(12316,12316),
(12336,12336),
(12448,12448),
(65073,65074),
(65112,65112),
(65123,65123),
(65293,65293)
);

const FLREUnicodeCategoryBlocks20:array[0..74] of TFLREUnicodeCharRange=(
(40,40),
(91,91),
(123,123),
(3898,3898),
(3900,3900),
(5787,5787),
(8218,8218),
(8222,8222),
(8261,8261),
(8317,8317),
(8333,8333),
(8968,8968),
(8970,8970),
(9001,9001),
(10088,10088),
(10090,10090),
(10092,10092),
(10094,10094),
(10096,10096),
(10098,10098),
(10100,10100),
(10181,10181),
(10214,10214),
(10216,10216),
(10218,10218),
(10220,10220),
(10222,10222),
(10627,10627),
(10629,10629),
(10631,10631),
(10633,10633),
(10635,10635),
(10637,10637),
(10639,10639),
(10641,10641),
(10643,10643),
(10645,10645),
(10647,10647),
(10712,10712),
(10714,10714),
(10748,10748),
(11810,11810),
(11812,11812),
(11814,11814),
(11816,11816),
(11842,11842),
(12296,12296),
(12298,12298),
(12300,12300),
(12302,12302),
(12304,12304),
(12308,12308),
(12310,12310),
(12312,12312),
(12314,12314),
(12317,12317),
(64831,64831),
(65047,65047),
(65077,65077),
(65079,65079),
(65081,65081),
(65083,65083),
(65085,65085),
(65087,65087),
(65089,65089),
(65091,65091),
(65095,65095),
(65113,65113),
(65115,65115),
(65117,65117),
(65288,65288),
(65339,65339),
(65371,65371),
(65375,65375),
(65378,65378)
);

const FLREUnicodeCategoryBlocks21:array[0..71] of TFLREUnicodeCharRange=(
(41,41),
(93,93),
(125,125),
(3899,3899),
(3901,3901),
(5788,5788),
(8262,8262),
(8318,8318),
(8334,8334),
(8969,8969),
(8971,8971),
(9002,9002),
(10089,10089),
(10091,10091),
(10093,10093),
(10095,10095),
(10097,10097),
(10099,10099),
(10101,10101),
(10182,10182),
(10215,10215),
(10217,10217),
(10219,10219),
(10221,10221),
(10223,10223),
(10628,10628),
(10630,10630),
(10632,10632),
(10634,10634),
(10636,10636),
(10638,10638),
(10640,10640),
(10642,10642),
(10644,10644),
(10646,10646),
(10648,10648),
(10713,10713),
(10715,10715),
(10749,10749),
(11811,11811),
(11813,11813),
(11815,11815),
(11817,11817),
(12297,12297),
(12299,12299),
(12301,12301),
(12303,12303),
(12305,12305),
(12309,12309),
(12311,12311),
(12313,12313),
(12315,12315),
(12318,12319),
(64830,64830),
(65048,65048),
(65078,65078),
(65080,65080),
(65082,65082),
(65084,65084),
(65086,65086),
(65088,65088),
(65090,65090),
(65092,65092),
(65096,65096),
(65114,65114),
(65116,65116),
(65118,65118),
(65289,65289),
(65341,65341),
(65373,65373),
(65376,65376),
(65379,65379)
);

const FLREUnicodeCategoryBlocks22:array[0..5] of TFLREUnicodeCharRange=(
(95,95),
(8255,8256),
(8276,8276),
(65075,65076),
(65101,65103),
(65343,65343)
);

const FLREUnicodeCategoryBlocks23:array[0..156] of TFLREUnicodeCharRange=(
(33,35),
(37,39),
(42,42),
(44,44),
(46,47),
(58,59),
(63,64),
(92,92),
(161,161),
(167,167),
(182,183),
(191,191),
(894,894),
(903,903),
(1370,1375),
(1417,1417),
(1472,1472),
(1475,1475),
(1478,1478),
(1523,1524),
(1545,1546),
(1548,1549),
(1563,1563),
(1566,1567),
(1642,1645),
(1748,1748),
(1792,1805),
(2039,2041),
(2096,2110),
(2142,2142),
(2404,2405),
(2416,2416),
(2800,2800),
(3572,3572),
(3663,3663),
(3674,3675),
(3844,3858),
(3860,3860),
(3973,3973),
(4048,4052),
(4057,4058),
(4170,4175),
(4347,4347),
(4960,4968),
(5741,5742),
(5867,5869),
(5941,5942),
(6100,6102),
(6104,6106),
(6144,6149),
(6151,6154),
(6468,6469),
(6686,6687),
(6816,6822),
(6824,6829),
(7002,7008),
(7164,7167),
(7227,7231),
(7294,7295),
(7360,7367),
(7379,7379),
(8214,8215),
(8224,8231),
(8240,8248),
(8251,8254),
(8257,8259),
(8263,8273),
(8275,8275),
(8277,8286),
(11513,11516),
(11518,11519),
(11632,11632),
(11776,11777),
(11782,11784),
(11787,11787),
(11790,11798),
(11800,11801),
(11803,11803),
(11806,11807),
(11818,11822),
(11824,11833),
(11836,11839),
(11841,11841),
(12289,12291),
(12349,12349),
(12539,12539),
(42238,42239),
(42509,42511),
(42611,42611),
(42622,42622),
(42738,42743),
(43124,43127),
(43214,43215),
(43256,43258),
(43260,43260),
(43310,43311),
(43359,43359),
(43457,43469),
(43486,43487),
(43612,43615),
(43742,43743),
(43760,43761),
(44011,44011),
(65040,65046),
(65049,65049),
(65072,65072),
(65093,65094),
(65097,65100),
(65104,65106),
(65108,65111),
(65119,65121),
(65128,65128),
(65130,65131),
(65281,65283),
(65285,65287),
(65290,65290),
(65292,65292),
(65294,65295),
(65306,65307),
(65311,65312),
(65340,65340),
(65377,65377),
(65380,65381),
(65792,65794),
(66463,66463),
(66512,66512),
(66927,66927),
(67671,67671),
(67871,67871),
(67903,67903),
(68176,68184),
(68223,68223),
(68336,68342),
(68409,68415),
(68505,68508),
(69703,69709),
(69819,69820),
(69822,69825),
(69952,69955),
(70004,70005),
(70085,70089),
(70093,70093),
(70107,70107),
(70109,70111),
(70200,70205),
(70313,70313),
(70854,70854),
(71105,71127),
(71233,71235),
(71484,71486),
(74864,74868),
(92782,92783),
(92917,92917),
(92983,92987),
(92996,92996),
(113823,113823),
(121479,121483)
);

const FLREUnicodeCategoryBlocks24:array[0..63] of TFLREUnicodeCharRange=(
(43,43),
(60,62),
(124,124),
(126,126),
(172,172),
(177,177),
(215,215),
(247,247),
(1014,1014),
(1542,1544),
(8260,8260),
(8274,8274),
(8314,8316),
(8330,8332),
(8472,8472),
(8512,8516),
(8523,8523),
(8592,8596),
(8602,8603),
(8608,8608),
(8611,8611),
(8614,8614),
(8622,8622),
(8654,8655),
(8658,8658),
(8660,8660),
(8692,8959),
(8992,8993),
(9084,9084),
(9115,9139),
(9180,9185),
(9655,9655),
(9665,9665),
(9720,9727),
(9839,9839),
(10176,10180),
(10183,10213),
(10224,10239),
(10496,10626),
(10649,10711),
(10716,10747),
(10750,11007),
(11056,11076),
(11079,11084),
(64297,64297),
(65122,65122),
(65124,65126),
(65291,65291),
(65308,65310),
(65372,65372),
(65374,65374),
(65506,65506),
(65513,65516),
(120513,120513),
(120539,120539),
(120571,120571),
(120597,120597),
(120629,120629),
(120655,120655),
(120687,120687),
(120713,120713),
(120745,120745),
(120771,120771),
(126704,126705)
);

const FLREUnicodeCategoryBlocks25:array[0..16] of TFLREUnicodeCharRange=(
(36,36),
(162,165),
(1423,1423),
(1547,1547),
(2546,2547),
(2555,2555),
(2801,2801),
(3065,3065),
(3647,3647),
(6107,6107),
(8352,8382),
(43064,43064),
(65020,65020),
(65129,65129),
(65284,65284),
(65504,65505),
(65509,65510)
);

const FLREUnicodeCategoryBlocks26:array[0..28] of TFLREUnicodeCharRange=(
(94,94),
(96,96),
(168,168),
(175,175),
(180,180),
(184,184),
(706,709),
(722,735),
(741,747),
(749,749),
(751,767),
(885,885),
(900,901),
(8125,8125),
(8127,8129),
(8141,8143),
(8157,8159),
(8173,8175),
(8189,8190),
(12443,12444),
(42752,42774),
(42784,42785),
(42889,42890),
(43867,43867),
(64434,64449),
(65342,65342),
(65344,65344),
(65507,65507),
(127995,127999)
);

const FLREUnicodeCategoryBlocks27:array[0..169] of TFLREUnicodeCharRange=(
(166,166),
(169,169),
(174,174),
(176,176),
(1154,1154),
(1421,1422),
(1550,1551),
(1758,1758),
(1769,1769),
(1789,1790),
(2038,2038),
(2554,2554),
(2928,2928),
(3059,3064),
(3066,3066),
(3199,3199),
(3449,3449),
(3841,3843),
(3859,3859),
(3861,3863),
(3866,3871),
(3892,3892),
(3894,3894),
(3896,3896),
(4030,4037),
(4039,4044),
(4046,4047),
(4053,4056),
(4254,4255),
(5008,5017),
(6464,6464),
(6622,6655),
(7009,7018),
(7028,7036),
(8448,8449),
(8451,8454),
(8456,8457),
(8468,8468),
(8470,8471),
(8478,8483),
(8485,8485),
(8487,8487),
(8489,8489),
(8494,8494),
(8506,8507),
(8522,8522),
(8524,8525),
(8527,8527),
(8586,8587),
(8597,8601),
(8604,8607),
(8609,8610),
(8612,8613),
(8615,8621),
(8623,8653),
(8656,8657),
(8659,8659),
(8661,8691),
(8960,8967),
(8972,8991),
(8994,9000),
(9003,9083),
(9085,9114),
(9140,9179),
(9186,9210),
(9216,9254),
(9280,9290),
(9372,9449),
(9472,9654),
(9656,9664),
(9666,9719),
(9728,9838),
(9840,10087),
(10132,10175),
(10240,10495),
(11008,11055),
(11077,11078),
(11085,11123),
(11126,11157),
(11160,11193),
(11197,11208),
(11210,11217),
(11244,11247),
(11493,11498),
(11904,11929),
(11931,12019),
(12032,12245),
(12272,12283),
(12292,12292),
(12306,12307),
(12320,12320),
(12342,12343),
(12350,12351),
(12688,12689),
(12694,12703),
(12736,12771),
(12800,12830),
(12842,12871),
(12880,12880),
(12896,12927),
(12938,12976),
(12992,13054),
(13056,13311),
(19904,19967),
(42128,42182),
(43048,43051),
(43062,43063),
(43065,43065),
(43639,43641),
(65021,65021),
(65508,65508),
(65512,65512),
(65517,65518),
(65532,65533),
(65847,65855),
(65913,65929),
(65932,65932),
(65936,65947),
(65952,65952),
(66000,66044),
(67703,67704),
(68296,68296),
(71487,71487),
(92988,92991),
(92997,92997),
(113820,113820),
(118784,119029),
(119040,119078),
(119081,119140),
(119146,119148),
(119171,119172),
(119180,119209),
(119214,119272),
(119296,119361),
(119365,119365),
(119552,119638),
(120832,121343),
(121399,121402),
(121453,121460),
(121462,121475),
(121477,121478),
(126976,127019),
(127024,127123),
(127136,127150),
(127153,127167),
(127169,127183),
(127185,127221),
(127248,127278),
(127280,127339),
(127344,127386),
(127462,127490),
(127504,127546),
(127552,127560),
(127568,127569),
(127744,127994),
(128000,128377),
(128379,128419),
(128421,128720),
(128736,128748),
(128752,128755),
(128768,128883),
(128896,128980),
(129024,129035),
(129040,129095),
(129104,129113),
(129120,129159),
(129168,129197),
(129296,129304),
(129408,129412),
(129472,129472)
);

const FLREUnicodeCategoryBlocks28:array[0..10] of TFLREUnicodeCharRange=(
(171,171),
(8216,8216),
(8219,8220),
(8223,8223),
(8249,8249),
(11778,11778),
(11780,11780),
(11785,11785),
(11788,11788),
(11804,11804),
(11808,11808)
);

const FLREUnicodeCategoryBlocks29:array[0..9] of TFLREUnicodeCharRange=(
(187,187),
(8217,8217),
(8221,8221),
(8250,8250),
(11779,11779),
(11781,11781),
(11786,11786),
(11789,11789),
(11805,11805),
(11809,11809)
);

const FLREUnicodeCategoryBlocksData:array[0..29] of pointer=(
@FLREUnicodeCategoryBlocks0,
@FLREUnicodeCategoryBlocks1,
@FLREUnicodeCategoryBlocks2,
@FLREUnicodeCategoryBlocks3,
@FLREUnicodeCategoryBlocks4,
@FLREUnicodeCategoryBlocks5,
@FLREUnicodeCategoryBlocks6,
@FLREUnicodeCategoryBlocks7,
@FLREUnicodeCategoryBlocks8,
@FLREUnicodeCategoryBlocks9,
@FLREUnicodeCategoryBlocks10,
@FLREUnicodeCategoryBlocks11,
@FLREUnicodeCategoryBlocks12,
@FLREUnicodeCategoryBlocks13,
@FLREUnicodeCategoryBlocks14,
@FLREUnicodeCategoryBlocks15,
@FLREUnicodeCategoryBlocks16,
@FLREUnicodeCategoryBlocks17,
@FLREUnicodeCategoryBlocks18,
@FLREUnicodeCategoryBlocks19,
@FLREUnicodeCategoryBlocks20,
@FLREUnicodeCategoryBlocks21,
@FLREUnicodeCategoryBlocks22,
@FLREUnicodeCategoryBlocks23,
@FLREUnicodeCategoryBlocks24,
@FLREUnicodeCategoryBlocks25,
@FLREUnicodeCategoryBlocks26,
@FLREUnicodeCategoryBlocks27,
@FLREUnicodeCategoryBlocks28,
@FLREUnicodeCategoryBlocks29
);

const FLREUnicodeCategoryBlocksCounts:array[0..29] of longint=(
613,
625,
630,
10,
56,
433,
266,
5,
147,
51,
12,
58,
7,
1,
1,
2,
17,
3,
1,
17,
75,
72,
6,
157,
64,
17,
29,
170,
11,
10
);

const FLRECountUnicodeIgnoreCaseCategoryBlocks=29;

const FLREUnicodeIgnoreCaseCategoryBlocks0:array[0..612] of TFLREUnicodeCharRange=(
(888,889),
(896,899),
(907,907),
(909,909),
(930,930),
(1328,1328),
(1367,1368),
(1376,1376),
(1416,1416),
(1419,1420),
(1424,1424),
(1480,1487),
(1515,1519),
(1525,1535),
(1565,1565),
(1806,1806),
(1867,1868),
(1970,1983),
(2043,2047),
(2094,2095),
(2111,2111),
(2140,2141),
(2143,2207),
(2229,2274),
(2436,2436),
(2445,2446),
(2449,2450),
(2473,2473),
(2481,2481),
(2483,2485),
(2490,2491),
(2501,2502),
(2505,2506),
(2511,2518),
(2520,2523),
(2526,2526),
(2532,2533),
(2556,2560),
(2564,2564),
(2571,2574),
(2577,2578),
(2601,2601),
(2609,2609),
(2612,2612),
(2615,2615),
(2618,2619),
(2621,2621),
(2627,2630),
(2633,2634),
(2638,2640),
(2642,2648),
(2653,2653),
(2655,2661),
(2678,2688),
(2692,2692),
(2702,2702),
(2706,2706),
(2729,2729),
(2737,2737),
(2740,2740),
(2746,2747),
(2758,2758),
(2762,2762),
(2766,2767),
(2769,2783),
(2788,2789),
(2802,2808),
(2810,2816),
(2820,2820),
(2829,2830),
(2833,2834),
(2857,2857),
(2865,2865),
(2868,2868),
(2874,2875),
(2885,2886),
(2889,2890),
(2894,2901),
(2904,2907),
(2910,2910),
(2916,2917),
(2936,2945),
(2948,2948),
(2955,2957),
(2961,2961),
(2966,2968),
(2971,2971),
(2973,2973),
(2976,2978),
(2981,2983),
(2987,2989),
(3002,3005),
(3011,3013),
(3017,3017),
(3022,3023),
(3025,3030),
(3032,3045),
(3067,3071),
(3076,3076),
(3085,3085),
(3089,3089),
(3113,3113),
(3130,3132),
(3141,3141),
(3145,3145),
(3150,3156),
(3159,3159),
(3163,3167),
(3172,3173),
(3184,3191),
(3200,3200),
(3204,3204),
(3213,3213),
(3217,3217),
(3241,3241),
(3252,3252),
(3258,3259),
(3269,3269),
(3273,3273),
(3278,3284),
(3287,3293),
(3295,3295),
(3300,3301),
(3312,3312),
(3315,3328),
(3332,3332),
(3341,3341),
(3345,3345),
(3387,3388),
(3397,3397),
(3401,3401),
(3407,3414),
(3416,3422),
(3428,3429),
(3446,3448),
(3456,3457),
(3460,3460),
(3479,3481),
(3506,3506),
(3516,3516),
(3518,3519),
(3527,3529),
(3531,3534),
(3541,3541),
(3543,3543),
(3552,3557),
(3568,3569),
(3573,3584),
(3643,3646),
(3676,3712),
(3715,3715),
(3717,3718),
(3721,3721),
(3723,3724),
(3726,3731),
(3736,3736),
(3744,3744),
(3748,3748),
(3750,3750),
(3752,3753),
(3756,3756),
(3770,3770),
(3774,3775),
(3781,3781),
(3783,3783),
(3790,3791),
(3802,3803),
(3808,3839),
(3912,3912),
(3949,3952),
(3992,3992),
(4029,4029),
(4045,4045),
(4059,4095),
(4294,4294),
(4296,4300),
(4302,4303),
(4681,4681),
(4686,4687),
(4695,4695),
(4697,4697),
(4702,4703),
(4745,4745),
(4750,4751),
(4785,4785),
(4790,4791),
(4799,4799),
(4801,4801),
(4806,4807),
(4823,4823),
(4881,4881),
(4886,4887),
(4955,4956),
(4989,4991),
(5018,5023),
(5110,5111),
(5118,5119),
(5789,5791),
(5881,5887),
(5901,5901),
(5909,5919),
(5943,5951),
(5972,5983),
(5997,5997),
(6001,6001),
(6004,6015),
(6110,6111),
(6122,6127),
(6138,6143),
(6159,6159),
(6170,6175),
(6264,6271),
(6315,6319),
(6390,6399),
(6431,6431),
(6444,6447),
(6460,6463),
(6465,6467),
(6510,6511),
(6517,6527),
(6572,6575),
(6602,6607),
(6619,6621),
(6684,6685),
(6751,6751),
(6781,6782),
(6794,6799),
(6810,6815),
(6830,6831),
(6847,6911),
(6988,6991),
(7037,7039),
(7156,7163),
(7224,7226),
(7242,7244),
(7296,7359),
(7368,7375),
(7415,7415),
(7418,7423),
(7670,7675),
(7958,7959),
(7966,7967),
(8006,8007),
(8014,8015),
(8024,8024),
(8026,8026),
(8028,8028),
(8030,8030),
(8062,8063),
(8117,8117),
(8133,8133),
(8148,8149),
(8156,8156),
(8176,8177),
(8181,8181),
(8191,8191),
(8293,8293),
(8306,8307),
(8335,8335),
(8349,8351),
(8383,8399),
(8433,8447),
(8588,8591),
(9211,9215),
(9255,9279),
(9291,9311),
(11124,11125),
(11158,11159),
(11194,11196),
(11209,11209),
(11218,11243),
(11248,11263),
(11311,11311),
(11359,11359),
(11508,11512),
(11558,11558),
(11560,11564),
(11566,11567),
(11624,11630),
(11633,11646),
(11671,11679),
(11687,11687),
(11695,11695),
(11703,11703),
(11711,11711),
(11719,11719),
(11727,11727),
(11735,11735),
(11743,11743),
(11843,11903),
(11930,11930),
(12020,12031),
(12246,12271),
(12284,12287),
(12352,12352),
(12439,12440),
(12544,12548),
(12590,12592),
(12687,12687),
(12731,12735),
(12772,12783),
(12831,12831),
(13055,13055),
(19894,19903),
(40918,40959),
(42125,42127),
(42183,42191),
(42540,42559),
(42744,42751),
(42926,42927),
(42936,42998),
(43052,43055),
(43066,43071),
(43128,43135),
(43205,43213),
(43226,43231),
(43262,43263),
(43348,43358),
(43389,43391),
(43470,43470),
(43482,43485),
(43519,43519),
(43575,43583),
(43598,43599),
(43610,43611),
(43715,43738),
(43767,43776),
(43783,43784),
(43791,43792),
(43799,43807),
(43815,43815),
(43823,43823),
(43878,43887),
(44014,44015),
(44026,44031),
(55204,55215),
(55239,55242),
(55292,55295),
(64110,64111),
(64218,64255),
(64263,64274),
(64280,64284),
(64311,64311),
(64317,64317),
(64319,64319),
(64322,64322),
(64325,64325),
(64450,64466),
(64832,64847),
(64912,64913),
(64968,65007),
(65022,65023),
(65050,65055),
(65107,65107),
(65127,65127),
(65132,65135),
(65141,65141),
(65277,65278),
(65280,65280),
(65471,65473),
(65480,65481),
(65488,65489),
(65496,65497),
(65501,65503),
(65511,65511),
(65519,65528),
(65534,65535),
(65548,65548),
(65575,65575),
(65595,65595),
(65598,65598),
(65614,65615),
(65630,65663),
(65787,65791),
(65795,65798),
(65844,65846),
(65933,65935),
(65948,65951),
(65953,65999),
(66046,66175),
(66205,66207),
(66257,66271),
(66300,66303),
(66340,66351),
(66379,66383),
(66427,66431),
(66462,66462),
(66500,66503),
(66518,66559),
(66718,66719),
(66730,66815),
(66856,66863),
(66916,66926),
(66928,67071),
(67383,67391),
(67414,67423),
(67432,67583),
(67590,67591),
(67593,67593),
(67638,67638),
(67641,67643),
(67645,67646),
(67670,67670),
(67743,67750),
(67760,67807),
(67827,67827),
(67830,67834),
(67868,67870),
(67898,67902),
(67904,67967),
(68024,68027),
(68048,68049),
(68100,68100),
(68103,68107),
(68116,68116),
(68120,68120),
(68148,68151),
(68155,68158),
(68168,68175),
(68185,68191),
(68256,68287),
(68327,68330),
(68343,68351),
(68406,68408),
(68438,68439),
(68467,68471),
(68498,68504),
(68509,68520),
(68528,68607),
(68681,68735),
(68787,68799),
(68851,68857),
(68864,69215),
(69247,69631),
(69710,69713),
(69744,69758),
(69826,69839),
(69865,69871),
(69882,69887),
(69941,69941),
(69956,69967),
(70007,70015),
(70094,70095),
(70112,70112),
(70133,70143),
(70162,70162),
(70206,70271),
(70279,70279),
(70281,70281),
(70286,70286),
(70302,70302),
(70314,70319),
(70379,70383),
(70394,70399),
(70404,70404),
(70413,70414),
(70417,70418),
(70441,70441),
(70449,70449),
(70452,70452),
(70458,70459),
(70469,70470),
(70473,70474),
(70478,70479),
(70481,70486),
(70488,70492),
(70500,70501),
(70509,70511),
(70517,70783),
(70856,70863),
(70874,71039),
(71094,71095),
(71134,71167),
(71237,71247),
(71258,71295),
(71352,71359),
(71370,71423),
(71450,71452),
(71468,71471),
(71488,71839),
(71923,71934),
(71936,72383),
(72441,73727),
(74650,74751),
(74863,74863),
(74869,74879),
(75076,77823),
(78895,82943),
(83527,92159),
(92729,92735),
(92767,92767),
(92778,92781),
(92784,92879),
(92910,92911),
(92918,92927),
(92998,93007),
(93018,93018),
(93026,93026),
(93048,93052),
(93072,93951),
(94021,94031),
(94079,94094),
(94112,110591),
(110594,113663),
(113771,113775),
(113789,113791),
(113801,113807),
(113818,113819),
(113828,118783),
(119030,119039),
(119079,119080),
(119273,119295),
(119366,119551),
(119639,119647),
(119666,119807),
(119893,119893),
(119965,119965),
(119968,119969),
(119971,119972),
(119975,119976),
(119981,119981),
(119994,119994),
(119996,119996),
(120004,120004),
(120070,120070),
(120075,120076),
(120085,120085),
(120093,120093),
(120122,120122),
(120127,120127),
(120133,120133),
(120135,120137),
(120145,120145),
(120486,120487),
(120780,120781),
(121484,121498),
(121504,121504),
(121520,124927),
(125125,125126),
(125143,126463),
(126468,126468),
(126496,126496),
(126499,126499),
(126501,126502),
(126504,126504),
(126515,126515),
(126520,126520),
(126522,126522),
(126524,126529),
(126531,126534),
(126536,126536),
(126538,126538),
(126540,126540),
(126544,126544),
(126547,126547),
(126549,126550),
(126552,126552),
(126554,126554),
(126556,126556),
(126558,126558),
(126560,126560),
(126563,126563),
(126565,126566),
(126571,126571),
(126579,126579),
(126584,126584),
(126589,126589),
(126591,126591),
(126602,126602),
(126620,126624),
(126628,126628),
(126634,126634),
(126652,126703),
(126706,126975),
(127020,127023),
(127124,127135),
(127151,127152),
(127168,127168),
(127184,127184),
(127222,127231),
(127245,127247),
(127279,127279),
(127340,127343),
(127387,127461),
(127491,127503),
(127547,127551),
(127561,127567),
(127570,127743),
(128378,128378),
(128420,128420),
(128721,128735),
(128749,128751),
(128756,128767),
(128884,128895),
(128981,129023),
(129036,129039),
(129096,129103),
(129114,129119),
(129160,129167),
(129198,129295),
(129305,129407),
(129413,129471),
(129473,131071),
(173783,173823),
(177973,177983),
(178206,178207),
(183970,194559),
(195102,917504),
(917506,917535),
(917632,917759),
(918000,983039),
(1048574,1048575),
(1114110,1114111)
);

const FLREUnicodeIgnoreCaseCategoryBlocks1:array[0..162] of TFLREUnicodeCharRange=(
(65,90),
(97,122),
(192,214),
(216,246),
(248,304),
(306,311),
(313,328),
(330,382),
(384,396),
(398,410),
(412,425),
(428,441),
(444,445),
(447,447),
(452,452),
(454,455),
(457,458),
(460,495),
(497,497),
(499,544),
(546,563),
(570,596),
(598,599),
(601,601),
(603,604),
(608,609),
(611,611),
(613,614),
(616,617),
(619,620),
(623,623),
(625,626),
(629,629),
(637,637),
(640,640),
(643,643),
(647,652),
(658,658),
(669,670),
(880,883),
(886,887),
(891,893),
(895,895),
(902,902),
(904,906),
(908,908),
(910,911),
(913,929),
(931,943),
(945,961),
(963,975),
(978,980),
(983,1007),
(1010,1012),
(1015,1019),
(1021,1153),
(1162,1327),
(1329,1366),
(1377,1414),
(4256,4293),
(4295,4295),
(4301,4301),
(5024,5109),
(5112,5117),
(7545,7545),
(7549,7549),
(7680,7829),
(7838,7838),
(7840,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8017,8017),
(8019,8019),
(8021,8021),
(8023,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8112,8113),
(8120,8123),
(8136,8139),
(8144,8145),
(8152,8155),
(8160,8161),
(8165,8165),
(8168,8172),
(8184,8187),
(8450,8450),
(8455,8455),
(8459,8461),
(8464,8466),
(8469,8469),
(8473,8477),
(8484,8484),
(8486,8486),
(8488,8488),
(8490,8493),
(8496,8499),
(8510,8511),
(8517,8517),
(8526,8526),
(8579,8580),
(11264,11310),
(11312,11358),
(11360,11376),
(11378,11379),
(11381,11382),
(11390,11491),
(11499,11502),
(11506,11507),
(11520,11557),
(11559,11559),
(11565,11565),
(42560,42605),
(42624,42651),
(42786,42799),
(42802,42863),
(42873,42887),
(42891,42893),
(42896,42899),
(42902,42925),
(42928,42935),
(43859,43859),
(43888,43967),
(65313,65338),
(65345,65370),
(66560,66639),
(68736,68786),
(68800,68850),
(71840,71903),
(119808,119833),
(119860,119885),
(119912,119937),
(119964,119964),
(119966,119967),
(119970,119970),
(119973,119974),
(119977,119980),
(119982,119989),
(120016,120041),
(120068,120069),
(120071,120074),
(120077,120084),
(120086,120092),
(120120,120121),
(120123,120126),
(120128,120132),
(120134,120134),
(120138,120144),
(120172,120197),
(120224,120249),
(120276,120301),
(120328,120353),
(120380,120405),
(120432,120457),
(120488,120512),
(120546,120570),
(120604,120628),
(120662,120686),
(120720,120744),
(120778,120778)
);

const FLREUnicodeIgnoreCaseCategoryBlocks2:array[0..123] of TFLREUnicodeCharRange=(
(65,90),
(97,122),
(181,181),
(192,214),
(216,246),
(248,303),
(305,442),
(444,447),
(452,452),
(454,455),
(457,458),
(460,497),
(499,659),
(661,687),
(880,883),
(886,887),
(891,893),
(895,895),
(902,902),
(904,906),
(908,908),
(910,929),
(931,977),
(981,1011),
(1013,1013),
(1015,1153),
(1162,1327),
(1329,1366),
(1377,1415),
(4256,4293),
(4295,4295),
(4301,4301),
(5024,5109),
(5112,5117),
(7424,7467),
(7531,7543),
(7545,7578),
(7680,7837),
(7839,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8016,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8064,8116),
(8118,8124),
(8126,8126),
(8130,8132),
(8134,8140),
(8144,8147),
(8150,8155),
(8160,8172),
(8178,8180),
(8182,8188),
(8458,8458),
(8462,8463),
(8467,8467),
(8495,8495),
(8498,8498),
(8500,8500),
(8505,8505),
(8508,8509),
(8518,8521),
(8526,8526),
(8579,8580),
(11264,11310),
(11312,11358),
(11360,11387),
(11390,11492),
(11499,11502),
(11506,11507),
(11520,11557),
(11559,11559),
(11565,11565),
(42560,42605),
(42624,42651),
(42786,42863),
(42865,42887),
(42891,42894),
(42896,42925),
(42928,42935),
(43002,43002),
(43824,43866),
(43872,43877),
(43888,43967),
(64256,64262),
(64275,64279),
(65313,65338),
(65345,65370),
(66560,66639),
(68736,68786),
(68800,68850),
(71840,71903),
(119834,119859),
(119886,119892),
(119894,119911),
(119938,119963),
(119990,119993),
(119995,119995),
(119997,120003),
(120005,120015),
(120042,120067),
(120094,120119),
(120146,120171),
(120198,120223),
(120250,120275),
(120302,120327),
(120354,120379),
(120406,120431),
(120458,120485),
(120514,120538),
(120540,120545),
(120572,120596),
(120598,120603),
(120630,120654),
(120656,120661),
(120688,120712),
(120714,120719),
(120746,120770),
(120772,120777),
(120779,120779)
);

const FLREUnicodeIgnoreCaseCategoryBlocks3:array[0..8] of TFLREUnicodeCharRange=(
(452,460),
(497,499),
(8064,8111),
(8115,8115),
(8124,8124),
(8131,8131),
(8140,8140),
(8179,8179),
(8188,8188)
);

const FLREUnicodeIgnoreCaseCategoryBlocks4:array[0..55] of TFLREUnicodeCharRange=(
(688,705),
(710,721),
(736,740),
(748,748),
(750,750),
(884,884),
(890,890),
(1369,1369),
(1600,1600),
(1765,1766),
(2036,2037),
(2042,2042),
(2074,2074),
(2084,2084),
(2088,2088),
(2417,2417),
(3654,3654),
(3782,3782),
(4348,4348),
(6103,6103),
(6211,6211),
(6823,6823),
(7288,7293),
(7468,7530),
(7544,7544),
(7579,7615),
(8305,8305),
(8319,8319),
(8336,8348),
(11388,11389),
(11631,11631),
(11823,11823),
(12293,12293),
(12337,12341),
(12347,12347),
(12445,12446),
(12540,12542),
(40981,40981),
(42232,42237),
(42508,42508),
(42623,42623),
(42652,42653),
(42775,42783),
(42864,42864),
(42888,42888),
(43000,43001),
(43471,43471),
(43494,43494),
(43632,43632),
(43741,43741),
(43763,43764),
(43868,43871),
(65392,65392),
(65438,65439),
(92992,92995),
(94099,94111)
);

const FLREUnicodeIgnoreCaseCategoryBlocks5:array[0..432] of TFLREUnicodeCharRange=(
(170,170),
(186,186),
(443,443),
(448,451),
(660,660),
(1488,1514),
(1520,1522),
(1568,1599),
(1601,1610),
(1646,1647),
(1649,1747),
(1749,1749),
(1774,1775),
(1786,1788),
(1791,1791),
(1808,1808),
(1810,1839),
(1869,1957),
(1969,1969),
(1994,2026),
(2048,2069),
(2112,2136),
(2208,2228),
(2308,2361),
(2365,2365),
(2384,2384),
(2392,2401),
(2418,2432),
(2437,2444),
(2447,2448),
(2451,2472),
(2474,2480),
(2482,2482),
(2486,2489),
(2493,2493),
(2510,2510),
(2524,2525),
(2527,2529),
(2544,2545),
(2565,2570),
(2575,2576),
(2579,2600),
(2602,2608),
(2610,2611),
(2613,2614),
(2616,2617),
(2649,2652),
(2654,2654),
(2674,2676),
(2693,2701),
(2703,2705),
(2707,2728),
(2730,2736),
(2738,2739),
(2741,2745),
(2749,2749),
(2768,2768),
(2784,2785),
(2809,2809),
(2821,2828),
(2831,2832),
(2835,2856),
(2858,2864),
(2866,2867),
(2869,2873),
(2877,2877),
(2908,2909),
(2911,2913),
(2929,2929),
(2947,2947),
(2949,2954),
(2958,2960),
(2962,2965),
(2969,2970),
(2972,2972),
(2974,2975),
(2979,2980),
(2984,2986),
(2990,3001),
(3024,3024),
(3077,3084),
(3086,3088),
(3090,3112),
(3114,3129),
(3133,3133),
(3160,3162),
(3168,3169),
(3205,3212),
(3214,3216),
(3218,3240),
(3242,3251),
(3253,3257),
(3261,3261),
(3294,3294),
(3296,3297),
(3313,3314),
(3333,3340),
(3342,3344),
(3346,3386),
(3389,3389),
(3406,3406),
(3423,3425),
(3450,3455),
(3461,3478),
(3482,3505),
(3507,3515),
(3517,3517),
(3520,3526),
(3585,3632),
(3634,3635),
(3648,3653),
(3713,3714),
(3716,3716),
(3719,3720),
(3722,3722),
(3725,3725),
(3732,3735),
(3737,3743),
(3745,3747),
(3749,3749),
(3751,3751),
(3754,3755),
(3757,3760),
(3762,3763),
(3773,3773),
(3776,3780),
(3804,3807),
(3840,3840),
(3904,3911),
(3913,3948),
(3976,3980),
(4096,4138),
(4159,4159),
(4176,4181),
(4186,4189),
(4193,4193),
(4197,4198),
(4206,4208),
(4213,4225),
(4238,4238),
(4304,4346),
(4349,4680),
(4682,4685),
(4688,4694),
(4696,4696),
(4698,4701),
(4704,4744),
(4746,4749),
(4752,4784),
(4786,4789),
(4792,4798),
(4800,4800),
(4802,4805),
(4808,4822),
(4824,4880),
(4882,4885),
(4888,4954),
(4992,5007),
(5121,5740),
(5743,5759),
(5761,5786),
(5792,5866),
(5873,5880),
(5888,5900),
(5902,5905),
(5920,5937),
(5952,5969),
(5984,5996),
(5998,6000),
(6016,6067),
(6108,6108),
(6176,6210),
(6212,6263),
(6272,6312),
(6314,6314),
(6320,6389),
(6400,6430),
(6480,6509),
(6512,6516),
(6528,6571),
(6576,6601),
(6656,6678),
(6688,6740),
(6917,6963),
(6981,6987),
(7043,7072),
(7086,7087),
(7098,7141),
(7168,7203),
(7245,7247),
(7258,7287),
(7401,7404),
(7406,7409),
(7413,7414),
(8501,8504),
(11568,11623),
(11648,11670),
(11680,11686),
(11688,11694),
(11696,11702),
(11704,11710),
(11712,11718),
(11720,11726),
(11728,11734),
(11736,11742),
(12294,12294),
(12348,12348),
(12353,12438),
(12447,12447),
(12449,12538),
(12543,12543),
(12549,12589),
(12593,12686),
(12704,12730),
(12784,12799),
(13312,19893),
(19968,40917),
(40960,40980),
(40982,42124),
(42192,42231),
(42240,42507),
(42512,42527),
(42538,42539),
(42606,42606),
(42656,42725),
(42895,42895),
(42999,42999),
(43003,43009),
(43011,43013),
(43015,43018),
(43020,43042),
(43072,43123),
(43138,43187),
(43250,43255),
(43259,43259),
(43261,43261),
(43274,43301),
(43312,43334),
(43360,43388),
(43396,43442),
(43488,43492),
(43495,43503),
(43514,43518),
(43520,43560),
(43584,43586),
(43588,43595),
(43616,43631),
(43633,43638),
(43642,43642),
(43646,43695),
(43697,43697),
(43701,43702),
(43705,43709),
(43712,43712),
(43714,43714),
(43739,43740),
(43744,43754),
(43762,43762),
(43777,43782),
(43785,43790),
(43793,43798),
(43808,43814),
(43816,43822),
(43968,44002),
(44032,55203),
(55216,55238),
(55243,55291),
(63744,64109),
(64112,64217),
(64285,64285),
(64287,64296),
(64298,64310),
(64312,64316),
(64318,64318),
(64320,64321),
(64323,64324),
(64326,64433),
(64467,64829),
(64848,64911),
(64914,64967),
(65008,65019),
(65136,65140),
(65142,65276),
(65382,65391),
(65393,65437),
(65440,65470),
(65474,65479),
(65482,65487),
(65490,65495),
(65498,65500),
(65536,65547),
(65549,65574),
(65576,65594),
(65596,65597),
(65599,65613),
(65616,65629),
(65664,65786),
(66176,66204),
(66208,66256),
(66304,66335),
(66352,66368),
(66370,66377),
(66384,66421),
(66432,66461),
(66464,66499),
(66504,66511),
(66640,66717),
(66816,66855),
(66864,66915),
(67072,67382),
(67392,67413),
(67424,67431),
(67584,67589),
(67592,67592),
(67594,67637),
(67639,67640),
(67644,67644),
(67647,67669),
(67680,67702),
(67712,67742),
(67808,67826),
(67828,67829),
(67840,67861),
(67872,67897),
(67968,68023),
(68030,68031),
(68096,68096),
(68112,68115),
(68117,68119),
(68121,68147),
(68192,68220),
(68224,68252),
(68288,68295),
(68297,68324),
(68352,68405),
(68416,68437),
(68448,68466),
(68480,68497),
(68608,68680),
(69635,69687),
(69763,69807),
(69840,69864),
(69891,69926),
(69968,70002),
(70006,70006),
(70019,70066),
(70081,70084),
(70106,70106),
(70108,70108),
(70144,70161),
(70163,70187),
(70272,70278),
(70280,70280),
(70282,70285),
(70287,70301),
(70303,70312),
(70320,70366),
(70405,70412),
(70415,70416),
(70419,70440),
(70442,70448),
(70450,70451),
(70453,70457),
(70461,70461),
(70480,70480),
(70493,70497),
(70784,70831),
(70852,70853),
(70855,70855),
(71040,71086),
(71128,71131),
(71168,71215),
(71236,71236),
(71296,71338),
(71424,71449),
(71935,71935),
(72384,72440),
(73728,74649),
(74880,75075),
(77824,78894),
(82944,83526),
(92160,92728),
(92736,92766),
(92880,92909),
(92928,92975),
(93027,93047),
(93053,93071),
(93952,94020),
(94032,94032),
(110592,110593),
(113664,113770),
(113776,113788),
(113792,113800),
(113808,113817),
(124928,125124),
(126464,126467),
(126469,126495),
(126497,126498),
(126500,126500),
(126503,126503),
(126505,126514),
(126516,126519),
(126521,126521),
(126523,126523),
(126530,126530),
(126535,126535),
(126537,126537),
(126539,126539),
(126541,126543),
(126545,126546),
(126548,126548),
(126551,126551),
(126553,126553),
(126555,126555),
(126557,126557),
(126559,126559),
(126561,126562),
(126564,126564),
(126567,126570),
(126572,126578),
(126580,126583),
(126585,126588),
(126590,126590),
(126592,126601),
(126603,126619),
(126625,126627),
(126629,126633),
(126635,126651),
(131072,173782),
(173824,177972),
(177984,178205),
(178208,183969),
(194560,195101)
);

const FLREUnicodeIgnoreCaseCategoryBlocks6:array[0..266] of TFLREUnicodeCharRange=(
(768,879),
(921,921),
(1155,1159),
(1425,1469),
(1471,1471),
(1473,1474),
(1476,1477),
(1479,1479),
(1552,1562),
(1611,1631),
(1648,1648),
(1750,1756),
(1759,1764),
(1767,1768),
(1770,1773),
(1809,1809),
(1840,1866),
(1958,1968),
(2027,2035),
(2070,2073),
(2075,2083),
(2085,2087),
(2089,2093),
(2137,2139),
(2275,2306),
(2362,2362),
(2364,2364),
(2369,2376),
(2381,2381),
(2385,2391),
(2402,2403),
(2433,2433),
(2492,2492),
(2497,2500),
(2509,2509),
(2530,2531),
(2561,2562),
(2620,2620),
(2625,2626),
(2631,2632),
(2635,2637),
(2641,2641),
(2672,2673),
(2677,2677),
(2689,2690),
(2748,2748),
(2753,2757),
(2759,2760),
(2765,2765),
(2786,2787),
(2817,2817),
(2876,2876),
(2879,2879),
(2881,2884),
(2893,2893),
(2902,2902),
(2914,2915),
(2946,2946),
(3008,3008),
(3021,3021),
(3072,3072),
(3134,3136),
(3142,3144),
(3146,3149),
(3157,3158),
(3170,3171),
(3201,3201),
(3260,3260),
(3263,3263),
(3270,3270),
(3276,3277),
(3298,3299),
(3329,3329),
(3393,3396),
(3405,3405),
(3426,3427),
(3530,3530),
(3538,3540),
(3542,3542),
(3633,3633),
(3636,3642),
(3655,3662),
(3761,3761),
(3764,3769),
(3771,3772),
(3784,3789),
(3864,3865),
(3893,3893),
(3895,3895),
(3897,3897),
(3953,3966),
(3968,3972),
(3974,3975),
(3981,3991),
(3993,4028),
(4038,4038),
(4141,4144),
(4146,4151),
(4153,4154),
(4157,4158),
(4184,4185),
(4190,4192),
(4209,4212),
(4226,4226),
(4229,4230),
(4237,4237),
(4253,4253),
(4957,4959),
(5906,5908),
(5938,5940),
(5970,5971),
(6002,6003),
(6068,6069),
(6071,6077),
(6086,6086),
(6089,6099),
(6109,6109),
(6155,6157),
(6313,6313),
(6432,6434),
(6439,6440),
(6450,6450),
(6457,6459),
(6679,6680),
(6683,6683),
(6742,6742),
(6744,6750),
(6752,6752),
(6754,6754),
(6757,6764),
(6771,6780),
(6783,6783),
(6832,6845),
(6912,6915),
(6964,6964),
(6966,6970),
(6972,6972),
(6978,6978),
(7019,7027),
(7040,7041),
(7074,7077),
(7080,7081),
(7083,7085),
(7142,7142),
(7144,7145),
(7149,7149),
(7151,7153),
(7212,7219),
(7222,7223),
(7376,7378),
(7380,7392),
(7394,7400),
(7405,7405),
(7412,7412),
(7416,7417),
(7616,7669),
(7676,7679),
(8400,8412),
(8417,8417),
(8421,8432),
(11503,11505),
(11647,11647),
(11744,11775),
(12330,12333),
(12441,12442),
(42607,42607),
(42612,42621),
(42654,42655),
(42736,42737),
(43010,43010),
(43014,43014),
(43019,43019),
(43045,43046),
(43204,43204),
(43232,43249),
(43302,43309),
(43335,43345),
(43392,43394),
(43443,43443),
(43446,43449),
(43452,43452),
(43493,43493),
(43561,43566),
(43569,43570),
(43573,43574),
(43587,43587),
(43596,43596),
(43644,43644),
(43696,43696),
(43698,43700),
(43703,43704),
(43710,43711),
(43713,43713),
(43756,43757),
(43766,43766),
(44005,44005),
(44008,44008),
(44013,44013),
(64286,64286),
(65024,65039),
(65056,65071),
(66045,66045),
(66272,66272),
(66422,66426),
(68097,68099),
(68101,68102),
(68108,68111),
(68152,68154),
(68159,68159),
(68325,68326),
(69633,69633),
(69688,69702),
(69759,69761),
(69811,69814),
(69817,69818),
(69888,69890),
(69927,69931),
(69933,69940),
(70003,70003),
(70016,70017),
(70070,70078),
(70090,70092),
(70191,70193),
(70196,70196),
(70198,70199),
(70367,70367),
(70371,70378),
(70400,70401),
(70460,70460),
(70464,70464),
(70502,70508),
(70512,70516),
(70835,70840),
(70842,70842),
(70847,70848),
(70850,70851),
(71090,71093),
(71100,71101),
(71103,71104),
(71132,71133),
(71219,71226),
(71229,71229),
(71231,71232),
(71339,71339),
(71341,71341),
(71344,71349),
(71351,71351),
(71453,71455),
(71458,71461),
(71463,71467),
(92912,92916),
(92976,92982),
(94095,94098),
(113821,113822),
(119143,119145),
(119163,119170),
(119173,119179),
(119210,119213),
(119362,119364),
(121344,121398),
(121403,121452),
(121461,121461),
(121476,121476),
(121499,121503),
(121505,121519),
(125136,125142),
(917760,917999)
);

const FLREUnicodeIgnoreCaseCategoryBlocks7:array[0..4] of TFLREUnicodeCharRange=(
(1160,1161),
(6846,6846),
(8413,8416),
(8418,8420),
(42608,42610)
);

const FLREUnicodeIgnoreCaseCategoryBlocks8:array[0..146] of TFLREUnicodeCharRange=(
(2307,2307),
(2363,2363),
(2366,2368),
(2377,2380),
(2382,2383),
(2434,2435),
(2494,2496),
(2503,2504),
(2507,2508),
(2519,2519),
(2563,2563),
(2622,2624),
(2691,2691),
(2750,2752),
(2761,2761),
(2763,2764),
(2818,2819),
(2878,2878),
(2880,2880),
(2887,2888),
(2891,2892),
(2903,2903),
(3006,3007),
(3009,3010),
(3014,3016),
(3018,3020),
(3031,3031),
(3073,3075),
(3137,3140),
(3202,3203),
(3262,3262),
(3264,3268),
(3271,3272),
(3274,3275),
(3285,3286),
(3330,3331),
(3390,3392),
(3398,3400),
(3402,3404),
(3415,3415),
(3458,3459),
(3535,3537),
(3544,3551),
(3570,3571),
(3902,3903),
(3967,3967),
(4139,4140),
(4145,4145),
(4152,4152),
(4155,4156),
(4182,4183),
(4194,4196),
(4199,4205),
(4227,4228),
(4231,4236),
(4239,4239),
(4250,4252),
(6070,6070),
(6078,6085),
(6087,6088),
(6435,6438),
(6441,6443),
(6448,6449),
(6451,6456),
(6681,6682),
(6741,6741),
(6743,6743),
(6753,6753),
(6755,6756),
(6765,6770),
(6916,6916),
(6965,6965),
(6971,6971),
(6973,6977),
(6979,6980),
(7042,7042),
(7073,7073),
(7078,7079),
(7082,7082),
(7143,7143),
(7146,7148),
(7150,7150),
(7154,7155),
(7204,7211),
(7220,7221),
(7393,7393),
(7410,7411),
(12334,12335),
(43043,43044),
(43047,43047),
(43136,43137),
(43188,43203),
(43346,43347),
(43395,43395),
(43444,43445),
(43450,43451),
(43453,43456),
(43567,43568),
(43571,43572),
(43597,43597),
(43643,43643),
(43645,43645),
(43755,43755),
(43758,43759),
(43765,43765),
(44003,44004),
(44006,44007),
(44009,44010),
(44012,44012),
(69632,69632),
(69634,69634),
(69762,69762),
(69808,69810),
(69815,69816),
(69932,69932),
(70018,70018),
(70067,70069),
(70079,70080),
(70188,70190),
(70194,70195),
(70197,70197),
(70368,70370),
(70402,70403),
(70462,70463),
(70465,70468),
(70471,70472),
(70475,70477),
(70487,70487),
(70498,70499),
(70832,70834),
(70841,70841),
(70843,70846),
(70849,70849),
(71087,71089),
(71096,71099),
(71102,71102),
(71216,71218),
(71227,71228),
(71230,71230),
(71340,71340),
(71342,71343),
(71350,71350),
(71456,71457),
(71462,71462),
(94033,94078),
(119141,119142),
(119149,119154)
);

const FLREUnicodeIgnoreCaseCategoryBlocks9:array[0..50] of TFLREUnicodeCharRange=(
(48,57),
(1632,1641),
(1776,1785),
(1984,1993),
(2406,2415),
(2534,2543),
(2662,2671),
(2790,2799),
(2918,2927),
(3046,3055),
(3174,3183),
(3302,3311),
(3430,3439),
(3558,3567),
(3664,3673),
(3792,3801),
(3872,3881),
(4160,4169),
(4240,4249),
(6112,6121),
(6160,6169),
(6470,6479),
(6608,6617),
(6784,6793),
(6800,6809),
(6992,7001),
(7088,7097),
(7232,7241),
(7248,7257),
(42528,42537),
(43216,43225),
(43264,43273),
(43472,43481),
(43504,43513),
(43600,43609),
(44016,44025),
(65296,65305),
(66720,66729),
(69734,69743),
(69872,69881),
(69942,69951),
(70096,70105),
(70384,70393),
(70864,70873),
(71248,71257),
(71360,71369),
(71472,71481),
(71904,71913),
(92768,92777),
(93008,93017),
(120782,120831)
);

const FLREUnicodeIgnoreCaseCategoryBlocks10:array[0..11] of TFLREUnicodeCharRange=(
(5870,5872),
(8544,8578),
(8581,8584),
(12295,12295),
(12321,12329),
(12344,12346),
(42726,42735),
(65856,65908),
(66369,66369),
(66378,66378),
(66513,66517),
(74752,74862)
);

const FLREUnicodeIgnoreCaseCategoryBlocks11:array[0..57] of TFLREUnicodeCharRange=(
(178,179),
(185,185),
(188,190),
(2548,2553),
(2930,2935),
(3056,3058),
(3192,3198),
(3440,3445),
(3882,3891),
(4969,4988),
(6128,6137),
(6618,6618),
(8304,8304),
(8308,8313),
(8320,8329),
(8528,8543),
(8585,8585),
(9312,9371),
(9450,9471),
(10102,10131),
(11517,11517),
(12690,12693),
(12832,12841),
(12872,12879),
(12881,12895),
(12928,12937),
(12977,12991),
(43056,43061),
(65799,65843),
(65909,65912),
(65930,65931),
(66273,66299),
(66336,66339),
(67672,67679),
(67705,67711),
(67751,67759),
(67835,67839),
(67862,67867),
(68028,68029),
(68032,68047),
(68050,68095),
(68160,68167),
(68221,68222),
(68253,68255),
(68331,68335),
(68440,68447),
(68472,68479),
(68521,68527),
(68858,68863),
(69216,69246),
(69714,69733),
(70113,70132),
(71482,71483),
(71914,71922),
(93019,93025),
(119648,119665),
(125127,125135),
(127232,127244)
);

const FLREUnicodeIgnoreCaseCategoryBlocks12:array[0..6] of TFLREUnicodeCharRange=(
(32,32),
(160,160),
(5760,5760),
(8192,8202),
(8239,8239),
(8287,8287),
(12288,12288)
);

const FLREUnicodeIgnoreCaseCategoryBlocks13:array[0..0] of TFLREUnicodeCharRange=(
(8232,8232)
);

const FLREUnicodeIgnoreCaseCategoryBlocks14:array[0..0] of TFLREUnicodeCharRange=(
(8233,8233)
);

const FLREUnicodeIgnoreCaseCategoryBlocks15:array[0..1] of TFLREUnicodeCharRange=(
(0,31),
(127,159)
);

const FLREUnicodeIgnoreCaseCategoryBlocks16:array[0..16] of TFLREUnicodeCharRange=(
(173,173),
(1536,1541),
(1564,1564),
(1757,1757),
(1807,1807),
(6158,6158),
(8203,8207),
(8234,8238),
(8288,8292),
(8294,8303),
(65279,65279),
(65529,65531),
(69821,69821),
(113824,113827),
(119155,119162),
(917505,917505),
(917536,917631)
);

const FLREUnicodeIgnoreCaseCategoryBlocks17:array[0..2] of TFLREUnicodeCharRange=(
(57344,63743),
(983040,1048573),
(1048576,1114109)
);

const FLREUnicodeIgnoreCaseCategoryBlocks18:array[0..0] of TFLREUnicodeCharRange=(
(55296,57343)
);

const FLREUnicodeIgnoreCaseCategoryBlocks19:array[0..16] of TFLREUnicodeCharRange=(
(45,45),
(1418,1418),
(1470,1470),
(5120,5120),
(6150,6150),
(8208,8213),
(11799,11799),
(11802,11802),
(11834,11835),
(11840,11840),
(12316,12316),
(12336,12336),
(12448,12448),
(65073,65074),
(65112,65112),
(65123,65123),
(65293,65293)
);

const FLREUnicodeIgnoreCaseCategoryBlocks20:array[0..74] of TFLREUnicodeCharRange=(
(40,40),
(91,91),
(123,123),
(3898,3898),
(3900,3900),
(5787,5787),
(8218,8218),
(8222,8222),
(8261,8261),
(8317,8317),
(8333,8333),
(8968,8968),
(8970,8970),
(9001,9001),
(10088,10088),
(10090,10090),
(10092,10092),
(10094,10094),
(10096,10096),
(10098,10098),
(10100,10100),
(10181,10181),
(10214,10214),
(10216,10216),
(10218,10218),
(10220,10220),
(10222,10222),
(10627,10627),
(10629,10629),
(10631,10631),
(10633,10633),
(10635,10635),
(10637,10637),
(10639,10639),
(10641,10641),
(10643,10643),
(10645,10645),
(10647,10647),
(10712,10712),
(10714,10714),
(10748,10748),
(11810,11810),
(11812,11812),
(11814,11814),
(11816,11816),
(11842,11842),
(12296,12296),
(12298,12298),
(12300,12300),
(12302,12302),
(12304,12304),
(12308,12308),
(12310,12310),
(12312,12312),
(12314,12314),
(12317,12317),
(64831,64831),
(65047,65047),
(65077,65077),
(65079,65079),
(65081,65081),
(65083,65083),
(65085,65085),
(65087,65087),
(65089,65089),
(65091,65091),
(65095,65095),
(65113,65113),
(65115,65115),
(65117,65117),
(65288,65288),
(65339,65339),
(65371,65371),
(65375,65375),
(65378,65378)
);

const FLREUnicodeIgnoreCaseCategoryBlocks21:array[0..71] of TFLREUnicodeCharRange=(
(41,41),
(93,93),
(125,125),
(3899,3899),
(3901,3901),
(5788,5788),
(8262,8262),
(8318,8318),
(8334,8334),
(8969,8969),
(8971,8971),
(9002,9002),
(10089,10089),
(10091,10091),
(10093,10093),
(10095,10095),
(10097,10097),
(10099,10099),
(10101,10101),
(10182,10182),
(10215,10215),
(10217,10217),
(10219,10219),
(10221,10221),
(10223,10223),
(10628,10628),
(10630,10630),
(10632,10632),
(10634,10634),
(10636,10636),
(10638,10638),
(10640,10640),
(10642,10642),
(10644,10644),
(10646,10646),
(10648,10648),
(10713,10713),
(10715,10715),
(10749,10749),
(11811,11811),
(11813,11813),
(11815,11815),
(11817,11817),
(12297,12297),
(12299,12299),
(12301,12301),
(12303,12303),
(12305,12305),
(12309,12309),
(12311,12311),
(12313,12313),
(12315,12315),
(12318,12319),
(64830,64830),
(65048,65048),
(65078,65078),
(65080,65080),
(65082,65082),
(65084,65084),
(65086,65086),
(65088,65088),
(65090,65090),
(65092,65092),
(65096,65096),
(65114,65114),
(65116,65116),
(65118,65118),
(65289,65289),
(65341,65341),
(65373,65373),
(65376,65376),
(65379,65379)
);

const FLREUnicodeIgnoreCaseCategoryBlocks22:array[0..5] of TFLREUnicodeCharRange=(
(95,95),
(8255,8256),
(8276,8276),
(65075,65076),
(65101,65103),
(65343,65343)
);

const FLREUnicodeIgnoreCaseCategoryBlocks23:array[0..156] of TFLREUnicodeCharRange=(
(33,35),
(37,39),
(42,42),
(44,44),
(46,47),
(58,59),
(63,64),
(92,92),
(161,161),
(167,167),
(182,183),
(191,191),
(894,894),
(903,903),
(1370,1375),
(1417,1417),
(1472,1472),
(1475,1475),
(1478,1478),
(1523,1524),
(1545,1546),
(1548,1549),
(1563,1563),
(1566,1567),
(1642,1645),
(1748,1748),
(1792,1805),
(2039,2041),
(2096,2110),
(2142,2142),
(2404,2405),
(2416,2416),
(2800,2800),
(3572,3572),
(3663,3663),
(3674,3675),
(3844,3858),
(3860,3860),
(3973,3973),
(4048,4052),
(4057,4058),
(4170,4175),
(4347,4347),
(4960,4968),
(5741,5742),
(5867,5869),
(5941,5942),
(6100,6102),
(6104,6106),
(6144,6149),
(6151,6154),
(6468,6469),
(6686,6687),
(6816,6822),
(6824,6829),
(7002,7008),
(7164,7167),
(7227,7231),
(7294,7295),
(7360,7367),
(7379,7379),
(8214,8215),
(8224,8231),
(8240,8248),
(8251,8254),
(8257,8259),
(8263,8273),
(8275,8275),
(8277,8286),
(11513,11516),
(11518,11519),
(11632,11632),
(11776,11777),
(11782,11784),
(11787,11787),
(11790,11798),
(11800,11801),
(11803,11803),
(11806,11807),
(11818,11822),
(11824,11833),
(11836,11839),
(11841,11841),
(12289,12291),
(12349,12349),
(12539,12539),
(42238,42239),
(42509,42511),
(42611,42611),
(42622,42622),
(42738,42743),
(43124,43127),
(43214,43215),
(43256,43258),
(43260,43260),
(43310,43311),
(43359,43359),
(43457,43469),
(43486,43487),
(43612,43615),
(43742,43743),
(43760,43761),
(44011,44011),
(65040,65046),
(65049,65049),
(65072,65072),
(65093,65094),
(65097,65100),
(65104,65106),
(65108,65111),
(65119,65121),
(65128,65128),
(65130,65131),
(65281,65283),
(65285,65287),
(65290,65290),
(65292,65292),
(65294,65295),
(65306,65307),
(65311,65312),
(65340,65340),
(65377,65377),
(65380,65381),
(65792,65794),
(66463,66463),
(66512,66512),
(66927,66927),
(67671,67671),
(67871,67871),
(67903,67903),
(68176,68184),
(68223,68223),
(68336,68342),
(68409,68415),
(68505,68508),
(69703,69709),
(69819,69820),
(69822,69825),
(69952,69955),
(70004,70005),
(70085,70089),
(70093,70093),
(70107,70107),
(70109,70111),
(70200,70205),
(70313,70313),
(70854,70854),
(71105,71127),
(71233,71235),
(71484,71486),
(74864,74868),
(92782,92783),
(92917,92917),
(92983,92987),
(92996,92996),
(113823,113823),
(121479,121483)
);

const FLREUnicodeIgnoreCaseCategoryBlocks24:array[0..63] of TFLREUnicodeCharRange=(
(43,43),
(60,62),
(124,124),
(126,126),
(172,172),
(177,177),
(215,215),
(247,247),
(1014,1014),
(1542,1544),
(8260,8260),
(8274,8274),
(8314,8316),
(8330,8332),
(8472,8472),
(8512,8516),
(8523,8523),
(8592,8596),
(8602,8603),
(8608,8608),
(8611,8611),
(8614,8614),
(8622,8622),
(8654,8655),
(8658,8658),
(8660,8660),
(8692,8959),
(8992,8993),
(9084,9084),
(9115,9139),
(9180,9185),
(9655,9655),
(9665,9665),
(9720,9727),
(9839,9839),
(10176,10180),
(10183,10213),
(10224,10239),
(10496,10626),
(10649,10711),
(10716,10747),
(10750,11007),
(11056,11076),
(11079,11084),
(64297,64297),
(65122,65122),
(65124,65126),
(65291,65291),
(65308,65310),
(65372,65372),
(65374,65374),
(65506,65506),
(65513,65516),
(120513,120513),
(120539,120539),
(120571,120571),
(120597,120597),
(120629,120629),
(120655,120655),
(120687,120687),
(120713,120713),
(120745,120745),
(120771,120771),
(126704,126705)
);

const FLREUnicodeIgnoreCaseCategoryBlocks25:array[0..16] of TFLREUnicodeCharRange=(
(36,36),
(162,165),
(1423,1423),
(1547,1547),
(2546,2547),
(2555,2555),
(2801,2801),
(3065,3065),
(3647,3647),
(6107,6107),
(8352,8382),
(43064,43064),
(65020,65020),
(65129,65129),
(65284,65284),
(65504,65505),
(65509,65510)
);

const FLREUnicodeIgnoreCaseCategoryBlocks26:array[0..28] of TFLREUnicodeCharRange=(
(94,94),
(96,96),
(168,168),
(175,175),
(180,180),
(184,184),
(706,709),
(722,735),
(741,747),
(749,749),
(751,767),
(885,885),
(900,901),
(8125,8125),
(8127,8129),
(8141,8143),
(8157,8159),
(8173,8175),
(8189,8190),
(12443,12444),
(42752,42774),
(42784,42785),
(42889,42890),
(43867,43867),
(64434,64449),
(65342,65342),
(65344,65344),
(65507,65507),
(127995,127999)
);

const FLREUnicodeIgnoreCaseCategoryBlocks27:array[0..169] of TFLREUnicodeCharRange=(
(166,166),
(169,169),
(174,174),
(176,176),
(1154,1154),
(1421,1422),
(1550,1551),
(1758,1758),
(1769,1769),
(1789,1790),
(2038,2038),
(2554,2554),
(2928,2928),
(3059,3064),
(3066,3066),
(3199,3199),
(3449,3449),
(3841,3843),
(3859,3859),
(3861,3863),
(3866,3871),
(3892,3892),
(3894,3894),
(3896,3896),
(4030,4037),
(4039,4044),
(4046,4047),
(4053,4056),
(4254,4255),
(5008,5017),
(6464,6464),
(6622,6655),
(7009,7018),
(7028,7036),
(8448,8449),
(8451,8454),
(8456,8457),
(8468,8468),
(8470,8471),
(8478,8483),
(8485,8485),
(8487,8487),
(8489,8489),
(8494,8494),
(8506,8507),
(8522,8522),
(8524,8525),
(8527,8527),
(8586,8587),
(8597,8601),
(8604,8607),
(8609,8610),
(8612,8613),
(8615,8621),
(8623,8653),
(8656,8657),
(8659,8659),
(8661,8691),
(8960,8967),
(8972,8991),
(8994,9000),
(9003,9083),
(9085,9114),
(9140,9179),
(9186,9210),
(9216,9254),
(9280,9290),
(9372,9449),
(9472,9654),
(9656,9664),
(9666,9719),
(9728,9838),
(9840,10087),
(10132,10175),
(10240,10495),
(11008,11055),
(11077,11078),
(11085,11123),
(11126,11157),
(11160,11193),
(11197,11208),
(11210,11217),
(11244,11247),
(11493,11498),
(11904,11929),
(11931,12019),
(12032,12245),
(12272,12283),
(12292,12292),
(12306,12307),
(12320,12320),
(12342,12343),
(12350,12351),
(12688,12689),
(12694,12703),
(12736,12771),
(12800,12830),
(12842,12871),
(12880,12880),
(12896,12927),
(12938,12976),
(12992,13054),
(13056,13311),
(19904,19967),
(42128,42182),
(43048,43051),
(43062,43063),
(43065,43065),
(43639,43641),
(65021,65021),
(65508,65508),
(65512,65512),
(65517,65518),
(65532,65533),
(65847,65855),
(65913,65929),
(65932,65932),
(65936,65947),
(65952,65952),
(66000,66044),
(67703,67704),
(68296,68296),
(71487,71487),
(92988,92991),
(92997,92997),
(113820,113820),
(118784,119029),
(119040,119078),
(119081,119140),
(119146,119148),
(119171,119172),
(119180,119209),
(119214,119272),
(119296,119361),
(119365,119365),
(119552,119638),
(120832,121343),
(121399,121402),
(121453,121460),
(121462,121475),
(121477,121478),
(126976,127019),
(127024,127123),
(127136,127150),
(127153,127167),
(127169,127183),
(127185,127221),
(127248,127278),
(127280,127339),
(127344,127386),
(127462,127490),
(127504,127546),
(127552,127560),
(127568,127569),
(127744,127994),
(128000,128377),
(128379,128419),
(128421,128720),
(128736,128748),
(128752,128755),
(128768,128883),
(128896,128980),
(129024,129035),
(129040,129095),
(129104,129113),
(129120,129159),
(129168,129197),
(129296,129304),
(129408,129412),
(129472,129472)
);

const FLREUnicodeIgnoreCaseCategoryBlocks28:array[0..10] of TFLREUnicodeCharRange=(
(171,171),
(8216,8216),
(8219,8220),
(8223,8223),
(8249,8249),
(11778,11778),
(11780,11780),
(11785,11785),
(11788,11788),
(11804,11804),
(11808,11808)
);

const FLREUnicodeIgnoreCaseCategoryBlocks29:array[0..9] of TFLREUnicodeCharRange=(
(187,187),
(8217,8217),
(8221,8221),
(8250,8250),
(11779,11779),
(11781,11781),
(11786,11786),
(11789,11789),
(11805,11805),
(11809,11809)
);

const FLREUnicodeIgnoreCaseCategoryBlocksData:array[0..29] of pointer=(
@FLREUnicodeIgnoreCaseCategoryBlocks0,
@FLREUnicodeIgnoreCaseCategoryBlocks1,
@FLREUnicodeIgnoreCaseCategoryBlocks2,
@FLREUnicodeIgnoreCaseCategoryBlocks3,
@FLREUnicodeIgnoreCaseCategoryBlocks4,
@FLREUnicodeIgnoreCaseCategoryBlocks5,
@FLREUnicodeIgnoreCaseCategoryBlocks6,
@FLREUnicodeIgnoreCaseCategoryBlocks7,
@FLREUnicodeIgnoreCaseCategoryBlocks8,
@FLREUnicodeIgnoreCaseCategoryBlocks9,
@FLREUnicodeIgnoreCaseCategoryBlocks10,
@FLREUnicodeIgnoreCaseCategoryBlocks11,
@FLREUnicodeIgnoreCaseCategoryBlocks12,
@FLREUnicodeIgnoreCaseCategoryBlocks13,
@FLREUnicodeIgnoreCaseCategoryBlocks14,
@FLREUnicodeIgnoreCaseCategoryBlocks15,
@FLREUnicodeIgnoreCaseCategoryBlocks16,
@FLREUnicodeIgnoreCaseCategoryBlocks17,
@FLREUnicodeIgnoreCaseCategoryBlocks18,
@FLREUnicodeIgnoreCaseCategoryBlocks19,
@FLREUnicodeIgnoreCaseCategoryBlocks20,
@FLREUnicodeIgnoreCaseCategoryBlocks21,
@FLREUnicodeIgnoreCaseCategoryBlocks22,
@FLREUnicodeIgnoreCaseCategoryBlocks23,
@FLREUnicodeIgnoreCaseCategoryBlocks24,
@FLREUnicodeIgnoreCaseCategoryBlocks25,
@FLREUnicodeIgnoreCaseCategoryBlocks26,
@FLREUnicodeIgnoreCaseCategoryBlocks27,
@FLREUnicodeIgnoreCaseCategoryBlocks28,
@FLREUnicodeIgnoreCaseCategoryBlocks29
);

const FLREUnicodeIgnoreCaseCategoryBlocksCounts:array[0..29] of longint=(
613,
163,
124,
9,
56,
433,
267,
5,
147,
51,
12,
58,
7,
1,
1,
2,
17,
3,
1,
17,
75,
72,
6,
157,
64,
17,
29,
170,
11,
10
);

const FLRECountUnicodeScriptBlocks=131;

const FLREUnicodeScriptBlocks0:array[0..610] of TFLREUnicodeCharRange=(
(888,889),
(896,899),
(907,907),
(909,909),
(930,930),
(1328,1328),
(1367,1368),
(1376,1376),
(1416,1416),
(1419,1420),
(1424,1424),
(1480,1487),
(1515,1519),
(1525,1535),
(1565,1565),
(1806,1806),
(1867,1868),
(1970,1983),
(2043,2047),
(2094,2095),
(2111,2111),
(2140,2141),
(2143,2207),
(2229,2274),
(2436,2436),
(2445,2446),
(2449,2450),
(2473,2473),
(2481,2481),
(2483,2485),
(2490,2491),
(2501,2502),
(2505,2506),
(2511,2518),
(2520,2523),
(2526,2526),
(2532,2533),
(2556,2560),
(2564,2564),
(2571,2574),
(2577,2578),
(2601,2601),
(2609,2609),
(2612,2612),
(2615,2615),
(2618,2619),
(2621,2621),
(2627,2630),
(2633,2634),
(2638,2640),
(2642,2648),
(2653,2653),
(2655,2661),
(2678,2688),
(2692,2692),
(2702,2702),
(2706,2706),
(2729,2729),
(2737,2737),
(2740,2740),
(2746,2747),
(2758,2758),
(2762,2762),
(2766,2767),
(2769,2783),
(2788,2789),
(2802,2808),
(2810,2816),
(2820,2820),
(2829,2830),
(2833,2834),
(2857,2857),
(2865,2865),
(2868,2868),
(2874,2875),
(2885,2886),
(2889,2890),
(2894,2901),
(2904,2907),
(2910,2910),
(2916,2917),
(2936,2945),
(2948,2948),
(2955,2957),
(2961,2961),
(2966,2968),
(2971,2971),
(2973,2973),
(2976,2978),
(2981,2983),
(2987,2989),
(3002,3005),
(3011,3013),
(3017,3017),
(3022,3023),
(3025,3030),
(3032,3045),
(3067,3071),
(3076,3076),
(3085,3085),
(3089,3089),
(3113,3113),
(3130,3132),
(3141,3141),
(3145,3145),
(3150,3156),
(3159,3159),
(3163,3167),
(3172,3173),
(3184,3191),
(3200,3200),
(3204,3204),
(3213,3213),
(3217,3217),
(3241,3241),
(3252,3252),
(3258,3259),
(3269,3269),
(3273,3273),
(3278,3284),
(3287,3293),
(3295,3295),
(3300,3301),
(3312,3312),
(3315,3328),
(3332,3332),
(3341,3341),
(3345,3345),
(3387,3388),
(3397,3397),
(3401,3401),
(3407,3414),
(3416,3422),
(3428,3429),
(3446,3448),
(3456,3457),
(3460,3460),
(3479,3481),
(3506,3506),
(3516,3516),
(3518,3519),
(3527,3529),
(3531,3534),
(3541,3541),
(3543,3543),
(3552,3557),
(3568,3569),
(3573,3584),
(3643,3646),
(3676,3712),
(3715,3715),
(3717,3718),
(3721,3721),
(3723,3724),
(3726,3731),
(3736,3736),
(3744,3744),
(3748,3748),
(3750,3750),
(3752,3753),
(3756,3756),
(3770,3770),
(3774,3775),
(3781,3781),
(3783,3783),
(3790,3791),
(3802,3803),
(3808,3839),
(3912,3912),
(3949,3952),
(3992,3992),
(4029,4029),
(4045,4045),
(4059,4095),
(4294,4294),
(4296,4300),
(4302,4303),
(4681,4681),
(4686,4687),
(4695,4695),
(4697,4697),
(4702,4703),
(4745,4745),
(4750,4751),
(4785,4785),
(4790,4791),
(4799,4799),
(4801,4801),
(4806,4807),
(4823,4823),
(4881,4881),
(4886,4887),
(4955,4956),
(4989,4991),
(5018,5023),
(5110,5111),
(5118,5119),
(5789,5791),
(5881,5887),
(5901,5901),
(5909,5919),
(5943,5951),
(5972,5983),
(5997,5997),
(6001,6001),
(6004,6015),
(6110,6111),
(6122,6127),
(6138,6143),
(6159,6159),
(6170,6175),
(6264,6271),
(6315,6319),
(6390,6399),
(6431,6431),
(6444,6447),
(6460,6463),
(6465,6467),
(6510,6511),
(6517,6527),
(6572,6575),
(6602,6607),
(6619,6621),
(6684,6685),
(6751,6751),
(6781,6782),
(6794,6799),
(6810,6815),
(6830,6831),
(6847,6911),
(6988,6991),
(7037,7039),
(7156,7163),
(7224,7226),
(7242,7244),
(7296,7359),
(7368,7375),
(7415,7415),
(7418,7423),
(7670,7675),
(7958,7959),
(7966,7967),
(8006,8007),
(8014,8015),
(8024,8024),
(8026,8026),
(8028,8028),
(8030,8030),
(8062,8063),
(8117,8117),
(8133,8133),
(8148,8149),
(8156,8156),
(8176,8177),
(8181,8181),
(8191,8191),
(8293,8293),
(8306,8307),
(8335,8335),
(8349,8351),
(8383,8399),
(8433,8447),
(8588,8591),
(9211,9215),
(9255,9279),
(9291,9311),
(11124,11125),
(11158,11159),
(11194,11196),
(11209,11209),
(11218,11243),
(11248,11263),
(11311,11311),
(11359,11359),
(11508,11512),
(11558,11558),
(11560,11564),
(11566,11567),
(11624,11630),
(11633,11646),
(11671,11679),
(11687,11687),
(11695,11695),
(11703,11703),
(11711,11711),
(11719,11719),
(11727,11727),
(11735,11735),
(11743,11743),
(11843,11903),
(11930,11930),
(12020,12031),
(12246,12271),
(12284,12287),
(12352,12352),
(12439,12440),
(12544,12548),
(12590,12592),
(12687,12687),
(12731,12735),
(12772,12783),
(12831,12831),
(13055,13055),
(19894,19903),
(40918,40959),
(42125,42127),
(42183,42191),
(42540,42559),
(42744,42751),
(42926,42927),
(42936,42998),
(43052,43055),
(43066,43071),
(43128,43135),
(43205,43213),
(43226,43231),
(43262,43263),
(43348,43358),
(43389,43391),
(43470,43470),
(43482,43485),
(43519,43519),
(43575,43583),
(43598,43599),
(43610,43611),
(43715,43738),
(43767,43776),
(43783,43784),
(43791,43792),
(43799,43807),
(43815,43815),
(43823,43823),
(43878,43887),
(44014,44015),
(44026,44031),
(55204,55215),
(55239,55242),
(55292,63743),
(64110,64111),
(64218,64255),
(64263,64274),
(64280,64284),
(64311,64311),
(64317,64317),
(64319,64319),
(64322,64322),
(64325,64325),
(64450,64466),
(64832,64847),
(64912,64913),
(64968,65007),
(65022,65023),
(65050,65055),
(65107,65107),
(65127,65127),
(65132,65135),
(65141,65141),
(65277,65278),
(65280,65280),
(65471,65473),
(65480,65481),
(65488,65489),
(65496,65497),
(65501,65503),
(65511,65511),
(65519,65528),
(65534,65535),
(65548,65548),
(65575,65575),
(65595,65595),
(65598,65598),
(65614,65615),
(65630,65663),
(65787,65791),
(65795,65798),
(65844,65846),
(65933,65935),
(65948,65951),
(65953,65999),
(66046,66175),
(66205,66207),
(66257,66271),
(66300,66303),
(66340,66351),
(66379,66383),
(66427,66431),
(66462,66462),
(66500,66503),
(66518,66559),
(66718,66719),
(66730,66815),
(66856,66863),
(66916,66926),
(66928,67071),
(67383,67391),
(67414,67423),
(67432,67583),
(67590,67591),
(67593,67593),
(67638,67638),
(67641,67643),
(67645,67646),
(67670,67670),
(67743,67750),
(67760,67807),
(67827,67827),
(67830,67834),
(67868,67870),
(67898,67902),
(67904,67967),
(68024,68027),
(68048,68049),
(68100,68100),
(68103,68107),
(68116,68116),
(68120,68120),
(68148,68151),
(68155,68158),
(68168,68175),
(68185,68191),
(68256,68287),
(68327,68330),
(68343,68351),
(68406,68408),
(68438,68439),
(68467,68471),
(68498,68504),
(68509,68520),
(68528,68607),
(68681,68735),
(68787,68799),
(68851,68857),
(68864,69215),
(69247,69631),
(69710,69713),
(69744,69758),
(69826,69839),
(69865,69871),
(69882,69887),
(69941,69941),
(69956,69967),
(70007,70015),
(70094,70095),
(70112,70112),
(70133,70143),
(70162,70162),
(70206,70271),
(70279,70279),
(70281,70281),
(70286,70286),
(70302,70302),
(70314,70319),
(70379,70383),
(70394,70399),
(70404,70404),
(70413,70414),
(70417,70418),
(70441,70441),
(70449,70449),
(70452,70452),
(70458,70459),
(70469,70470),
(70473,70474),
(70478,70479),
(70481,70486),
(70488,70492),
(70500,70501),
(70509,70511),
(70517,70783),
(70856,70863),
(70874,71039),
(71094,71095),
(71134,71167),
(71237,71247),
(71258,71295),
(71352,71359),
(71370,71423),
(71450,71452),
(71468,71471),
(71488,71839),
(71923,71934),
(71936,72383),
(72441,73727),
(74650,74751),
(74863,74863),
(74869,74879),
(75076,77823),
(78895,82943),
(83527,92159),
(92729,92735),
(92767,92767),
(92778,92781),
(92784,92879),
(92910,92911),
(92918,92927),
(92998,93007),
(93018,93018),
(93026,93026),
(93048,93052),
(93072,93951),
(94021,94031),
(94079,94094),
(94112,110591),
(110594,113663),
(113771,113775),
(113789,113791),
(113801,113807),
(113818,113819),
(113828,118783),
(119030,119039),
(119079,119080),
(119273,119295),
(119366,119551),
(119639,119647),
(119666,119807),
(119893,119893),
(119965,119965),
(119968,119969),
(119971,119972),
(119975,119976),
(119981,119981),
(119994,119994),
(119996,119996),
(120004,120004),
(120070,120070),
(120075,120076),
(120085,120085),
(120093,120093),
(120122,120122),
(120127,120127),
(120133,120133),
(120135,120137),
(120145,120145),
(120486,120487),
(120780,120781),
(121484,121498),
(121504,121504),
(121520,124927),
(125125,125126),
(125143,126463),
(126468,126468),
(126496,126496),
(126499,126499),
(126501,126502),
(126504,126504),
(126515,126515),
(126520,126520),
(126522,126522),
(126524,126529),
(126531,126534),
(126536,126536),
(126538,126538),
(126540,126540),
(126544,126544),
(126547,126547),
(126549,126550),
(126552,126552),
(126554,126554),
(126556,126556),
(126558,126558),
(126560,126560),
(126563,126563),
(126565,126566),
(126571,126571),
(126579,126579),
(126584,126584),
(126589,126589),
(126591,126591),
(126602,126602),
(126620,126624),
(126628,126628),
(126634,126634),
(126652,126703),
(126706,126975),
(127020,127023),
(127124,127135),
(127151,127152),
(127168,127168),
(127184,127184),
(127222,127231),
(127245,127247),
(127279,127279),
(127340,127343),
(127387,127461),
(127491,127503),
(127547,127551),
(127561,127567),
(127570,127743),
(128378,128378),
(128420,128420),
(128721,128735),
(128749,128751),
(128756,128767),
(128884,128895),
(128981,129023),
(129036,129039),
(129096,129103),
(129114,129119),
(129160,129167),
(129198,129295),
(129305,129407),
(129413,129471),
(129473,131071),
(173783,173823),
(177973,177983),
(178206,178207),
(183970,194559),
(195102,917504),
(917506,917535),
(917632,917759),
(918000,1114111)
);

const FLREUnicodeScriptBlocks1:array[0..160] of TFLREUnicodeCharRange=(
(0,64),
(91,96),
(123,169),
(171,185),
(187,191),
(215,215),
(247,247),
(697,735),
(741,745),
(748,767),
(884,884),
(894,894),
(901,901),
(903,903),
(1417,1417),
(1541,1541),
(1548,1548),
(1563,1564),
(1567,1567),
(1600,1600),
(1757,1757),
(2404,2405),
(3647,3647),
(4053,4056),
(4347,4347),
(5867,5869),
(5941,5942),
(6146,6147),
(6149,6149),
(7379,7379),
(7393,7393),
(7401,7404),
(7406,7411),
(7413,7414),
(8192,8203),
(8206,8292),
(8294,8304),
(8308,8318),
(8320,8334),
(8352,8382),
(8448,8485),
(8487,8489),
(8492,8497),
(8499,8525),
(8527,8543),
(8585,8587),
(8592,9210),
(9216,9254),
(9280,9290),
(9312,10239),
(10496,11123),
(11126,11157),
(11160,11193),
(11197,11208),
(11210,11217),
(11244,11247),
(11776,11842),
(12272,12283),
(12288,12292),
(12294,12294),
(12296,12320),
(12336,12343),
(12348,12351),
(12443,12444),
(12448,12448),
(12539,12540),
(12688,12703),
(12736,12771),
(12832,12895),
(12927,13007),
(13144,13311),
(19904,19967),
(42752,42785),
(42888,42890),
(43056,43065),
(43310,43310),
(43471,43471),
(43867,43867),
(64830,64831),
(65040,65049),
(65072,65106),
(65108,65126),
(65128,65131),
(65279,65279),
(65281,65312),
(65339,65344),
(65371,65381),
(65392,65392),
(65438,65439),
(65504,65510),
(65512,65518),
(65529,65533),
(65792,65794),
(65799,65843),
(65847,65855),
(65936,65947),
(66000,66044),
(66273,66299),
(113824,113827),
(118784,119029),
(119040,119078),
(119081,119142),
(119146,119162),
(119171,119172),
(119180,119209),
(119214,119272),
(119552,119638),
(119648,119665),
(119808,119892),
(119894,119964),
(119966,119967),
(119970,119970),
(119973,119974),
(119977,119980),
(119982,119993),
(119995,119995),
(119997,120003),
(120005,120069),
(120071,120074),
(120077,120084),
(120086,120092),
(120094,120121),
(120123,120126),
(120128,120132),
(120134,120134),
(120138,120144),
(120146,120485),
(120488,120779),
(120782,120831),
(126976,127019),
(127024,127123),
(127136,127150),
(127153,127167),
(127169,127183),
(127185,127221),
(127232,127244),
(127248,127278),
(127280,127339),
(127344,127386),
(127462,127487),
(127489,127490),
(127504,127546),
(127552,127560),
(127568,127569),
(127744,128377),
(128379,128419),
(128421,128720),
(128736,128748),
(128752,128755),
(128768,128883),
(128896,128980),
(129024,129035),
(129040,129095),
(129104,129113),
(129120,129159),
(129168,129197),
(129296,129304),
(129408,129412),
(129472,129472),
(917505,917505),
(917536,917631)
);

const FLREUnicodeScriptBlocks2:array[0..30] of TFLREUnicodeCharRange=(
(65,90),
(97,122),
(170,170),
(186,186),
(192,214),
(216,246),
(248,696),
(736,740),
(7424,7461),
(7468,7516),
(7522,7525),
(7531,7543),
(7545,7614),
(7680,7935),
(8305,8305),
(8319,8319),
(8336,8348),
(8490,8491),
(8498,8498),
(8526,8526),
(8544,8584),
(11360,11391),
(42786,42887),
(42891,42925),
(42928,42935),
(42999,43007),
(43824,43866),
(43868,43876),
(64256,64262),
(65313,65338),
(65345,65370)
);

const FLREUnicodeScriptBlocks3:array[0..35] of TFLREUnicodeCharRange=(
(880,883),
(885,887),
(890,893),
(895,895),
(900,900),
(902,902),
(904,906),
(908,908),
(910,929),
(931,993),
(1008,1023),
(7462,7466),
(7517,7521),
(7526,7530),
(7615,7615),
(7936,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8016,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8064,8116),
(8118,8132),
(8134,8147),
(8150,8155),
(8157,8175),
(8178,8180),
(8182,8190),
(8486,8486),
(43877,43877),
(65856,65932),
(65952,65952),
(119296,119365)
);

const FLREUnicodeScriptBlocks4:array[0..6] of TFLREUnicodeCharRange=(
(1024,1156),
(1159,1327),
(7467,7467),
(7544,7544),
(11744,11775),
(42560,42655),
(65070,65071)
);

const FLREUnicodeScriptBlocks5:array[0..5] of TFLREUnicodeCharRange=(
(1329,1366),
(1369,1375),
(1377,1415),
(1418,1418),
(1421,1423),
(64275,64279)
);

const FLREUnicodeScriptBlocks6:array[0..8] of TFLREUnicodeCharRange=(
(1425,1479),
(1488,1514),
(1520,1524),
(64285,64310),
(64312,64316),
(64318,64318),
(64320,64321),
(64323,64324),
(64326,64335)
);

const FLREUnicodeScriptBlocks7:array[0..53] of TFLREUnicodeCharRange=(
(1536,1540),
(1542,1547),
(1549,1562),
(1566,1566),
(1568,1599),
(1601,1610),
(1622,1647),
(1649,1756),
(1758,1791),
(1872,1919),
(2208,2228),
(2275,2303),
(64336,64449),
(64467,64829),
(64848,64911),
(64914,64967),
(65008,65021),
(65136,65140),
(65142,65276),
(69216,69246),
(126464,126467),
(126469,126495),
(126497,126498),
(126500,126500),
(126503,126503),
(126505,126514),
(126516,126519),
(126521,126521),
(126523,126523),
(126530,126530),
(126535,126535),
(126537,126537),
(126539,126539),
(126541,126543),
(126545,126546),
(126548,126548),
(126551,126551),
(126553,126553),
(126555,126555),
(126557,126557),
(126559,126559),
(126561,126562),
(126564,126564),
(126567,126570),
(126572,126578),
(126580,126583),
(126585,126588),
(126590,126590),
(126592,126601),
(126603,126619),
(126625,126627),
(126629,126633),
(126635,126651),
(126704,126705)
);

const FLREUnicodeScriptBlocks8:array[0..2] of TFLREUnicodeCharRange=(
(1792,1805),
(1807,1866),
(1869,1871)
);

const FLREUnicodeScriptBlocks9:array[0..0] of TFLREUnicodeCharRange=(
(1920,1969)
);

const FLREUnicodeScriptBlocks10:array[0..3] of TFLREUnicodeCharRange=(
(2304,2384),
(2387,2403),
(2406,2431),
(43232,43261)
);

const FLREUnicodeScriptBlocks11:array[0..13] of TFLREUnicodeCharRange=(
(2432,2435),
(2437,2444),
(2447,2448),
(2451,2472),
(2474,2480),
(2482,2482),
(2486,2489),
(2492,2500),
(2503,2504),
(2507,2510),
(2519,2519),
(2524,2525),
(2527,2531),
(2534,2555)
);

const FLREUnicodeScriptBlocks12:array[0..15] of TFLREUnicodeCharRange=(
(2561,2563),
(2565,2570),
(2575,2576),
(2579,2600),
(2602,2608),
(2610,2611),
(2613,2614),
(2616,2617),
(2620,2620),
(2622,2626),
(2631,2632),
(2635,2637),
(2641,2641),
(2649,2652),
(2654,2654),
(2662,2677)
);

const FLREUnicodeScriptBlocks13:array[0..13] of TFLREUnicodeCharRange=(
(2689,2691),
(2693,2701),
(2703,2705),
(2707,2728),
(2730,2736),
(2738,2739),
(2741,2745),
(2748,2757),
(2759,2761),
(2763,2765),
(2768,2768),
(2784,2787),
(2790,2801),
(2809,2809)
);

const FLREUnicodeScriptBlocks14:array[0..13] of TFLREUnicodeCharRange=(
(2817,2819),
(2821,2828),
(2831,2832),
(2835,2856),
(2858,2864),
(2866,2867),
(2869,2873),
(2876,2884),
(2887,2888),
(2891,2893),
(2902,2903),
(2908,2909),
(2911,2915),
(2918,2935)
);

const FLREUnicodeScriptBlocks15:array[0..15] of TFLREUnicodeCharRange=(
(2946,2947),
(2949,2954),
(2958,2960),
(2962,2965),
(2969,2970),
(2972,2972),
(2974,2975),
(2979,2980),
(2984,2986),
(2990,3001),
(3006,3010),
(3014,3016),
(3018,3021),
(3024,3024),
(3031,3031),
(3046,3066)
);

const FLREUnicodeScriptBlocks16:array[0..12] of TFLREUnicodeCharRange=(
(3072,3075),
(3077,3084),
(3086,3088),
(3090,3112),
(3114,3129),
(3133,3140),
(3142,3144),
(3146,3149),
(3157,3158),
(3160,3162),
(3168,3171),
(3174,3183),
(3192,3199)
);

const FLREUnicodeScriptBlocks17:array[0..13] of TFLREUnicodeCharRange=(
(3201,3203),
(3205,3212),
(3214,3216),
(3218,3240),
(3242,3251),
(3253,3257),
(3260,3268),
(3270,3272),
(3274,3277),
(3285,3286),
(3294,3294),
(3296,3299),
(3302,3311),
(3313,3314)
);

const FLREUnicodeScriptBlocks18:array[0..10] of TFLREUnicodeCharRange=(
(3329,3331),
(3333,3340),
(3342,3344),
(3346,3386),
(3389,3396),
(3398,3400),
(3402,3406),
(3415,3415),
(3423,3427),
(3430,3445),
(3449,3455)
);

const FLREUnicodeScriptBlocks19:array[0..12] of TFLREUnicodeCharRange=(
(3458,3459),
(3461,3478),
(3482,3505),
(3507,3515),
(3517,3517),
(3520,3526),
(3530,3530),
(3535,3540),
(3542,3542),
(3544,3551),
(3558,3567),
(3570,3572),
(70113,70132)
);

const FLREUnicodeScriptBlocks20:array[0..1] of TFLREUnicodeCharRange=(
(3585,3642),
(3648,3675)
);

const FLREUnicodeScriptBlocks21:array[0..17] of TFLREUnicodeCharRange=(
(3713,3714),
(3716,3716),
(3719,3720),
(3722,3722),
(3725,3725),
(3732,3735),
(3737,3743),
(3745,3747),
(3749,3749),
(3751,3751),
(3754,3755),
(3757,3769),
(3771,3773),
(3776,3780),
(3782,3782),
(3784,3789),
(3792,3801),
(3804,3807)
);

const FLREUnicodeScriptBlocks22:array[0..6] of TFLREUnicodeCharRange=(
(3840,3911),
(3913,3948),
(3953,3991),
(3993,4028),
(4030,4044),
(4046,4052),
(4057,4058)
);

const FLREUnicodeScriptBlocks23:array[0..2] of TFLREUnicodeCharRange=(
(4096,4255),
(43488,43518),
(43616,43647)
);

const FLREUnicodeScriptBlocks24:array[0..7] of TFLREUnicodeCharRange=(
(4256,4293),
(4295,4295),
(4301,4301),
(4304,4346),
(4348,4351),
(11520,11557),
(11559,11559),
(11565,11565)
);

const FLREUnicodeScriptBlocks25:array[0..13] of TFLREUnicodeCharRange=(
(4352,4607),
(12334,12335),
(12593,12686),
(12800,12830),
(12896,12926),
(43360,43388),
(44032,55203),
(55216,55238),
(55243,55291),
(65440,65470),
(65474,65479),
(65482,65487),
(65490,65495),
(65498,65500)
);

const FLREUnicodeScriptBlocks26:array[0..31] of TFLREUnicodeCharRange=(
(4608,4680),
(4682,4685),
(4688,4694),
(4696,4696),
(4698,4701),
(4704,4744),
(4746,4749),
(4752,4784),
(4786,4789),
(4792,4798),
(4800,4800),
(4802,4805),
(4808,4822),
(4824,4880),
(4882,4885),
(4888,4954),
(4957,4988),
(4992,5017),
(11648,11670),
(11680,11686),
(11688,11694),
(11696,11702),
(11704,11710),
(11712,11718),
(11720,11726),
(11728,11734),
(11736,11742),
(43777,43782),
(43785,43790),
(43793,43798),
(43808,43814),
(43816,43822)
);

const FLREUnicodeScriptBlocks27:array[0..2] of TFLREUnicodeCharRange=(
(5024,5109),
(5112,5117),
(43888,43967)
);

const FLREUnicodeScriptBlocks28:array[0..1] of TFLREUnicodeCharRange=(
(5120,5759),
(6320,6389)
);

const FLREUnicodeScriptBlocks29:array[0..0] of TFLREUnicodeCharRange=(
(5760,5788)
);

const FLREUnicodeScriptBlocks30:array[0..1] of TFLREUnicodeCharRange=(
(5792,5866),
(5870,5880)
);

const FLREUnicodeScriptBlocks31:array[0..3] of TFLREUnicodeCharRange=(
(6016,6109),
(6112,6121),
(6128,6137),
(6624,6655)
);

const FLREUnicodeScriptBlocks32:array[0..5] of TFLREUnicodeCharRange=(
(6144,6145),
(6148,6148),
(6150,6158),
(6160,6169),
(6176,6263),
(6272,6314)
);

const FLREUnicodeScriptBlocks33:array[0..3] of TFLREUnicodeCharRange=(
(12353,12438),
(12445,12447),
(110593,110593),
(127488,127488)
);

const FLREUnicodeScriptBlocks34:array[0..7] of TFLREUnicodeCharRange=(
(12449,12538),
(12541,12543),
(12784,12799),
(13008,13054),
(13056,13143),
(65382,65391),
(65393,65437),
(110592,110592)
);

const FLREUnicodeScriptBlocks35:array[0..2] of TFLREUnicodeCharRange=(
(746,747),
(12549,12589),
(12704,12730)
);

const FLREUnicodeScriptBlocks36:array[0..15] of TFLREUnicodeCharRange=(
(11904,11929),
(11931,12019),
(12032,12245),
(12293,12293),
(12295,12295),
(12321,12329),
(12344,12347),
(13312,19893),
(19968,40917),
(63744,64109),
(64112,64217),
(131072,173782),
(173824,177972),
(177984,178205),
(178208,183969),
(194560,195101)
);

const FLREUnicodeScriptBlocks37:array[0..1] of TFLREUnicodeCharRange=(
(40960,42124),
(42128,42182)
);

const FLREUnicodeScriptBlocks38:array[0..0] of TFLREUnicodeCharRange=(
(66304,66339)
);

const FLREUnicodeScriptBlocks39:array[0..0] of TFLREUnicodeCharRange=(
(66352,66378)
);

const FLREUnicodeScriptBlocks40:array[0..0] of TFLREUnicodeCharRange=(
(66560,66639)
);

const FLREUnicodeScriptBlocks41:array[0..26] of TFLREUnicodeCharRange=(
(768,879),
(1157,1158),
(1611,1621),
(1648,1648),
(2385,2386),
(6832,6846),
(7376,7378),
(7380,7392),
(7394,7400),
(7405,7405),
(7412,7412),
(7416,7417),
(7616,7669),
(7676,7679),
(8204,8205),
(8400,8432),
(12330,12333),
(12441,12442),
(65024,65039),
(65056,65069),
(66045,66045),
(66272,66272),
(119143,119145),
(119163,119170),
(119173,119179),
(119210,119213),
(917760,917999)
);

const FLREUnicodeScriptBlocks42:array[0..1] of TFLREUnicodeCharRange=(
(5888,5900),
(5902,5908)
);

const FLREUnicodeScriptBlocks43:array[0..0] of TFLREUnicodeCharRange=(
(5920,5940)
);

const FLREUnicodeScriptBlocks44:array[0..0] of TFLREUnicodeCharRange=(
(5952,5971)
);

const FLREUnicodeScriptBlocks45:array[0..2] of TFLREUnicodeCharRange=(
(5984,5996),
(5998,6000),
(6002,6003)
);

const FLREUnicodeScriptBlocks46:array[0..4] of TFLREUnicodeCharRange=(
(6400,6430),
(6432,6443),
(6448,6459),
(6464,6464),
(6468,6479)
);

const FLREUnicodeScriptBlocks47:array[0..1] of TFLREUnicodeCharRange=(
(6480,6509),
(6512,6516)
);

const FLREUnicodeScriptBlocks48:array[0..6] of TFLREUnicodeCharRange=(
(65536,65547),
(65549,65574),
(65576,65594),
(65596,65597),
(65599,65613),
(65616,65629),
(65664,65786)
);

const FLREUnicodeScriptBlocks49:array[0..1] of TFLREUnicodeCharRange=(
(66432,66461),
(66463,66463)
);

const FLREUnicodeScriptBlocks50:array[0..0] of TFLREUnicodeCharRange=(
(66640,66687)
);

const FLREUnicodeScriptBlocks51:array[0..1] of TFLREUnicodeCharRange=(
(66688,66717),
(66720,66729)
);

const FLREUnicodeScriptBlocks52:array[0..5] of TFLREUnicodeCharRange=(
(67584,67589),
(67592,67592),
(67594,67637),
(67639,67640),
(67644,67644),
(67647,67647)
);

const FLREUnicodeScriptBlocks53:array[0..0] of TFLREUnicodeCharRange=(
(10240,10495)
);

const FLREUnicodeScriptBlocks54:array[0..1] of TFLREUnicodeCharRange=(
(6656,6683),
(6686,6687)
);

const FLREUnicodeScriptBlocks55:array[0..2] of TFLREUnicodeCharRange=(
(994,1007),
(11392,11507),
(11513,11519)
);

const FLREUnicodeScriptBlocks56:array[0..3] of TFLREUnicodeCharRange=(
(6528,6571),
(6576,6601),
(6608,6618),
(6622,6623)
);

const FLREUnicodeScriptBlocks57:array[0..1] of TFLREUnicodeCharRange=(
(11264,11310),
(11312,11358)
);

const FLREUnicodeScriptBlocks58:array[0..2] of TFLREUnicodeCharRange=(
(11568,11623),
(11631,11632),
(11647,11647)
);

const FLREUnicodeScriptBlocks59:array[0..0] of TFLREUnicodeCharRange=(
(43008,43051)
);

const FLREUnicodeScriptBlocks60:array[0..1] of TFLREUnicodeCharRange=(
(66464,66499),
(66504,66517)
);

const FLREUnicodeScriptBlocks61:array[0..7] of TFLREUnicodeCharRange=(
(68096,68099),
(68101,68102),
(68108,68115),
(68117,68119),
(68121,68147),
(68152,68154),
(68159,68167),
(68176,68184)
);

const FLREUnicodeScriptBlocks62:array[0..1] of TFLREUnicodeCharRange=(
(6912,6987),
(6992,7036)
);

const FLREUnicodeScriptBlocks63:array[0..3] of TFLREUnicodeCharRange=(
(73728,74649),
(74752,74862),
(74864,74868),
(74880,75075)
);

const FLREUnicodeScriptBlocks64:array[0..1] of TFLREUnicodeCharRange=(
(67840,67867),
(67871,67871)
);

const FLREUnicodeScriptBlocks65:array[0..0] of TFLREUnicodeCharRange=(
(43072,43127)
);

const FLREUnicodeScriptBlocks66:array[0..0] of TFLREUnicodeCharRange=(
(1984,2042)
);

const FLREUnicodeScriptBlocks67:array[0..1] of TFLREUnicodeCharRange=(
(7040,7103),
(7360,7367)
);

const FLREUnicodeScriptBlocks68:array[0..2] of TFLREUnicodeCharRange=(
(7168,7223),
(7227,7241),
(7245,7247)
);

const FLREUnicodeScriptBlocks69:array[0..0] of TFLREUnicodeCharRange=(
(7248,7295)
);

const FLREUnicodeScriptBlocks70:array[0..0] of TFLREUnicodeCharRange=(
(42240,42539)
);

const FLREUnicodeScriptBlocks71:array[0..1] of TFLREUnicodeCharRange=(
(43136,43204),
(43214,43225)
);

const FLREUnicodeScriptBlocks72:array[0..1] of TFLREUnicodeCharRange=(
(43264,43309),
(43311,43311)
);

const FLREUnicodeScriptBlocks73:array[0..1] of TFLREUnicodeCharRange=(
(43312,43347),
(43359,43359)
);

const FLREUnicodeScriptBlocks74:array[0..0] of TFLREUnicodeCharRange=(
(66176,66204)
);

const FLREUnicodeScriptBlocks75:array[0..0] of TFLREUnicodeCharRange=(
(66208,66256)
);

const FLREUnicodeScriptBlocks76:array[0..1] of TFLREUnicodeCharRange=(
(67872,67897),
(67903,67903)
);

const FLREUnicodeScriptBlocks77:array[0..3] of TFLREUnicodeCharRange=(
(43520,43574),
(43584,43597),
(43600,43609),
(43612,43615)
);

const FLREUnicodeScriptBlocks78:array[0..4] of TFLREUnicodeCharRange=(
(6688,6750),
(6752,6780),
(6783,6793),
(6800,6809),
(6816,6829)
);

const FLREUnicodeScriptBlocks79:array[0..1] of TFLREUnicodeCharRange=(
(43648,43714),
(43739,43743)
);

const FLREUnicodeScriptBlocks80:array[0..1] of TFLREUnicodeCharRange=(
(68352,68405),
(68409,68415)
);

const FLREUnicodeScriptBlocks81:array[0..0] of TFLREUnicodeCharRange=(
(77824,78894)
);

const FLREUnicodeScriptBlocks82:array[0..1] of TFLREUnicodeCharRange=(
(2048,2093),
(2096,2110)
);

const FLREUnicodeScriptBlocks83:array[0..0] of TFLREUnicodeCharRange=(
(42192,42239)
);

const FLREUnicodeScriptBlocks84:array[0..1] of TFLREUnicodeCharRange=(
(42656,42743),
(92160,92728)
);

const FLREUnicodeScriptBlocks85:array[0..2] of TFLREUnicodeCharRange=(
(43392,43469),
(43472,43481),
(43486,43487)
);

const FLREUnicodeScriptBlocks86:array[0..2] of TFLREUnicodeCharRange=(
(43744,43766),
(43968,44013),
(44016,44025)
);

const FLREUnicodeScriptBlocks87:array[0..1] of TFLREUnicodeCharRange=(
(67648,67669),
(67671,67679)
);

const FLREUnicodeScriptBlocks88:array[0..0] of TFLREUnicodeCharRange=(
(68192,68223)
);

const FLREUnicodeScriptBlocks89:array[0..1] of TFLREUnicodeCharRange=(
(68416,68437),
(68440,68447)
);

const FLREUnicodeScriptBlocks90:array[0..1] of TFLREUnicodeCharRange=(
(68448,68466),
(68472,68479)
);

const FLREUnicodeScriptBlocks91:array[0..0] of TFLREUnicodeCharRange=(
(68608,68680)
);

const FLREUnicodeScriptBlocks92:array[0..0] of TFLREUnicodeCharRange=(
(69760,69825)
);

const FLREUnicodeScriptBlocks93:array[0..1] of TFLREUnicodeCharRange=(
(7104,7155),
(7164,7167)
);

const FLREUnicodeScriptBlocks94:array[0..2] of TFLREUnicodeCharRange=(
(69632,69709),
(69714,69743),
(69759,69759)
);

const FLREUnicodeScriptBlocks95:array[0..1] of TFLREUnicodeCharRange=(
(2112,2139),
(2142,2142)
);

const FLREUnicodeScriptBlocks96:array[0..1] of TFLREUnicodeCharRange=(
(69888,69940),
(69942,69955)
);

const FLREUnicodeScriptBlocks97:array[0..2] of TFLREUnicodeCharRange=(
(68000,68023),
(68028,68047),
(68050,68095)
);

const FLREUnicodeScriptBlocks98:array[0..0] of TFLREUnicodeCharRange=(
(67968,67999)
);

const FLREUnicodeScriptBlocks99:array[0..2] of TFLREUnicodeCharRange=(
(93952,94020),
(94032,94078),
(94095,94111)
);

const FLREUnicodeScriptBlocks100:array[0..1] of TFLREUnicodeCharRange=(
(70016,70093),
(70096,70111)
);

const FLREUnicodeScriptBlocks101:array[0..1] of TFLREUnicodeCharRange=(
(69840,69864),
(69872,69881)
);

const FLREUnicodeScriptBlocks102:array[0..1] of TFLREUnicodeCharRange=(
(71296,71351),
(71360,71369)
);

const FLREUnicodeScriptBlocks103:array[0..1] of TFLREUnicodeCharRange=(
(66864,66915),
(66927,66927)
);

const FLREUnicodeScriptBlocks104:array[0..1] of TFLREUnicodeCharRange=(
(92880,92909),
(92912,92917)
);

const FLREUnicodeScriptBlocks105:array[0..4] of TFLREUnicodeCharRange=(
(113664,113770),
(113776,113788),
(113792,113800),
(113808,113817),
(113820,113823)
);

const FLREUnicodeScriptBlocks106:array[0..0] of TFLREUnicodeCharRange=(
(66816,66855)
);

const FLREUnicodeScriptBlocks107:array[0..14] of TFLREUnicodeCharRange=(
(70400,70403),
(70405,70412),
(70415,70416),
(70419,70440),
(70442,70448),
(70450,70451),
(70453,70457),
(70460,70468),
(70471,70472),
(70475,70477),
(70480,70480),
(70487,70487),
(70493,70499),
(70502,70508),
(70512,70516)
);

const FLREUnicodeScriptBlocks108:array[0..4] of TFLREUnicodeCharRange=(
(92928,92997),
(93008,93017),
(93019,93025),
(93027,93047),
(93053,93071)
);

const FLREUnicodeScriptBlocks109:array[0..1] of TFLREUnicodeCharRange=(
(70144,70161),
(70163,70205)
);

const FLREUnicodeScriptBlocks110:array[0..2] of TFLREUnicodeCharRange=(
(67072,67382),
(67392,67413),
(67424,67431)
);

const FLREUnicodeScriptBlocks111:array[0..0] of TFLREUnicodeCharRange=(
(69968,70006)
);

const FLREUnicodeScriptBlocks112:array[0..1] of TFLREUnicodeCharRange=(
(68288,68326),
(68331,68342)
);

const FLREUnicodeScriptBlocks113:array[0..1] of TFLREUnicodeCharRange=(
(124928,125124),
(125127,125142)
);

const FLREUnicodeScriptBlocks114:array[0..1] of TFLREUnicodeCharRange=(
(71168,71236),
(71248,71257)
);

const FLREUnicodeScriptBlocks115:array[0..2] of TFLREUnicodeCharRange=(
(92736,92766),
(92768,92777),
(92782,92783)
);

const FLREUnicodeScriptBlocks116:array[0..0] of TFLREUnicodeCharRange=(
(68224,68255)
);

const FLREUnicodeScriptBlocks117:array[0..1] of TFLREUnicodeCharRange=(
(67712,67742),
(67751,67759)
);

const FLREUnicodeScriptBlocks118:array[0..0] of TFLREUnicodeCharRange=(
(67680,67711)
);

const FLREUnicodeScriptBlocks119:array[0..0] of TFLREUnicodeCharRange=(
(72384,72440)
);

const FLREUnicodeScriptBlocks120:array[0..0] of TFLREUnicodeCharRange=(
(66384,66426)
);

const FLREUnicodeScriptBlocks121:array[0..2] of TFLREUnicodeCharRange=(
(68480,68497),
(68505,68508),
(68521,68527)
);

const FLREUnicodeScriptBlocks122:array[0..1] of TFLREUnicodeCharRange=(
(71040,71093),
(71096,71133)
);

const FLREUnicodeScriptBlocks123:array[0..1] of TFLREUnicodeCharRange=(
(70320,70378),
(70384,70393)
);

const FLREUnicodeScriptBlocks124:array[0..1] of TFLREUnicodeCharRange=(
(70784,70855),
(70864,70873)
);

const FLREUnicodeScriptBlocks125:array[0..1] of TFLREUnicodeCharRange=(
(71840,71922),
(71935,71935)
);

const FLREUnicodeScriptBlocks126:array[0..2] of TFLREUnicodeCharRange=(
(71424,71449),
(71453,71467),
(71472,71487)
);

const FLREUnicodeScriptBlocks127:array[0..0] of TFLREUnicodeCharRange=(
(82944,83526)
);

const FLREUnicodeScriptBlocks128:array[0..2] of TFLREUnicodeCharRange=(
(67808,67826),
(67828,67829),
(67835,67839)
);

const FLREUnicodeScriptBlocks129:array[0..4] of TFLREUnicodeCharRange=(
(70272,70278),
(70280,70280),
(70282,70285),
(70287,70301),
(70303,70313)
);

const FLREUnicodeScriptBlocks130:array[0..2] of TFLREUnicodeCharRange=(
(68736,68786),
(68800,68850),
(68858,68863)
);

const FLREUnicodeScriptBlocks131:array[0..2] of TFLREUnicodeCharRange=(
(120832,121483),
(121499,121503),
(121505,121519)
);

const FLREUnicodeScriptBlocksData:array[0..131] of pointer=(
@FLREUnicodeScriptBlocks0,
@FLREUnicodeScriptBlocks1,
@FLREUnicodeScriptBlocks2,
@FLREUnicodeScriptBlocks3,
@FLREUnicodeScriptBlocks4,
@FLREUnicodeScriptBlocks5,
@FLREUnicodeScriptBlocks6,
@FLREUnicodeScriptBlocks7,
@FLREUnicodeScriptBlocks8,
@FLREUnicodeScriptBlocks9,
@FLREUnicodeScriptBlocks10,
@FLREUnicodeScriptBlocks11,
@FLREUnicodeScriptBlocks12,
@FLREUnicodeScriptBlocks13,
@FLREUnicodeScriptBlocks14,
@FLREUnicodeScriptBlocks15,
@FLREUnicodeScriptBlocks16,
@FLREUnicodeScriptBlocks17,
@FLREUnicodeScriptBlocks18,
@FLREUnicodeScriptBlocks19,
@FLREUnicodeScriptBlocks20,
@FLREUnicodeScriptBlocks21,
@FLREUnicodeScriptBlocks22,
@FLREUnicodeScriptBlocks23,
@FLREUnicodeScriptBlocks24,
@FLREUnicodeScriptBlocks25,
@FLREUnicodeScriptBlocks26,
@FLREUnicodeScriptBlocks27,
@FLREUnicodeScriptBlocks28,
@FLREUnicodeScriptBlocks29,
@FLREUnicodeScriptBlocks30,
@FLREUnicodeScriptBlocks31,
@FLREUnicodeScriptBlocks32,
@FLREUnicodeScriptBlocks33,
@FLREUnicodeScriptBlocks34,
@FLREUnicodeScriptBlocks35,
@FLREUnicodeScriptBlocks36,
@FLREUnicodeScriptBlocks37,
@FLREUnicodeScriptBlocks38,
@FLREUnicodeScriptBlocks39,
@FLREUnicodeScriptBlocks40,
@FLREUnicodeScriptBlocks41,
@FLREUnicodeScriptBlocks42,
@FLREUnicodeScriptBlocks43,
@FLREUnicodeScriptBlocks44,
@FLREUnicodeScriptBlocks45,
@FLREUnicodeScriptBlocks46,
@FLREUnicodeScriptBlocks47,
@FLREUnicodeScriptBlocks48,
@FLREUnicodeScriptBlocks49,
@FLREUnicodeScriptBlocks50,
@FLREUnicodeScriptBlocks51,
@FLREUnicodeScriptBlocks52,
@FLREUnicodeScriptBlocks53,
@FLREUnicodeScriptBlocks54,
@FLREUnicodeScriptBlocks55,
@FLREUnicodeScriptBlocks56,
@FLREUnicodeScriptBlocks57,
@FLREUnicodeScriptBlocks58,
@FLREUnicodeScriptBlocks59,
@FLREUnicodeScriptBlocks60,
@FLREUnicodeScriptBlocks61,
@FLREUnicodeScriptBlocks62,
@FLREUnicodeScriptBlocks63,
@FLREUnicodeScriptBlocks64,
@FLREUnicodeScriptBlocks65,
@FLREUnicodeScriptBlocks66,
@FLREUnicodeScriptBlocks67,
@FLREUnicodeScriptBlocks68,
@FLREUnicodeScriptBlocks69,
@FLREUnicodeScriptBlocks70,
@FLREUnicodeScriptBlocks71,
@FLREUnicodeScriptBlocks72,
@FLREUnicodeScriptBlocks73,
@FLREUnicodeScriptBlocks74,
@FLREUnicodeScriptBlocks75,
@FLREUnicodeScriptBlocks76,
@FLREUnicodeScriptBlocks77,
@FLREUnicodeScriptBlocks78,
@FLREUnicodeScriptBlocks79,
@FLREUnicodeScriptBlocks80,
@FLREUnicodeScriptBlocks81,
@FLREUnicodeScriptBlocks82,
@FLREUnicodeScriptBlocks83,
@FLREUnicodeScriptBlocks84,
@FLREUnicodeScriptBlocks85,
@FLREUnicodeScriptBlocks86,
@FLREUnicodeScriptBlocks87,
@FLREUnicodeScriptBlocks88,
@FLREUnicodeScriptBlocks89,
@FLREUnicodeScriptBlocks90,
@FLREUnicodeScriptBlocks91,
@FLREUnicodeScriptBlocks92,
@FLREUnicodeScriptBlocks93,
@FLREUnicodeScriptBlocks94,
@FLREUnicodeScriptBlocks95,
@FLREUnicodeScriptBlocks96,
@FLREUnicodeScriptBlocks97,
@FLREUnicodeScriptBlocks98,
@FLREUnicodeScriptBlocks99,
@FLREUnicodeScriptBlocks100,
@FLREUnicodeScriptBlocks101,
@FLREUnicodeScriptBlocks102,
@FLREUnicodeScriptBlocks103,
@FLREUnicodeScriptBlocks104,
@FLREUnicodeScriptBlocks105,
@FLREUnicodeScriptBlocks106,
@FLREUnicodeScriptBlocks107,
@FLREUnicodeScriptBlocks108,
@FLREUnicodeScriptBlocks109,
@FLREUnicodeScriptBlocks110,
@FLREUnicodeScriptBlocks111,
@FLREUnicodeScriptBlocks112,
@FLREUnicodeScriptBlocks113,
@FLREUnicodeScriptBlocks114,
@FLREUnicodeScriptBlocks115,
@FLREUnicodeScriptBlocks116,
@FLREUnicodeScriptBlocks117,
@FLREUnicodeScriptBlocks118,
@FLREUnicodeScriptBlocks119,
@FLREUnicodeScriptBlocks120,
@FLREUnicodeScriptBlocks121,
@FLREUnicodeScriptBlocks122,
@FLREUnicodeScriptBlocks123,
@FLREUnicodeScriptBlocks124,
@FLREUnicodeScriptBlocks125,
@FLREUnicodeScriptBlocks126,
@FLREUnicodeScriptBlocks127,
@FLREUnicodeScriptBlocks128,
@FLREUnicodeScriptBlocks129,
@FLREUnicodeScriptBlocks130,
@FLREUnicodeScriptBlocks131
);

const FLREUnicodeScriptBlocksCounts:array[0..131] of longint=(
611,
161,
31,
36,
7,
6,
9,
54,
3,
1,
4,
14,
16,
14,
14,
16,
13,
14,
11,
13,
2,
18,
7,
3,
8,
14,
32,
3,
2,
1,
2,
4,
6,
4,
8,
3,
16,
2,
1,
1,
1,
27,
2,
1,
1,
3,
5,
2,
7,
2,
1,
2,
6,
1,
2,
3,
4,
2,
3,
1,
2,
8,
2,
4,
2,
1,
1,
2,
3,
1,
1,
2,
2,
2,
1,
1,
2,
4,
5,
2,
2,
1,
2,
1,
2,
3,
3,
2,
1,
2,
2,
1,
1,
2,
3,
2,
2,
3,
1,
3,
2,
2,
2,
2,
2,
5,
1,
15,
5,
2,
3,
1,
2,
2,
2,
3,
1,
2,
1,
1,
1,
3,
2,
2,
2,
2,
3,
1,
3,
5,
3,
3
);

const FLRECountUnicodeIgnoreCaseScriptBlocks=131;

const FLREUnicodeIgnoreCaseScriptBlocks0:array[0..610] of TFLREUnicodeCharRange=(
(888,889),
(896,899),
(907,907),
(909,909),
(930,930),
(1328,1328),
(1367,1368),
(1376,1376),
(1416,1416),
(1419,1420),
(1424,1424),
(1480,1487),
(1515,1519),
(1525,1535),
(1565,1565),
(1806,1806),
(1867,1868),
(1970,1983),
(2043,2047),
(2094,2095),
(2111,2111),
(2140,2141),
(2143,2207),
(2229,2274),
(2436,2436),
(2445,2446),
(2449,2450),
(2473,2473),
(2481,2481),
(2483,2485),
(2490,2491),
(2501,2502),
(2505,2506),
(2511,2518),
(2520,2523),
(2526,2526),
(2532,2533),
(2556,2560),
(2564,2564),
(2571,2574),
(2577,2578),
(2601,2601),
(2609,2609),
(2612,2612),
(2615,2615),
(2618,2619),
(2621,2621),
(2627,2630),
(2633,2634),
(2638,2640),
(2642,2648),
(2653,2653),
(2655,2661),
(2678,2688),
(2692,2692),
(2702,2702),
(2706,2706),
(2729,2729),
(2737,2737),
(2740,2740),
(2746,2747),
(2758,2758),
(2762,2762),
(2766,2767),
(2769,2783),
(2788,2789),
(2802,2808),
(2810,2816),
(2820,2820),
(2829,2830),
(2833,2834),
(2857,2857),
(2865,2865),
(2868,2868),
(2874,2875),
(2885,2886),
(2889,2890),
(2894,2901),
(2904,2907),
(2910,2910),
(2916,2917),
(2936,2945),
(2948,2948),
(2955,2957),
(2961,2961),
(2966,2968),
(2971,2971),
(2973,2973),
(2976,2978),
(2981,2983),
(2987,2989),
(3002,3005),
(3011,3013),
(3017,3017),
(3022,3023),
(3025,3030),
(3032,3045),
(3067,3071),
(3076,3076),
(3085,3085),
(3089,3089),
(3113,3113),
(3130,3132),
(3141,3141),
(3145,3145),
(3150,3156),
(3159,3159),
(3163,3167),
(3172,3173),
(3184,3191),
(3200,3200),
(3204,3204),
(3213,3213),
(3217,3217),
(3241,3241),
(3252,3252),
(3258,3259),
(3269,3269),
(3273,3273),
(3278,3284),
(3287,3293),
(3295,3295),
(3300,3301),
(3312,3312),
(3315,3328),
(3332,3332),
(3341,3341),
(3345,3345),
(3387,3388),
(3397,3397),
(3401,3401),
(3407,3414),
(3416,3422),
(3428,3429),
(3446,3448),
(3456,3457),
(3460,3460),
(3479,3481),
(3506,3506),
(3516,3516),
(3518,3519),
(3527,3529),
(3531,3534),
(3541,3541),
(3543,3543),
(3552,3557),
(3568,3569),
(3573,3584),
(3643,3646),
(3676,3712),
(3715,3715),
(3717,3718),
(3721,3721),
(3723,3724),
(3726,3731),
(3736,3736),
(3744,3744),
(3748,3748),
(3750,3750),
(3752,3753),
(3756,3756),
(3770,3770),
(3774,3775),
(3781,3781),
(3783,3783),
(3790,3791),
(3802,3803),
(3808,3839),
(3912,3912),
(3949,3952),
(3992,3992),
(4029,4029),
(4045,4045),
(4059,4095),
(4294,4294),
(4296,4300),
(4302,4303),
(4681,4681),
(4686,4687),
(4695,4695),
(4697,4697),
(4702,4703),
(4745,4745),
(4750,4751),
(4785,4785),
(4790,4791),
(4799,4799),
(4801,4801),
(4806,4807),
(4823,4823),
(4881,4881),
(4886,4887),
(4955,4956),
(4989,4991),
(5018,5023),
(5110,5111),
(5118,5119),
(5789,5791),
(5881,5887),
(5901,5901),
(5909,5919),
(5943,5951),
(5972,5983),
(5997,5997),
(6001,6001),
(6004,6015),
(6110,6111),
(6122,6127),
(6138,6143),
(6159,6159),
(6170,6175),
(6264,6271),
(6315,6319),
(6390,6399),
(6431,6431),
(6444,6447),
(6460,6463),
(6465,6467),
(6510,6511),
(6517,6527),
(6572,6575),
(6602,6607),
(6619,6621),
(6684,6685),
(6751,6751),
(6781,6782),
(6794,6799),
(6810,6815),
(6830,6831),
(6847,6911),
(6988,6991),
(7037,7039),
(7156,7163),
(7224,7226),
(7242,7244),
(7296,7359),
(7368,7375),
(7415,7415),
(7418,7423),
(7670,7675),
(7958,7959),
(7966,7967),
(8006,8007),
(8014,8015),
(8024,8024),
(8026,8026),
(8028,8028),
(8030,8030),
(8062,8063),
(8117,8117),
(8133,8133),
(8148,8149),
(8156,8156),
(8176,8177),
(8181,8181),
(8191,8191),
(8293,8293),
(8306,8307),
(8335,8335),
(8349,8351),
(8383,8399),
(8433,8447),
(8588,8591),
(9211,9215),
(9255,9279),
(9291,9311),
(11124,11125),
(11158,11159),
(11194,11196),
(11209,11209),
(11218,11243),
(11248,11263),
(11311,11311),
(11359,11359),
(11508,11512),
(11558,11558),
(11560,11564),
(11566,11567),
(11624,11630),
(11633,11646),
(11671,11679),
(11687,11687),
(11695,11695),
(11703,11703),
(11711,11711),
(11719,11719),
(11727,11727),
(11735,11735),
(11743,11743),
(11843,11903),
(11930,11930),
(12020,12031),
(12246,12271),
(12284,12287),
(12352,12352),
(12439,12440),
(12544,12548),
(12590,12592),
(12687,12687),
(12731,12735),
(12772,12783),
(12831,12831),
(13055,13055),
(19894,19903),
(40918,40959),
(42125,42127),
(42183,42191),
(42540,42559),
(42744,42751),
(42926,42927),
(42936,42998),
(43052,43055),
(43066,43071),
(43128,43135),
(43205,43213),
(43226,43231),
(43262,43263),
(43348,43358),
(43389,43391),
(43470,43470),
(43482,43485),
(43519,43519),
(43575,43583),
(43598,43599),
(43610,43611),
(43715,43738),
(43767,43776),
(43783,43784),
(43791,43792),
(43799,43807),
(43815,43815),
(43823,43823),
(43878,43887),
(44014,44015),
(44026,44031),
(55204,55215),
(55239,55242),
(55292,63743),
(64110,64111),
(64218,64255),
(64263,64274),
(64280,64284),
(64311,64311),
(64317,64317),
(64319,64319),
(64322,64322),
(64325,64325),
(64450,64466),
(64832,64847),
(64912,64913),
(64968,65007),
(65022,65023),
(65050,65055),
(65107,65107),
(65127,65127),
(65132,65135),
(65141,65141),
(65277,65278),
(65280,65280),
(65471,65473),
(65480,65481),
(65488,65489),
(65496,65497),
(65501,65503),
(65511,65511),
(65519,65528),
(65534,65535),
(65548,65548),
(65575,65575),
(65595,65595),
(65598,65598),
(65614,65615),
(65630,65663),
(65787,65791),
(65795,65798),
(65844,65846),
(65933,65935),
(65948,65951),
(65953,65999),
(66046,66175),
(66205,66207),
(66257,66271),
(66300,66303),
(66340,66351),
(66379,66383),
(66427,66431),
(66462,66462),
(66500,66503),
(66518,66559),
(66718,66719),
(66730,66815),
(66856,66863),
(66916,66926),
(66928,67071),
(67383,67391),
(67414,67423),
(67432,67583),
(67590,67591),
(67593,67593),
(67638,67638),
(67641,67643),
(67645,67646),
(67670,67670),
(67743,67750),
(67760,67807),
(67827,67827),
(67830,67834),
(67868,67870),
(67898,67902),
(67904,67967),
(68024,68027),
(68048,68049),
(68100,68100),
(68103,68107),
(68116,68116),
(68120,68120),
(68148,68151),
(68155,68158),
(68168,68175),
(68185,68191),
(68256,68287),
(68327,68330),
(68343,68351),
(68406,68408),
(68438,68439),
(68467,68471),
(68498,68504),
(68509,68520),
(68528,68607),
(68681,68735),
(68787,68799),
(68851,68857),
(68864,69215),
(69247,69631),
(69710,69713),
(69744,69758),
(69826,69839),
(69865,69871),
(69882,69887),
(69941,69941),
(69956,69967),
(70007,70015),
(70094,70095),
(70112,70112),
(70133,70143),
(70162,70162),
(70206,70271),
(70279,70279),
(70281,70281),
(70286,70286),
(70302,70302),
(70314,70319),
(70379,70383),
(70394,70399),
(70404,70404),
(70413,70414),
(70417,70418),
(70441,70441),
(70449,70449),
(70452,70452),
(70458,70459),
(70469,70470),
(70473,70474),
(70478,70479),
(70481,70486),
(70488,70492),
(70500,70501),
(70509,70511),
(70517,70783),
(70856,70863),
(70874,71039),
(71094,71095),
(71134,71167),
(71237,71247),
(71258,71295),
(71352,71359),
(71370,71423),
(71450,71452),
(71468,71471),
(71488,71839),
(71923,71934),
(71936,72383),
(72441,73727),
(74650,74751),
(74863,74863),
(74869,74879),
(75076,77823),
(78895,82943),
(83527,92159),
(92729,92735),
(92767,92767),
(92778,92781),
(92784,92879),
(92910,92911),
(92918,92927),
(92998,93007),
(93018,93018),
(93026,93026),
(93048,93052),
(93072,93951),
(94021,94031),
(94079,94094),
(94112,110591),
(110594,113663),
(113771,113775),
(113789,113791),
(113801,113807),
(113818,113819),
(113828,118783),
(119030,119039),
(119079,119080),
(119273,119295),
(119366,119551),
(119639,119647),
(119666,119807),
(119893,119893),
(119965,119965),
(119968,119969),
(119971,119972),
(119975,119976),
(119981,119981),
(119994,119994),
(119996,119996),
(120004,120004),
(120070,120070),
(120075,120076),
(120085,120085),
(120093,120093),
(120122,120122),
(120127,120127),
(120133,120133),
(120135,120137),
(120145,120145),
(120486,120487),
(120780,120781),
(121484,121498),
(121504,121504),
(121520,124927),
(125125,125126),
(125143,126463),
(126468,126468),
(126496,126496),
(126499,126499),
(126501,126502),
(126504,126504),
(126515,126515),
(126520,126520),
(126522,126522),
(126524,126529),
(126531,126534),
(126536,126536),
(126538,126538),
(126540,126540),
(126544,126544),
(126547,126547),
(126549,126550),
(126552,126552),
(126554,126554),
(126556,126556),
(126558,126558),
(126560,126560),
(126563,126563),
(126565,126566),
(126571,126571),
(126579,126579),
(126584,126584),
(126589,126589),
(126591,126591),
(126602,126602),
(126620,126624),
(126628,126628),
(126634,126634),
(126652,126703),
(126706,126975),
(127020,127023),
(127124,127135),
(127151,127152),
(127168,127168),
(127184,127184),
(127222,127231),
(127245,127247),
(127279,127279),
(127340,127343),
(127387,127461),
(127491,127503),
(127547,127551),
(127561,127567),
(127570,127743),
(128378,128378),
(128420,128420),
(128721,128735),
(128749,128751),
(128756,128767),
(128884,128895),
(128981,129023),
(129036,129039),
(129096,129103),
(129114,129119),
(129160,129167),
(129198,129295),
(129305,129407),
(129413,129471),
(129473,131071),
(173783,173823),
(177973,177983),
(178206,178207),
(183970,194559),
(195102,917504),
(917506,917535),
(917632,917759),
(918000,1114111)
);

const FLREUnicodeIgnoreCaseScriptBlocks1:array[0..161] of TFLREUnicodeCharRange=(
(0,64),
(91,96),
(123,169),
(171,185),
(187,191),
(215,215),
(247,247),
(697,735),
(741,745),
(748,767),
(884,884),
(894,894),
(901,901),
(903,903),
(924,924),
(1417,1417),
(1541,1541),
(1548,1548),
(1563,1564),
(1567,1567),
(1600,1600),
(1757,1757),
(2404,2405),
(3647,3647),
(4053,4056),
(4347,4347),
(5867,5869),
(5941,5942),
(6146,6147),
(6149,6149),
(7379,7379),
(7393,7393),
(7401,7404),
(7406,7411),
(7413,7414),
(8192,8203),
(8206,8292),
(8294,8304),
(8308,8318),
(8320,8334),
(8352,8382),
(8448,8485),
(8487,8489),
(8492,8497),
(8499,8525),
(8527,8543),
(8585,8587),
(8592,9210),
(9216,9254),
(9280,9290),
(9312,10239),
(10496,11123),
(11126,11157),
(11160,11193),
(11197,11208),
(11210,11217),
(11244,11247),
(11776,11842),
(12272,12283),
(12288,12292),
(12294,12294),
(12296,12320),
(12336,12343),
(12348,12351),
(12443,12444),
(12448,12448),
(12539,12540),
(12688,12703),
(12736,12771),
(12832,12895),
(12927,13007),
(13144,13311),
(19904,19967),
(42752,42785),
(42888,42890),
(43056,43065),
(43310,43310),
(43471,43471),
(43867,43867),
(64830,64831),
(65040,65049),
(65072,65106),
(65108,65126),
(65128,65131),
(65279,65279),
(65281,65312),
(65339,65344),
(65371,65381),
(65392,65392),
(65438,65439),
(65504,65510),
(65512,65518),
(65529,65533),
(65792,65794),
(65799,65843),
(65847,65855),
(65936,65947),
(66000,66044),
(66273,66299),
(113824,113827),
(118784,119029),
(119040,119078),
(119081,119142),
(119146,119162),
(119171,119172),
(119180,119209),
(119214,119272),
(119552,119638),
(119648,119665),
(119808,119892),
(119894,119964),
(119966,119967),
(119970,119970),
(119973,119974),
(119977,119980),
(119982,119993),
(119995,119995),
(119997,120003),
(120005,120069),
(120071,120074),
(120077,120084),
(120086,120092),
(120094,120121),
(120123,120126),
(120128,120132),
(120134,120134),
(120138,120144),
(120146,120485),
(120488,120779),
(120782,120831),
(126976,127019),
(127024,127123),
(127136,127150),
(127153,127167),
(127169,127183),
(127185,127221),
(127232,127244),
(127248,127278),
(127280,127339),
(127344,127386),
(127462,127487),
(127489,127490),
(127504,127546),
(127552,127560),
(127568,127569),
(127744,128377),
(128379,128419),
(128421,128720),
(128736,128748),
(128752,128755),
(128768,128883),
(128896,128980),
(129024,129035),
(129040,129095),
(129104,129113),
(129120,129159),
(129168,129197),
(129296,129304),
(129408,129412),
(129472,129472),
(917505,917505),
(917536,917631)
);

const FLREUnicodeIgnoreCaseScriptBlocks2:array[0..30] of TFLREUnicodeCharRange=(
(65,90),
(97,122),
(170,170),
(186,186),
(192,214),
(216,246),
(248,696),
(736,740),
(7424,7461),
(7468,7516),
(7522,7525),
(7531,7543),
(7545,7614),
(7680,7935),
(8305,8305),
(8319,8319),
(8336,8348),
(8490,8491),
(8498,8498),
(8526,8526),
(8544,8584),
(11360,11391),
(42786,42887),
(42891,42925),
(42928,42935),
(42999,43007),
(43824,43866),
(43868,43876),
(64256,64262),
(65313,65338),
(65345,65370)
);

const FLREUnicodeIgnoreCaseScriptBlocks3:array[0..35] of TFLREUnicodeCharRange=(
(880,883),
(885,887),
(890,893),
(895,895),
(900,900),
(902,902),
(904,906),
(908,908),
(910,929),
(931,993),
(1008,1023),
(7462,7466),
(7517,7521),
(7526,7530),
(7615,7615),
(7936,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8016,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8064,8116),
(8118,8132),
(8134,8147),
(8150,8155),
(8157,8175),
(8178,8180),
(8182,8190),
(8486,8486),
(43877,43877),
(65856,65932),
(65952,65952),
(119296,119365)
);

const FLREUnicodeIgnoreCaseScriptBlocks4:array[0..6] of TFLREUnicodeCharRange=(
(1024,1156),
(1159,1327),
(7467,7467),
(7544,7544),
(11744,11775),
(42560,42655),
(65070,65071)
);

const FLREUnicodeIgnoreCaseScriptBlocks5:array[0..5] of TFLREUnicodeCharRange=(
(1329,1366),
(1369,1375),
(1377,1415),
(1418,1418),
(1421,1423),
(64275,64279)
);

const FLREUnicodeIgnoreCaseScriptBlocks6:array[0..8] of TFLREUnicodeCharRange=(
(1425,1479),
(1488,1514),
(1520,1524),
(64285,64310),
(64312,64316),
(64318,64318),
(64320,64321),
(64323,64324),
(64326,64335)
);

const FLREUnicodeIgnoreCaseScriptBlocks7:array[0..53] of TFLREUnicodeCharRange=(
(1536,1540),
(1542,1547),
(1549,1562),
(1566,1566),
(1568,1599),
(1601,1610),
(1622,1647),
(1649,1756),
(1758,1791),
(1872,1919),
(2208,2228),
(2275,2303),
(64336,64449),
(64467,64829),
(64848,64911),
(64914,64967),
(65008,65021),
(65136,65140),
(65142,65276),
(69216,69246),
(126464,126467),
(126469,126495),
(126497,126498),
(126500,126500),
(126503,126503),
(126505,126514),
(126516,126519),
(126521,126521),
(126523,126523),
(126530,126530),
(126535,126535),
(126537,126537),
(126539,126539),
(126541,126543),
(126545,126546),
(126548,126548),
(126551,126551),
(126553,126553),
(126555,126555),
(126557,126557),
(126559,126559),
(126561,126562),
(126564,126564),
(126567,126570),
(126572,126578),
(126580,126583),
(126585,126588),
(126590,126590),
(126592,126601),
(126603,126619),
(126625,126627),
(126629,126633),
(126635,126651),
(126704,126705)
);

const FLREUnicodeIgnoreCaseScriptBlocks8:array[0..2] of TFLREUnicodeCharRange=(
(1792,1805),
(1807,1866),
(1869,1871)
);

const FLREUnicodeIgnoreCaseScriptBlocks9:array[0..0] of TFLREUnicodeCharRange=(
(1920,1969)
);

const FLREUnicodeIgnoreCaseScriptBlocks10:array[0..3] of TFLREUnicodeCharRange=(
(2304,2384),
(2387,2403),
(2406,2431),
(43232,43261)
);

const FLREUnicodeIgnoreCaseScriptBlocks11:array[0..13] of TFLREUnicodeCharRange=(
(2432,2435),
(2437,2444),
(2447,2448),
(2451,2472),
(2474,2480),
(2482,2482),
(2486,2489),
(2492,2500),
(2503,2504),
(2507,2510),
(2519,2519),
(2524,2525),
(2527,2531),
(2534,2555)
);

const FLREUnicodeIgnoreCaseScriptBlocks12:array[0..15] of TFLREUnicodeCharRange=(
(2561,2563),
(2565,2570),
(2575,2576),
(2579,2600),
(2602,2608),
(2610,2611),
(2613,2614),
(2616,2617),
(2620,2620),
(2622,2626),
(2631,2632),
(2635,2637),
(2641,2641),
(2649,2652),
(2654,2654),
(2662,2677)
);

const FLREUnicodeIgnoreCaseScriptBlocks13:array[0..13] of TFLREUnicodeCharRange=(
(2689,2691),
(2693,2701),
(2703,2705),
(2707,2728),
(2730,2736),
(2738,2739),
(2741,2745),
(2748,2757),
(2759,2761),
(2763,2765),
(2768,2768),
(2784,2787),
(2790,2801),
(2809,2809)
);

const FLREUnicodeIgnoreCaseScriptBlocks14:array[0..13] of TFLREUnicodeCharRange=(
(2817,2819),
(2821,2828),
(2831,2832),
(2835,2856),
(2858,2864),
(2866,2867),
(2869,2873),
(2876,2884),
(2887,2888),
(2891,2893),
(2902,2903),
(2908,2909),
(2911,2915),
(2918,2935)
);

const FLREUnicodeIgnoreCaseScriptBlocks15:array[0..15] of TFLREUnicodeCharRange=(
(2946,2947),
(2949,2954),
(2958,2960),
(2962,2965),
(2969,2970),
(2972,2972),
(2974,2975),
(2979,2980),
(2984,2986),
(2990,3001),
(3006,3010),
(3014,3016),
(3018,3021),
(3024,3024),
(3031,3031),
(3046,3066)
);

const FLREUnicodeIgnoreCaseScriptBlocks16:array[0..12] of TFLREUnicodeCharRange=(
(3072,3075),
(3077,3084),
(3086,3088),
(3090,3112),
(3114,3129),
(3133,3140),
(3142,3144),
(3146,3149),
(3157,3158),
(3160,3162),
(3168,3171),
(3174,3183),
(3192,3199)
);

const FLREUnicodeIgnoreCaseScriptBlocks17:array[0..13] of TFLREUnicodeCharRange=(
(3201,3203),
(3205,3212),
(3214,3216),
(3218,3240),
(3242,3251),
(3253,3257),
(3260,3268),
(3270,3272),
(3274,3277),
(3285,3286),
(3294,3294),
(3296,3299),
(3302,3311),
(3313,3314)
);

const FLREUnicodeIgnoreCaseScriptBlocks18:array[0..10] of TFLREUnicodeCharRange=(
(3329,3331),
(3333,3340),
(3342,3344),
(3346,3386),
(3389,3396),
(3398,3400),
(3402,3406),
(3415,3415),
(3423,3427),
(3430,3445),
(3449,3455)
);

const FLREUnicodeIgnoreCaseScriptBlocks19:array[0..12] of TFLREUnicodeCharRange=(
(3458,3459),
(3461,3478),
(3482,3505),
(3507,3515),
(3517,3517),
(3520,3526),
(3530,3530),
(3535,3540),
(3542,3542),
(3544,3551),
(3558,3567),
(3570,3572),
(70113,70132)
);

const FLREUnicodeIgnoreCaseScriptBlocks20:array[0..1] of TFLREUnicodeCharRange=(
(3585,3642),
(3648,3675)
);

const FLREUnicodeIgnoreCaseScriptBlocks21:array[0..17] of TFLREUnicodeCharRange=(
(3713,3714),
(3716,3716),
(3719,3720),
(3722,3722),
(3725,3725),
(3732,3735),
(3737,3743),
(3745,3747),
(3749,3749),
(3751,3751),
(3754,3755),
(3757,3769),
(3771,3773),
(3776,3780),
(3782,3782),
(3784,3789),
(3792,3801),
(3804,3807)
);

const FLREUnicodeIgnoreCaseScriptBlocks22:array[0..6] of TFLREUnicodeCharRange=(
(3840,3911),
(3913,3948),
(3953,3991),
(3993,4028),
(4030,4044),
(4046,4052),
(4057,4058)
);

const FLREUnicodeIgnoreCaseScriptBlocks23:array[0..2] of TFLREUnicodeCharRange=(
(4096,4255),
(43488,43518),
(43616,43647)
);

const FLREUnicodeIgnoreCaseScriptBlocks24:array[0..7] of TFLREUnicodeCharRange=(
(4256,4293),
(4295,4295),
(4301,4301),
(4304,4346),
(4348,4351),
(11520,11557),
(11559,11559),
(11565,11565)
);

const FLREUnicodeIgnoreCaseScriptBlocks25:array[0..13] of TFLREUnicodeCharRange=(
(4352,4607),
(12334,12335),
(12593,12686),
(12800,12830),
(12896,12926),
(43360,43388),
(44032,55203),
(55216,55238),
(55243,55291),
(65440,65470),
(65474,65479),
(65482,65487),
(65490,65495),
(65498,65500)
);

const FLREUnicodeIgnoreCaseScriptBlocks26:array[0..31] of TFLREUnicodeCharRange=(
(4608,4680),
(4682,4685),
(4688,4694),
(4696,4696),
(4698,4701),
(4704,4744),
(4746,4749),
(4752,4784),
(4786,4789),
(4792,4798),
(4800,4800),
(4802,4805),
(4808,4822),
(4824,4880),
(4882,4885),
(4888,4954),
(4957,4988),
(4992,5017),
(11648,11670),
(11680,11686),
(11688,11694),
(11696,11702),
(11704,11710),
(11712,11718),
(11720,11726),
(11728,11734),
(11736,11742),
(43777,43782),
(43785,43790),
(43793,43798),
(43808,43814),
(43816,43822)
);

const FLREUnicodeIgnoreCaseScriptBlocks27:array[0..2] of TFLREUnicodeCharRange=(
(5024,5109),
(5112,5117),
(43888,43967)
);

const FLREUnicodeIgnoreCaseScriptBlocks28:array[0..1] of TFLREUnicodeCharRange=(
(5120,5759),
(6320,6389)
);

const FLREUnicodeIgnoreCaseScriptBlocks29:array[0..0] of TFLREUnicodeCharRange=(
(5760,5788)
);

const FLREUnicodeIgnoreCaseScriptBlocks30:array[0..1] of TFLREUnicodeCharRange=(
(5792,5866),
(5870,5880)
);

const FLREUnicodeIgnoreCaseScriptBlocks31:array[0..3] of TFLREUnicodeCharRange=(
(6016,6109),
(6112,6121),
(6128,6137),
(6624,6655)
);

const FLREUnicodeIgnoreCaseScriptBlocks32:array[0..5] of TFLREUnicodeCharRange=(
(6144,6145),
(6148,6148),
(6150,6158),
(6160,6169),
(6176,6263),
(6272,6314)
);

const FLREUnicodeIgnoreCaseScriptBlocks33:array[0..3] of TFLREUnicodeCharRange=(
(12353,12438),
(12445,12447),
(110593,110593),
(127488,127488)
);

const FLREUnicodeIgnoreCaseScriptBlocks34:array[0..7] of TFLREUnicodeCharRange=(
(12449,12538),
(12541,12543),
(12784,12799),
(13008,13054),
(13056,13143),
(65382,65391),
(65393,65437),
(110592,110592)
);

const FLREUnicodeIgnoreCaseScriptBlocks35:array[0..2] of TFLREUnicodeCharRange=(
(746,747),
(12549,12589),
(12704,12730)
);

const FLREUnicodeIgnoreCaseScriptBlocks36:array[0..15] of TFLREUnicodeCharRange=(
(11904,11929),
(11931,12019),
(12032,12245),
(12293,12293),
(12295,12295),
(12321,12329),
(12344,12347),
(13312,19893),
(19968,40917),
(63744,64109),
(64112,64217),
(131072,173782),
(173824,177972),
(177984,178205),
(178208,183969),
(194560,195101)
);

const FLREUnicodeIgnoreCaseScriptBlocks37:array[0..1] of TFLREUnicodeCharRange=(
(40960,42124),
(42128,42182)
);

const FLREUnicodeIgnoreCaseScriptBlocks38:array[0..0] of TFLREUnicodeCharRange=(
(66304,66339)
);

const FLREUnicodeIgnoreCaseScriptBlocks39:array[0..0] of TFLREUnicodeCharRange=(
(66352,66378)
);

const FLREUnicodeIgnoreCaseScriptBlocks40:array[0..0] of TFLREUnicodeCharRange=(
(66560,66639)
);

const FLREUnicodeIgnoreCaseScriptBlocks41:array[0..27] of TFLREUnicodeCharRange=(
(768,879),
(921,921),
(1157,1158),
(1611,1621),
(1648,1648),
(2385,2386),
(6832,6846),
(7376,7378),
(7380,7392),
(7394,7400),
(7405,7405),
(7412,7412),
(7416,7417),
(7616,7669),
(7676,7679),
(8204,8205),
(8400,8432),
(12330,12333),
(12441,12442),
(65024,65039),
(65056,65069),
(66045,66045),
(66272,66272),
(119143,119145),
(119163,119170),
(119173,119179),
(119210,119213),
(917760,917999)
);

const FLREUnicodeIgnoreCaseScriptBlocks42:array[0..1] of TFLREUnicodeCharRange=(
(5888,5900),
(5902,5908)
);

const FLREUnicodeIgnoreCaseScriptBlocks43:array[0..0] of TFLREUnicodeCharRange=(
(5920,5940)
);

const FLREUnicodeIgnoreCaseScriptBlocks44:array[0..0] of TFLREUnicodeCharRange=(
(5952,5971)
);

const FLREUnicodeIgnoreCaseScriptBlocks45:array[0..2] of TFLREUnicodeCharRange=(
(5984,5996),
(5998,6000),
(6002,6003)
);

const FLREUnicodeIgnoreCaseScriptBlocks46:array[0..4] of TFLREUnicodeCharRange=(
(6400,6430),
(6432,6443),
(6448,6459),
(6464,6464),
(6468,6479)
);

const FLREUnicodeIgnoreCaseScriptBlocks47:array[0..1] of TFLREUnicodeCharRange=(
(6480,6509),
(6512,6516)
);

const FLREUnicodeIgnoreCaseScriptBlocks48:array[0..6] of TFLREUnicodeCharRange=(
(65536,65547),
(65549,65574),
(65576,65594),
(65596,65597),
(65599,65613),
(65616,65629),
(65664,65786)
);

const FLREUnicodeIgnoreCaseScriptBlocks49:array[0..1] of TFLREUnicodeCharRange=(
(66432,66461),
(66463,66463)
);

const FLREUnicodeIgnoreCaseScriptBlocks50:array[0..0] of TFLREUnicodeCharRange=(
(66640,66687)
);

const FLREUnicodeIgnoreCaseScriptBlocks51:array[0..1] of TFLREUnicodeCharRange=(
(66688,66717),
(66720,66729)
);

const FLREUnicodeIgnoreCaseScriptBlocks52:array[0..5] of TFLREUnicodeCharRange=(
(67584,67589),
(67592,67592),
(67594,67637),
(67639,67640),
(67644,67644),
(67647,67647)
);

const FLREUnicodeIgnoreCaseScriptBlocks53:array[0..0] of TFLREUnicodeCharRange=(
(10240,10495)
);

const FLREUnicodeIgnoreCaseScriptBlocks54:array[0..1] of TFLREUnicodeCharRange=(
(6656,6683),
(6686,6687)
);

const FLREUnicodeIgnoreCaseScriptBlocks55:array[0..2] of TFLREUnicodeCharRange=(
(994,1007),
(11392,11507),
(11513,11519)
);

const FLREUnicodeIgnoreCaseScriptBlocks56:array[0..3] of TFLREUnicodeCharRange=(
(6528,6571),
(6576,6601),
(6608,6618),
(6622,6623)
);

const FLREUnicodeIgnoreCaseScriptBlocks57:array[0..1] of TFLREUnicodeCharRange=(
(11264,11310),
(11312,11358)
);

const FLREUnicodeIgnoreCaseScriptBlocks58:array[0..2] of TFLREUnicodeCharRange=(
(11568,11623),
(11631,11632),
(11647,11647)
);

const FLREUnicodeIgnoreCaseScriptBlocks59:array[0..0] of TFLREUnicodeCharRange=(
(43008,43051)
);

const FLREUnicodeIgnoreCaseScriptBlocks60:array[0..1] of TFLREUnicodeCharRange=(
(66464,66499),
(66504,66517)
);

const FLREUnicodeIgnoreCaseScriptBlocks61:array[0..7] of TFLREUnicodeCharRange=(
(68096,68099),
(68101,68102),
(68108,68115),
(68117,68119),
(68121,68147),
(68152,68154),
(68159,68167),
(68176,68184)
);

const FLREUnicodeIgnoreCaseScriptBlocks62:array[0..1] of TFLREUnicodeCharRange=(
(6912,6987),
(6992,7036)
);

const FLREUnicodeIgnoreCaseScriptBlocks63:array[0..3] of TFLREUnicodeCharRange=(
(73728,74649),
(74752,74862),
(74864,74868),
(74880,75075)
);

const FLREUnicodeIgnoreCaseScriptBlocks64:array[0..1] of TFLREUnicodeCharRange=(
(67840,67867),
(67871,67871)
);

const FLREUnicodeIgnoreCaseScriptBlocks65:array[0..0] of TFLREUnicodeCharRange=(
(43072,43127)
);

const FLREUnicodeIgnoreCaseScriptBlocks66:array[0..0] of TFLREUnicodeCharRange=(
(1984,2042)
);

const FLREUnicodeIgnoreCaseScriptBlocks67:array[0..1] of TFLREUnicodeCharRange=(
(7040,7103),
(7360,7367)
);

const FLREUnicodeIgnoreCaseScriptBlocks68:array[0..2] of TFLREUnicodeCharRange=(
(7168,7223),
(7227,7241),
(7245,7247)
);

const FLREUnicodeIgnoreCaseScriptBlocks69:array[0..0] of TFLREUnicodeCharRange=(
(7248,7295)
);

const FLREUnicodeIgnoreCaseScriptBlocks70:array[0..0] of TFLREUnicodeCharRange=(
(42240,42539)
);

const FLREUnicodeIgnoreCaseScriptBlocks71:array[0..1] of TFLREUnicodeCharRange=(
(43136,43204),
(43214,43225)
);

const FLREUnicodeIgnoreCaseScriptBlocks72:array[0..1] of TFLREUnicodeCharRange=(
(43264,43309),
(43311,43311)
);

const FLREUnicodeIgnoreCaseScriptBlocks73:array[0..1] of TFLREUnicodeCharRange=(
(43312,43347),
(43359,43359)
);

const FLREUnicodeIgnoreCaseScriptBlocks74:array[0..0] of TFLREUnicodeCharRange=(
(66176,66204)
);

const FLREUnicodeIgnoreCaseScriptBlocks75:array[0..0] of TFLREUnicodeCharRange=(
(66208,66256)
);

const FLREUnicodeIgnoreCaseScriptBlocks76:array[0..1] of TFLREUnicodeCharRange=(
(67872,67897),
(67903,67903)
);

const FLREUnicodeIgnoreCaseScriptBlocks77:array[0..3] of TFLREUnicodeCharRange=(
(43520,43574),
(43584,43597),
(43600,43609),
(43612,43615)
);

const FLREUnicodeIgnoreCaseScriptBlocks78:array[0..4] of TFLREUnicodeCharRange=(
(6688,6750),
(6752,6780),
(6783,6793),
(6800,6809),
(6816,6829)
);

const FLREUnicodeIgnoreCaseScriptBlocks79:array[0..1] of TFLREUnicodeCharRange=(
(43648,43714),
(43739,43743)
);

const FLREUnicodeIgnoreCaseScriptBlocks80:array[0..1] of TFLREUnicodeCharRange=(
(68352,68405),
(68409,68415)
);

const FLREUnicodeIgnoreCaseScriptBlocks81:array[0..0] of TFLREUnicodeCharRange=(
(77824,78894)
);

const FLREUnicodeIgnoreCaseScriptBlocks82:array[0..1] of TFLREUnicodeCharRange=(
(2048,2093),
(2096,2110)
);

const FLREUnicodeIgnoreCaseScriptBlocks83:array[0..0] of TFLREUnicodeCharRange=(
(42192,42239)
);

const FLREUnicodeIgnoreCaseScriptBlocks84:array[0..1] of TFLREUnicodeCharRange=(
(42656,42743),
(92160,92728)
);

const FLREUnicodeIgnoreCaseScriptBlocks85:array[0..2] of TFLREUnicodeCharRange=(
(43392,43469),
(43472,43481),
(43486,43487)
);

const FLREUnicodeIgnoreCaseScriptBlocks86:array[0..2] of TFLREUnicodeCharRange=(
(43744,43766),
(43968,44013),
(44016,44025)
);

const FLREUnicodeIgnoreCaseScriptBlocks87:array[0..1] of TFLREUnicodeCharRange=(
(67648,67669),
(67671,67679)
);

const FLREUnicodeIgnoreCaseScriptBlocks88:array[0..0] of TFLREUnicodeCharRange=(
(68192,68223)
);

const FLREUnicodeIgnoreCaseScriptBlocks89:array[0..1] of TFLREUnicodeCharRange=(
(68416,68437),
(68440,68447)
);

const FLREUnicodeIgnoreCaseScriptBlocks90:array[0..1] of TFLREUnicodeCharRange=(
(68448,68466),
(68472,68479)
);

const FLREUnicodeIgnoreCaseScriptBlocks91:array[0..0] of TFLREUnicodeCharRange=(
(68608,68680)
);

const FLREUnicodeIgnoreCaseScriptBlocks92:array[0..0] of TFLREUnicodeCharRange=(
(69760,69825)
);

const FLREUnicodeIgnoreCaseScriptBlocks93:array[0..1] of TFLREUnicodeCharRange=(
(7104,7155),
(7164,7167)
);

const FLREUnicodeIgnoreCaseScriptBlocks94:array[0..2] of TFLREUnicodeCharRange=(
(69632,69709),
(69714,69743),
(69759,69759)
);

const FLREUnicodeIgnoreCaseScriptBlocks95:array[0..1] of TFLREUnicodeCharRange=(
(2112,2139),
(2142,2142)
);

const FLREUnicodeIgnoreCaseScriptBlocks96:array[0..1] of TFLREUnicodeCharRange=(
(69888,69940),
(69942,69955)
);

const FLREUnicodeIgnoreCaseScriptBlocks97:array[0..2] of TFLREUnicodeCharRange=(
(68000,68023),
(68028,68047),
(68050,68095)
);

const FLREUnicodeIgnoreCaseScriptBlocks98:array[0..0] of TFLREUnicodeCharRange=(
(67968,67999)
);

const FLREUnicodeIgnoreCaseScriptBlocks99:array[0..2] of TFLREUnicodeCharRange=(
(93952,94020),
(94032,94078),
(94095,94111)
);

const FLREUnicodeIgnoreCaseScriptBlocks100:array[0..1] of TFLREUnicodeCharRange=(
(70016,70093),
(70096,70111)
);

const FLREUnicodeIgnoreCaseScriptBlocks101:array[0..1] of TFLREUnicodeCharRange=(
(69840,69864),
(69872,69881)
);

const FLREUnicodeIgnoreCaseScriptBlocks102:array[0..1] of TFLREUnicodeCharRange=(
(71296,71351),
(71360,71369)
);

const FLREUnicodeIgnoreCaseScriptBlocks103:array[0..1] of TFLREUnicodeCharRange=(
(66864,66915),
(66927,66927)
);

const FLREUnicodeIgnoreCaseScriptBlocks104:array[0..1] of TFLREUnicodeCharRange=(
(92880,92909),
(92912,92917)
);

const FLREUnicodeIgnoreCaseScriptBlocks105:array[0..4] of TFLREUnicodeCharRange=(
(113664,113770),
(113776,113788),
(113792,113800),
(113808,113817),
(113820,113823)
);

const FLREUnicodeIgnoreCaseScriptBlocks106:array[0..0] of TFLREUnicodeCharRange=(
(66816,66855)
);

const FLREUnicodeIgnoreCaseScriptBlocks107:array[0..14] of TFLREUnicodeCharRange=(
(70400,70403),
(70405,70412),
(70415,70416),
(70419,70440),
(70442,70448),
(70450,70451),
(70453,70457),
(70460,70468),
(70471,70472),
(70475,70477),
(70480,70480),
(70487,70487),
(70493,70499),
(70502,70508),
(70512,70516)
);

const FLREUnicodeIgnoreCaseScriptBlocks108:array[0..4] of TFLREUnicodeCharRange=(
(92928,92997),
(93008,93017),
(93019,93025),
(93027,93047),
(93053,93071)
);

const FLREUnicodeIgnoreCaseScriptBlocks109:array[0..1] of TFLREUnicodeCharRange=(
(70144,70161),
(70163,70205)
);

const FLREUnicodeIgnoreCaseScriptBlocks110:array[0..2] of TFLREUnicodeCharRange=(
(67072,67382),
(67392,67413),
(67424,67431)
);

const FLREUnicodeIgnoreCaseScriptBlocks111:array[0..0] of TFLREUnicodeCharRange=(
(69968,70006)
);

const FLREUnicodeIgnoreCaseScriptBlocks112:array[0..1] of TFLREUnicodeCharRange=(
(68288,68326),
(68331,68342)
);

const FLREUnicodeIgnoreCaseScriptBlocks113:array[0..1] of TFLREUnicodeCharRange=(
(124928,125124),
(125127,125142)
);

const FLREUnicodeIgnoreCaseScriptBlocks114:array[0..1] of TFLREUnicodeCharRange=(
(71168,71236),
(71248,71257)
);

const FLREUnicodeIgnoreCaseScriptBlocks115:array[0..2] of TFLREUnicodeCharRange=(
(92736,92766),
(92768,92777),
(92782,92783)
);

const FLREUnicodeIgnoreCaseScriptBlocks116:array[0..0] of TFLREUnicodeCharRange=(
(68224,68255)
);

const FLREUnicodeIgnoreCaseScriptBlocks117:array[0..1] of TFLREUnicodeCharRange=(
(67712,67742),
(67751,67759)
);

const FLREUnicodeIgnoreCaseScriptBlocks118:array[0..0] of TFLREUnicodeCharRange=(
(67680,67711)
);

const FLREUnicodeIgnoreCaseScriptBlocks119:array[0..0] of TFLREUnicodeCharRange=(
(72384,72440)
);

const FLREUnicodeIgnoreCaseScriptBlocks120:array[0..0] of TFLREUnicodeCharRange=(
(66384,66426)
);

const FLREUnicodeIgnoreCaseScriptBlocks121:array[0..2] of TFLREUnicodeCharRange=(
(68480,68497),
(68505,68508),
(68521,68527)
);

const FLREUnicodeIgnoreCaseScriptBlocks122:array[0..1] of TFLREUnicodeCharRange=(
(71040,71093),
(71096,71133)
);

const FLREUnicodeIgnoreCaseScriptBlocks123:array[0..1] of TFLREUnicodeCharRange=(
(70320,70378),
(70384,70393)
);

const FLREUnicodeIgnoreCaseScriptBlocks124:array[0..1] of TFLREUnicodeCharRange=(
(70784,70855),
(70864,70873)
);

const FLREUnicodeIgnoreCaseScriptBlocks125:array[0..1] of TFLREUnicodeCharRange=(
(71840,71922),
(71935,71935)
);

const FLREUnicodeIgnoreCaseScriptBlocks126:array[0..2] of TFLREUnicodeCharRange=(
(71424,71449),
(71453,71467),
(71472,71487)
);

const FLREUnicodeIgnoreCaseScriptBlocks127:array[0..0] of TFLREUnicodeCharRange=(
(82944,83526)
);

const FLREUnicodeIgnoreCaseScriptBlocks128:array[0..2] of TFLREUnicodeCharRange=(
(67808,67826),
(67828,67829),
(67835,67839)
);

const FLREUnicodeIgnoreCaseScriptBlocks129:array[0..4] of TFLREUnicodeCharRange=(
(70272,70278),
(70280,70280),
(70282,70285),
(70287,70301),
(70303,70313)
);

const FLREUnicodeIgnoreCaseScriptBlocks130:array[0..2] of TFLREUnicodeCharRange=(
(68736,68786),
(68800,68850),
(68858,68863)
);

const FLREUnicodeIgnoreCaseScriptBlocks131:array[0..2] of TFLREUnicodeCharRange=(
(120832,121483),
(121499,121503),
(121505,121519)
);

const FLREUnicodeIgnoreCaseScriptBlocksData:array[0..131] of pointer=(
@FLREUnicodeIgnoreCaseScriptBlocks0,
@FLREUnicodeIgnoreCaseScriptBlocks1,
@FLREUnicodeIgnoreCaseScriptBlocks2,
@FLREUnicodeIgnoreCaseScriptBlocks3,
@FLREUnicodeIgnoreCaseScriptBlocks4,
@FLREUnicodeIgnoreCaseScriptBlocks5,
@FLREUnicodeIgnoreCaseScriptBlocks6,
@FLREUnicodeIgnoreCaseScriptBlocks7,
@FLREUnicodeIgnoreCaseScriptBlocks8,
@FLREUnicodeIgnoreCaseScriptBlocks9,
@FLREUnicodeIgnoreCaseScriptBlocks10,
@FLREUnicodeIgnoreCaseScriptBlocks11,
@FLREUnicodeIgnoreCaseScriptBlocks12,
@FLREUnicodeIgnoreCaseScriptBlocks13,
@FLREUnicodeIgnoreCaseScriptBlocks14,
@FLREUnicodeIgnoreCaseScriptBlocks15,
@FLREUnicodeIgnoreCaseScriptBlocks16,
@FLREUnicodeIgnoreCaseScriptBlocks17,
@FLREUnicodeIgnoreCaseScriptBlocks18,
@FLREUnicodeIgnoreCaseScriptBlocks19,
@FLREUnicodeIgnoreCaseScriptBlocks20,
@FLREUnicodeIgnoreCaseScriptBlocks21,
@FLREUnicodeIgnoreCaseScriptBlocks22,
@FLREUnicodeIgnoreCaseScriptBlocks23,
@FLREUnicodeIgnoreCaseScriptBlocks24,
@FLREUnicodeIgnoreCaseScriptBlocks25,
@FLREUnicodeIgnoreCaseScriptBlocks26,
@FLREUnicodeIgnoreCaseScriptBlocks27,
@FLREUnicodeIgnoreCaseScriptBlocks28,
@FLREUnicodeIgnoreCaseScriptBlocks29,
@FLREUnicodeIgnoreCaseScriptBlocks30,
@FLREUnicodeIgnoreCaseScriptBlocks31,
@FLREUnicodeIgnoreCaseScriptBlocks32,
@FLREUnicodeIgnoreCaseScriptBlocks33,
@FLREUnicodeIgnoreCaseScriptBlocks34,
@FLREUnicodeIgnoreCaseScriptBlocks35,
@FLREUnicodeIgnoreCaseScriptBlocks36,
@FLREUnicodeIgnoreCaseScriptBlocks37,
@FLREUnicodeIgnoreCaseScriptBlocks38,
@FLREUnicodeIgnoreCaseScriptBlocks39,
@FLREUnicodeIgnoreCaseScriptBlocks40,
@FLREUnicodeIgnoreCaseScriptBlocks41,
@FLREUnicodeIgnoreCaseScriptBlocks42,
@FLREUnicodeIgnoreCaseScriptBlocks43,
@FLREUnicodeIgnoreCaseScriptBlocks44,
@FLREUnicodeIgnoreCaseScriptBlocks45,
@FLREUnicodeIgnoreCaseScriptBlocks46,
@FLREUnicodeIgnoreCaseScriptBlocks47,
@FLREUnicodeIgnoreCaseScriptBlocks48,
@FLREUnicodeIgnoreCaseScriptBlocks49,
@FLREUnicodeIgnoreCaseScriptBlocks50,
@FLREUnicodeIgnoreCaseScriptBlocks51,
@FLREUnicodeIgnoreCaseScriptBlocks52,
@FLREUnicodeIgnoreCaseScriptBlocks53,
@FLREUnicodeIgnoreCaseScriptBlocks54,
@FLREUnicodeIgnoreCaseScriptBlocks55,
@FLREUnicodeIgnoreCaseScriptBlocks56,
@FLREUnicodeIgnoreCaseScriptBlocks57,
@FLREUnicodeIgnoreCaseScriptBlocks58,
@FLREUnicodeIgnoreCaseScriptBlocks59,
@FLREUnicodeIgnoreCaseScriptBlocks60,
@FLREUnicodeIgnoreCaseScriptBlocks61,
@FLREUnicodeIgnoreCaseScriptBlocks62,
@FLREUnicodeIgnoreCaseScriptBlocks63,
@FLREUnicodeIgnoreCaseScriptBlocks64,
@FLREUnicodeIgnoreCaseScriptBlocks65,
@FLREUnicodeIgnoreCaseScriptBlocks66,
@FLREUnicodeIgnoreCaseScriptBlocks67,
@FLREUnicodeIgnoreCaseScriptBlocks68,
@FLREUnicodeIgnoreCaseScriptBlocks69,
@FLREUnicodeIgnoreCaseScriptBlocks70,
@FLREUnicodeIgnoreCaseScriptBlocks71,
@FLREUnicodeIgnoreCaseScriptBlocks72,
@FLREUnicodeIgnoreCaseScriptBlocks73,
@FLREUnicodeIgnoreCaseScriptBlocks74,
@FLREUnicodeIgnoreCaseScriptBlocks75,
@FLREUnicodeIgnoreCaseScriptBlocks76,
@FLREUnicodeIgnoreCaseScriptBlocks77,
@FLREUnicodeIgnoreCaseScriptBlocks78,
@FLREUnicodeIgnoreCaseScriptBlocks79,
@FLREUnicodeIgnoreCaseScriptBlocks80,
@FLREUnicodeIgnoreCaseScriptBlocks81,
@FLREUnicodeIgnoreCaseScriptBlocks82,
@FLREUnicodeIgnoreCaseScriptBlocks83,
@FLREUnicodeIgnoreCaseScriptBlocks84,
@FLREUnicodeIgnoreCaseScriptBlocks85,
@FLREUnicodeIgnoreCaseScriptBlocks86,
@FLREUnicodeIgnoreCaseScriptBlocks87,
@FLREUnicodeIgnoreCaseScriptBlocks88,
@FLREUnicodeIgnoreCaseScriptBlocks89,
@FLREUnicodeIgnoreCaseScriptBlocks90,
@FLREUnicodeIgnoreCaseScriptBlocks91,
@FLREUnicodeIgnoreCaseScriptBlocks92,
@FLREUnicodeIgnoreCaseScriptBlocks93,
@FLREUnicodeIgnoreCaseScriptBlocks94,
@FLREUnicodeIgnoreCaseScriptBlocks95,
@FLREUnicodeIgnoreCaseScriptBlocks96,
@FLREUnicodeIgnoreCaseScriptBlocks97,
@FLREUnicodeIgnoreCaseScriptBlocks98,
@FLREUnicodeIgnoreCaseScriptBlocks99,
@FLREUnicodeIgnoreCaseScriptBlocks100,
@FLREUnicodeIgnoreCaseScriptBlocks101,
@FLREUnicodeIgnoreCaseScriptBlocks102,
@FLREUnicodeIgnoreCaseScriptBlocks103,
@FLREUnicodeIgnoreCaseScriptBlocks104,
@FLREUnicodeIgnoreCaseScriptBlocks105,
@FLREUnicodeIgnoreCaseScriptBlocks106,
@FLREUnicodeIgnoreCaseScriptBlocks107,
@FLREUnicodeIgnoreCaseScriptBlocks108,
@FLREUnicodeIgnoreCaseScriptBlocks109,
@FLREUnicodeIgnoreCaseScriptBlocks110,
@FLREUnicodeIgnoreCaseScriptBlocks111,
@FLREUnicodeIgnoreCaseScriptBlocks112,
@FLREUnicodeIgnoreCaseScriptBlocks113,
@FLREUnicodeIgnoreCaseScriptBlocks114,
@FLREUnicodeIgnoreCaseScriptBlocks115,
@FLREUnicodeIgnoreCaseScriptBlocks116,
@FLREUnicodeIgnoreCaseScriptBlocks117,
@FLREUnicodeIgnoreCaseScriptBlocks118,
@FLREUnicodeIgnoreCaseScriptBlocks119,
@FLREUnicodeIgnoreCaseScriptBlocks120,
@FLREUnicodeIgnoreCaseScriptBlocks121,
@FLREUnicodeIgnoreCaseScriptBlocks122,
@FLREUnicodeIgnoreCaseScriptBlocks123,
@FLREUnicodeIgnoreCaseScriptBlocks124,
@FLREUnicodeIgnoreCaseScriptBlocks125,
@FLREUnicodeIgnoreCaseScriptBlocks126,
@FLREUnicodeIgnoreCaseScriptBlocks127,
@FLREUnicodeIgnoreCaseScriptBlocks128,
@FLREUnicodeIgnoreCaseScriptBlocks129,
@FLREUnicodeIgnoreCaseScriptBlocks130,
@FLREUnicodeIgnoreCaseScriptBlocks131
);

const FLREUnicodeIgnoreCaseScriptBlocksCounts:array[0..131] of longint=(
611,
162,
31,
36,
7,
6,
9,
54,
3,
1,
4,
14,
16,
14,
14,
16,
13,
14,
11,
13,
2,
18,
7,
3,
8,
14,
32,
3,
2,
1,
2,
4,
6,
4,
8,
3,
16,
2,
1,
1,
1,
28,
2,
1,
1,
3,
5,
2,
7,
2,
1,
2,
6,
1,
2,
3,
4,
2,
3,
1,
2,
8,
2,
4,
2,
1,
1,
2,
3,
1,
1,
2,
2,
2,
1,
1,
2,
4,
5,
2,
2,
1,
2,
1,
2,
3,
3,
2,
1,
2,
2,
1,
1,
2,
3,
2,
2,
3,
1,
3,
2,
2,
2,
2,
2,
5,
1,
15,
5,
2,
3,
1,
2,
2,
2,
3,
1,
2,
1,
1,
1,
3,
2,
2,
2,
2,
3,
1,
3,
5,
3,
3
);

const FLRECountUnicodeBlockBlocks=261;

const FLREUnicodeBlockBlocks0:array[0..0] of TFLREUnicodeCharRange=(
(0,127)
);

const FLREUnicodeBlockBlocks1:array[0..0] of TFLREUnicodeCharRange=(
(128,255)
);

const FLREUnicodeBlockBlocks2:array[0..0] of TFLREUnicodeCharRange=(
(256,383)
);

const FLREUnicodeBlockBlocks3:array[0..0] of TFLREUnicodeCharRange=(
(384,591)
);

const FLREUnicodeBlockBlocks4:array[0..0] of TFLREUnicodeCharRange=(
(592,687)
);

const FLREUnicodeBlockBlocks5:array[0..0] of TFLREUnicodeCharRange=(
(688,767)
);

const FLREUnicodeBlockBlocks6:array[0..0] of TFLREUnicodeCharRange=(
(768,879)
);

const FLREUnicodeBlockBlocks7:array[0..0] of TFLREUnicodeCharRange=(
(880,1023)
);

const FLREUnicodeBlockBlocks8:array[0..0] of TFLREUnicodeCharRange=(
(1024,1279)
);

const FLREUnicodeBlockBlocks9:array[0..0] of TFLREUnicodeCharRange=(
(1280,1327)
);

const FLREUnicodeBlockBlocks10:array[0..0] of TFLREUnicodeCharRange=(
(1328,1423)
);

const FLREUnicodeBlockBlocks11:array[0..0] of TFLREUnicodeCharRange=(
(1424,1535)
);

const FLREUnicodeBlockBlocks12:array[0..0] of TFLREUnicodeCharRange=(
(1536,1791)
);

const FLREUnicodeBlockBlocks13:array[0..0] of TFLREUnicodeCharRange=(
(1792,1871)
);

const FLREUnicodeBlockBlocks14:array[0..0] of TFLREUnicodeCharRange=(
(1872,1919)
);

const FLREUnicodeBlockBlocks15:array[0..0] of TFLREUnicodeCharRange=(
(1920,1983)
);

const FLREUnicodeBlockBlocks16:array[0..0] of TFLREUnicodeCharRange=(
(1984,2047)
);

const FLREUnicodeBlockBlocks17:array[0..0] of TFLREUnicodeCharRange=(
(2048,2111)
);

const FLREUnicodeBlockBlocks18:array[0..0] of TFLREUnicodeCharRange=(
(2112,2143)
);

const FLREUnicodeBlockBlocks19:array[0..0] of TFLREUnicodeCharRange=(
(2208,2303)
);

const FLREUnicodeBlockBlocks20:array[0..0] of TFLREUnicodeCharRange=(
(2304,2431)
);

const FLREUnicodeBlockBlocks21:array[0..0] of TFLREUnicodeCharRange=(
(2432,2559)
);

const FLREUnicodeBlockBlocks22:array[0..0] of TFLREUnicodeCharRange=(
(2560,2687)
);

const FLREUnicodeBlockBlocks23:array[0..0] of TFLREUnicodeCharRange=(
(2688,2815)
);

const FLREUnicodeBlockBlocks24:array[0..0] of TFLREUnicodeCharRange=(
(2816,2943)
);

const FLREUnicodeBlockBlocks25:array[0..0] of TFLREUnicodeCharRange=(
(2944,3071)
);

const FLREUnicodeBlockBlocks26:array[0..0] of TFLREUnicodeCharRange=(
(3072,3199)
);

const FLREUnicodeBlockBlocks27:array[0..0] of TFLREUnicodeCharRange=(
(3200,3327)
);

const FLREUnicodeBlockBlocks28:array[0..0] of TFLREUnicodeCharRange=(
(3328,3455)
);

const FLREUnicodeBlockBlocks29:array[0..0] of TFLREUnicodeCharRange=(
(3456,3583)
);

const FLREUnicodeBlockBlocks30:array[0..0] of TFLREUnicodeCharRange=(
(3584,3711)
);

const FLREUnicodeBlockBlocks31:array[0..0] of TFLREUnicodeCharRange=(
(3712,3839)
);

const FLREUnicodeBlockBlocks32:array[0..0] of TFLREUnicodeCharRange=(
(3840,4095)
);

const FLREUnicodeBlockBlocks33:array[0..0] of TFLREUnicodeCharRange=(
(4096,4255)
);

const FLREUnicodeBlockBlocks34:array[0..0] of TFLREUnicodeCharRange=(
(4256,4351)
);

const FLREUnicodeBlockBlocks35:array[0..0] of TFLREUnicodeCharRange=(
(4352,4607)
);

const FLREUnicodeBlockBlocks36:array[0..0] of TFLREUnicodeCharRange=(
(4608,4991)
);

const FLREUnicodeBlockBlocks37:array[0..0] of TFLREUnicodeCharRange=(
(4992,5023)
);

const FLREUnicodeBlockBlocks38:array[0..0] of TFLREUnicodeCharRange=(
(5024,5119)
);

const FLREUnicodeBlockBlocks39:array[0..0] of TFLREUnicodeCharRange=(
(5120,5759)
);

const FLREUnicodeBlockBlocks40:array[0..0] of TFLREUnicodeCharRange=(
(5760,5791)
);

const FLREUnicodeBlockBlocks41:array[0..0] of TFLREUnicodeCharRange=(
(5792,5887)
);

const FLREUnicodeBlockBlocks42:array[0..0] of TFLREUnicodeCharRange=(
(5888,5919)
);

const FLREUnicodeBlockBlocks43:array[0..0] of TFLREUnicodeCharRange=(
(5920,5951)
);

const FLREUnicodeBlockBlocks44:array[0..0] of TFLREUnicodeCharRange=(
(5952,5983)
);

const FLREUnicodeBlockBlocks45:array[0..0] of TFLREUnicodeCharRange=(
(5984,6015)
);

const FLREUnicodeBlockBlocks46:array[0..0] of TFLREUnicodeCharRange=(
(6016,6143)
);

const FLREUnicodeBlockBlocks47:array[0..0] of TFLREUnicodeCharRange=(
(6144,6319)
);

const FLREUnicodeBlockBlocks48:array[0..0] of TFLREUnicodeCharRange=(
(6320,6399)
);

const FLREUnicodeBlockBlocks49:array[0..0] of TFLREUnicodeCharRange=(
(6400,6479)
);

const FLREUnicodeBlockBlocks50:array[0..0] of TFLREUnicodeCharRange=(
(6480,6527)
);

const FLREUnicodeBlockBlocks51:array[0..0] of TFLREUnicodeCharRange=(
(6528,6623)
);

const FLREUnicodeBlockBlocks52:array[0..0] of TFLREUnicodeCharRange=(
(6624,6655)
);

const FLREUnicodeBlockBlocks53:array[0..0] of TFLREUnicodeCharRange=(
(6656,6687)
);

const FLREUnicodeBlockBlocks54:array[0..0] of TFLREUnicodeCharRange=(
(6688,6831)
);

const FLREUnicodeBlockBlocks55:array[0..0] of TFLREUnicodeCharRange=(
(6832,6911)
);

const FLREUnicodeBlockBlocks56:array[0..0] of TFLREUnicodeCharRange=(
(6912,7039)
);

const FLREUnicodeBlockBlocks57:array[0..0] of TFLREUnicodeCharRange=(
(7040,7103)
);

const FLREUnicodeBlockBlocks58:array[0..0] of TFLREUnicodeCharRange=(
(7104,7167)
);

const FLREUnicodeBlockBlocks59:array[0..0] of TFLREUnicodeCharRange=(
(7168,7247)
);

const FLREUnicodeBlockBlocks60:array[0..0] of TFLREUnicodeCharRange=(
(7248,7295)
);

const FLREUnicodeBlockBlocks61:array[0..0] of TFLREUnicodeCharRange=(
(7360,7375)
);

const FLREUnicodeBlockBlocks62:array[0..0] of TFLREUnicodeCharRange=(
(7376,7423)
);

const FLREUnicodeBlockBlocks63:array[0..0] of TFLREUnicodeCharRange=(
(7424,7551)
);

const FLREUnicodeBlockBlocks64:array[0..0] of TFLREUnicodeCharRange=(
(7552,7615)
);

const FLREUnicodeBlockBlocks65:array[0..0] of TFLREUnicodeCharRange=(
(7616,7679)
);

const FLREUnicodeBlockBlocks66:array[0..0] of TFLREUnicodeCharRange=(
(7680,7935)
);

const FLREUnicodeBlockBlocks67:array[0..0] of TFLREUnicodeCharRange=(
(7936,8191)
);

const FLREUnicodeBlockBlocks68:array[0..0] of TFLREUnicodeCharRange=(
(8192,8303)
);

const FLREUnicodeBlockBlocks69:array[0..0] of TFLREUnicodeCharRange=(
(8304,8351)
);

const FLREUnicodeBlockBlocks70:array[0..0] of TFLREUnicodeCharRange=(
(8352,8399)
);

const FLREUnicodeBlockBlocks71:array[0..0] of TFLREUnicodeCharRange=(
(8400,8447)
);

const FLREUnicodeBlockBlocks72:array[0..0] of TFLREUnicodeCharRange=(
(8448,8527)
);

const FLREUnicodeBlockBlocks73:array[0..0] of TFLREUnicodeCharRange=(
(8528,8591)
);

const FLREUnicodeBlockBlocks74:array[0..0] of TFLREUnicodeCharRange=(
(8592,8703)
);

const FLREUnicodeBlockBlocks75:array[0..0] of TFLREUnicodeCharRange=(
(8704,8959)
);

const FLREUnicodeBlockBlocks76:array[0..0] of TFLREUnicodeCharRange=(
(8960,9215)
);

const FLREUnicodeBlockBlocks77:array[0..0] of TFLREUnicodeCharRange=(
(9216,9279)
);

const FLREUnicodeBlockBlocks78:array[0..0] of TFLREUnicodeCharRange=(
(9280,9311)
);

const FLREUnicodeBlockBlocks79:array[0..0] of TFLREUnicodeCharRange=(
(9312,9471)
);

const FLREUnicodeBlockBlocks80:array[0..0] of TFLREUnicodeCharRange=(
(9472,9599)
);

const FLREUnicodeBlockBlocks81:array[0..0] of TFLREUnicodeCharRange=(
(9600,9631)
);

const FLREUnicodeBlockBlocks82:array[0..0] of TFLREUnicodeCharRange=(
(9632,9727)
);

const FLREUnicodeBlockBlocks83:array[0..0] of TFLREUnicodeCharRange=(
(9728,9983)
);

const FLREUnicodeBlockBlocks84:array[0..0] of TFLREUnicodeCharRange=(
(9984,10175)
);

const FLREUnicodeBlockBlocks85:array[0..0] of TFLREUnicodeCharRange=(
(10176,10223)
);

const FLREUnicodeBlockBlocks86:array[0..0] of TFLREUnicodeCharRange=(
(10224,10239)
);

const FLREUnicodeBlockBlocks87:array[0..0] of TFLREUnicodeCharRange=(
(10240,10495)
);

const FLREUnicodeBlockBlocks88:array[0..0] of TFLREUnicodeCharRange=(
(10496,10623)
);

const FLREUnicodeBlockBlocks89:array[0..0] of TFLREUnicodeCharRange=(
(10624,10751)
);

const FLREUnicodeBlockBlocks90:array[0..0] of TFLREUnicodeCharRange=(
(10752,11007)
);

const FLREUnicodeBlockBlocks91:array[0..0] of TFLREUnicodeCharRange=(
(11008,11263)
);

const FLREUnicodeBlockBlocks92:array[0..0] of TFLREUnicodeCharRange=(
(11264,11359)
);

const FLREUnicodeBlockBlocks93:array[0..0] of TFLREUnicodeCharRange=(
(11360,11391)
);

const FLREUnicodeBlockBlocks94:array[0..0] of TFLREUnicodeCharRange=(
(11392,11519)
);

const FLREUnicodeBlockBlocks95:array[0..0] of TFLREUnicodeCharRange=(
(11520,11567)
);

const FLREUnicodeBlockBlocks96:array[0..0] of TFLREUnicodeCharRange=(
(11568,11647)
);

const FLREUnicodeBlockBlocks97:array[0..0] of TFLREUnicodeCharRange=(
(11648,11743)
);

const FLREUnicodeBlockBlocks98:array[0..0] of TFLREUnicodeCharRange=(
(11744,11775)
);

const FLREUnicodeBlockBlocks99:array[0..0] of TFLREUnicodeCharRange=(
(11776,11903)
);

const FLREUnicodeBlockBlocks100:array[0..0] of TFLREUnicodeCharRange=(
(11904,12031)
);

const FLREUnicodeBlockBlocks101:array[0..0] of TFLREUnicodeCharRange=(
(12032,12255)
);

const FLREUnicodeBlockBlocks102:array[0..0] of TFLREUnicodeCharRange=(
(12272,12287)
);

const FLREUnicodeBlockBlocks103:array[0..0] of TFLREUnicodeCharRange=(
(12288,12351)
);

const FLREUnicodeBlockBlocks104:array[0..0] of TFLREUnicodeCharRange=(
(12352,12447)
);

const FLREUnicodeBlockBlocks105:array[0..0] of TFLREUnicodeCharRange=(
(12448,12543)
);

const FLREUnicodeBlockBlocks106:array[0..0] of TFLREUnicodeCharRange=(
(12544,12591)
);

const FLREUnicodeBlockBlocks107:array[0..0] of TFLREUnicodeCharRange=(
(12592,12687)
);

const FLREUnicodeBlockBlocks108:array[0..0] of TFLREUnicodeCharRange=(
(12688,12703)
);

const FLREUnicodeBlockBlocks109:array[0..0] of TFLREUnicodeCharRange=(
(12704,12735)
);

const FLREUnicodeBlockBlocks110:array[0..0] of TFLREUnicodeCharRange=(
(12736,12783)
);

const FLREUnicodeBlockBlocks111:array[0..0] of TFLREUnicodeCharRange=(
(12784,12799)
);

const FLREUnicodeBlockBlocks112:array[0..0] of TFLREUnicodeCharRange=(
(12800,13055)
);

const FLREUnicodeBlockBlocks113:array[0..0] of TFLREUnicodeCharRange=(
(13056,13311)
);

const FLREUnicodeBlockBlocks114:array[0..0] of TFLREUnicodeCharRange=(
(13312,19903)
);

const FLREUnicodeBlockBlocks115:array[0..0] of TFLREUnicodeCharRange=(
(19904,19967)
);

const FLREUnicodeBlockBlocks116:array[0..0] of TFLREUnicodeCharRange=(
(19968,40959)
);

const FLREUnicodeBlockBlocks117:array[0..0] of TFLREUnicodeCharRange=(
(40960,42127)
);

const FLREUnicodeBlockBlocks118:array[0..0] of TFLREUnicodeCharRange=(
(42128,42191)
);

const FLREUnicodeBlockBlocks119:array[0..0] of TFLREUnicodeCharRange=(
(42192,42239)
);

const FLREUnicodeBlockBlocks120:array[0..0] of TFLREUnicodeCharRange=(
(42240,42559)
);

const FLREUnicodeBlockBlocks121:array[0..0] of TFLREUnicodeCharRange=(
(42560,42655)
);

const FLREUnicodeBlockBlocks122:array[0..0] of TFLREUnicodeCharRange=(
(42656,42751)
);

const FLREUnicodeBlockBlocks123:array[0..0] of TFLREUnicodeCharRange=(
(42752,42783)
);

const FLREUnicodeBlockBlocks124:array[0..0] of TFLREUnicodeCharRange=(
(42784,43007)
);

const FLREUnicodeBlockBlocks125:array[0..0] of TFLREUnicodeCharRange=(
(43008,43055)
);

const FLREUnicodeBlockBlocks126:array[0..0] of TFLREUnicodeCharRange=(
(43056,43071)
);

const FLREUnicodeBlockBlocks127:array[0..0] of TFLREUnicodeCharRange=(
(43072,43135)
);

const FLREUnicodeBlockBlocks128:array[0..0] of TFLREUnicodeCharRange=(
(43136,43231)
);

const FLREUnicodeBlockBlocks129:array[0..0] of TFLREUnicodeCharRange=(
(43232,43263)
);

const FLREUnicodeBlockBlocks130:array[0..0] of TFLREUnicodeCharRange=(
(43264,43311)
);

const FLREUnicodeBlockBlocks131:array[0..0] of TFLREUnicodeCharRange=(
(43312,43359)
);

const FLREUnicodeBlockBlocks132:array[0..0] of TFLREUnicodeCharRange=(
(43360,43391)
);

const FLREUnicodeBlockBlocks133:array[0..0] of TFLREUnicodeCharRange=(
(43392,43487)
);

const FLREUnicodeBlockBlocks134:array[0..0] of TFLREUnicodeCharRange=(
(43488,43519)
);

const FLREUnicodeBlockBlocks135:array[0..0] of TFLREUnicodeCharRange=(
(43520,43615)
);

const FLREUnicodeBlockBlocks136:array[0..0] of TFLREUnicodeCharRange=(
(43616,43647)
);

const FLREUnicodeBlockBlocks137:array[0..0] of TFLREUnicodeCharRange=(
(43648,43743)
);

const FLREUnicodeBlockBlocks138:array[0..0] of TFLREUnicodeCharRange=(
(43744,43775)
);

const FLREUnicodeBlockBlocks139:array[0..0] of TFLREUnicodeCharRange=(
(43776,43823)
);

const FLREUnicodeBlockBlocks140:array[0..0] of TFLREUnicodeCharRange=(
(43824,43887)
);

const FLREUnicodeBlockBlocks141:array[0..0] of TFLREUnicodeCharRange=(
(43888,43967)
);

const FLREUnicodeBlockBlocks142:array[0..0] of TFLREUnicodeCharRange=(
(43968,44031)
);

const FLREUnicodeBlockBlocks143:array[0..0] of TFLREUnicodeCharRange=(
(44032,55215)
);

const FLREUnicodeBlockBlocks144:array[0..0] of TFLREUnicodeCharRange=(
(55216,55295)
);

const FLREUnicodeBlockBlocks145:array[0..0] of TFLREUnicodeCharRange=(
(55296,56191)
);

const FLREUnicodeBlockBlocks146:array[0..0] of TFLREUnicodeCharRange=(
(56192,56319)
);

const FLREUnicodeBlockBlocks147:array[0..0] of TFLREUnicodeCharRange=(
(56320,57343)
);

const FLREUnicodeBlockBlocks148:array[0..0] of TFLREUnicodeCharRange=(
(57344,63743)
);

const FLREUnicodeBlockBlocks149:array[0..0] of TFLREUnicodeCharRange=(
(63744,64255)
);

const FLREUnicodeBlockBlocks150:array[0..0] of TFLREUnicodeCharRange=(
(64256,64335)
);

const FLREUnicodeBlockBlocks151:array[0..0] of TFLREUnicodeCharRange=(
(64336,65023)
);

const FLREUnicodeBlockBlocks152:array[0..0] of TFLREUnicodeCharRange=(
(65024,65039)
);

const FLREUnicodeBlockBlocks153:array[0..0] of TFLREUnicodeCharRange=(
(65040,65055)
);

const FLREUnicodeBlockBlocks154:array[0..0] of TFLREUnicodeCharRange=(
(65056,65071)
);

const FLREUnicodeBlockBlocks155:array[0..0] of TFLREUnicodeCharRange=(
(65072,65103)
);

const FLREUnicodeBlockBlocks156:array[0..0] of TFLREUnicodeCharRange=(
(65104,65135)
);

const FLREUnicodeBlockBlocks157:array[0..0] of TFLREUnicodeCharRange=(
(65136,65279)
);

const FLREUnicodeBlockBlocks158:array[0..0] of TFLREUnicodeCharRange=(
(65280,65519)
);

const FLREUnicodeBlockBlocks159:array[0..0] of TFLREUnicodeCharRange=(
(65520,65535)
);

const FLREUnicodeBlockBlocks160:array[0..0] of TFLREUnicodeCharRange=(
(65536,65663)
);

const FLREUnicodeBlockBlocks161:array[0..0] of TFLREUnicodeCharRange=(
(65664,65791)
);

const FLREUnicodeBlockBlocks162:array[0..0] of TFLREUnicodeCharRange=(
(65792,65855)
);

const FLREUnicodeBlockBlocks163:array[0..0] of TFLREUnicodeCharRange=(
(65856,65935)
);

const FLREUnicodeBlockBlocks164:array[0..0] of TFLREUnicodeCharRange=(
(65936,65999)
);

const FLREUnicodeBlockBlocks165:array[0..0] of TFLREUnicodeCharRange=(
(66000,66047)
);

const FLREUnicodeBlockBlocks166:array[0..0] of TFLREUnicodeCharRange=(
(66176,66207)
);

const FLREUnicodeBlockBlocks167:array[0..0] of TFLREUnicodeCharRange=(
(66208,66271)
);

const FLREUnicodeBlockBlocks168:array[0..0] of TFLREUnicodeCharRange=(
(66272,66303)
);

const FLREUnicodeBlockBlocks169:array[0..0] of TFLREUnicodeCharRange=(
(66304,66351)
);

const FLREUnicodeBlockBlocks170:array[0..0] of TFLREUnicodeCharRange=(
(66352,66383)
);

const FLREUnicodeBlockBlocks171:array[0..0] of TFLREUnicodeCharRange=(
(66384,66431)
);

const FLREUnicodeBlockBlocks172:array[0..0] of TFLREUnicodeCharRange=(
(66432,66463)
);

const FLREUnicodeBlockBlocks173:array[0..0] of TFLREUnicodeCharRange=(
(66464,66527)
);

const FLREUnicodeBlockBlocks174:array[0..0] of TFLREUnicodeCharRange=(
(66560,66639)
);

const FLREUnicodeBlockBlocks175:array[0..0] of TFLREUnicodeCharRange=(
(66640,66687)
);

const FLREUnicodeBlockBlocks176:array[0..0] of TFLREUnicodeCharRange=(
(66688,66735)
);

const FLREUnicodeBlockBlocks177:array[0..0] of TFLREUnicodeCharRange=(
(66816,66863)
);

const FLREUnicodeBlockBlocks178:array[0..0] of TFLREUnicodeCharRange=(
(66864,66927)
);

const FLREUnicodeBlockBlocks179:array[0..0] of TFLREUnicodeCharRange=(
(67072,67455)
);

const FLREUnicodeBlockBlocks180:array[0..0] of TFLREUnicodeCharRange=(
(67584,67647)
);

const FLREUnicodeBlockBlocks181:array[0..0] of TFLREUnicodeCharRange=(
(67648,67679)
);

const FLREUnicodeBlockBlocks182:array[0..0] of TFLREUnicodeCharRange=(
(67680,67711)
);

const FLREUnicodeBlockBlocks183:array[0..0] of TFLREUnicodeCharRange=(
(67712,67759)
);

const FLREUnicodeBlockBlocks184:array[0..0] of TFLREUnicodeCharRange=(
(67808,67839)
);

const FLREUnicodeBlockBlocks185:array[0..0] of TFLREUnicodeCharRange=(
(67840,67871)
);

const FLREUnicodeBlockBlocks186:array[0..0] of TFLREUnicodeCharRange=(
(67872,67903)
);

const FLREUnicodeBlockBlocks187:array[0..0] of TFLREUnicodeCharRange=(
(67968,67999)
);

const FLREUnicodeBlockBlocks188:array[0..0] of TFLREUnicodeCharRange=(
(68000,68095)
);

const FLREUnicodeBlockBlocks189:array[0..0] of TFLREUnicodeCharRange=(
(68096,68191)
);

const FLREUnicodeBlockBlocks190:array[0..0] of TFLREUnicodeCharRange=(
(68192,68223)
);

const FLREUnicodeBlockBlocks191:array[0..0] of TFLREUnicodeCharRange=(
(68224,68255)
);

const FLREUnicodeBlockBlocks192:array[0..0] of TFLREUnicodeCharRange=(
(68288,68351)
);

const FLREUnicodeBlockBlocks193:array[0..0] of TFLREUnicodeCharRange=(
(68352,68415)
);

const FLREUnicodeBlockBlocks194:array[0..0] of TFLREUnicodeCharRange=(
(68416,68447)
);

const FLREUnicodeBlockBlocks195:array[0..0] of TFLREUnicodeCharRange=(
(68448,68479)
);

const FLREUnicodeBlockBlocks196:array[0..0] of TFLREUnicodeCharRange=(
(68480,68527)
);

const FLREUnicodeBlockBlocks197:array[0..0] of TFLREUnicodeCharRange=(
(68608,68687)
);

const FLREUnicodeBlockBlocks198:array[0..0] of TFLREUnicodeCharRange=(
(68736,68863)
);

const FLREUnicodeBlockBlocks199:array[0..0] of TFLREUnicodeCharRange=(
(69216,69247)
);

const FLREUnicodeBlockBlocks200:array[0..0] of TFLREUnicodeCharRange=(
(69632,69759)
);

const FLREUnicodeBlockBlocks201:array[0..0] of TFLREUnicodeCharRange=(
(69760,69839)
);

const FLREUnicodeBlockBlocks202:array[0..0] of TFLREUnicodeCharRange=(
(69840,69887)
);

const FLREUnicodeBlockBlocks203:array[0..0] of TFLREUnicodeCharRange=(
(69888,69967)
);

const FLREUnicodeBlockBlocks204:array[0..0] of TFLREUnicodeCharRange=(
(69968,70015)
);

const FLREUnicodeBlockBlocks205:array[0..0] of TFLREUnicodeCharRange=(
(70016,70111)
);

const FLREUnicodeBlockBlocks206:array[0..0] of TFLREUnicodeCharRange=(
(70112,70143)
);

const FLREUnicodeBlockBlocks207:array[0..0] of TFLREUnicodeCharRange=(
(70144,70223)
);

const FLREUnicodeBlockBlocks208:array[0..0] of TFLREUnicodeCharRange=(
(70272,70319)
);

const FLREUnicodeBlockBlocks209:array[0..0] of TFLREUnicodeCharRange=(
(70320,70399)
);

const FLREUnicodeBlockBlocks210:array[0..0] of TFLREUnicodeCharRange=(
(70400,70527)
);

const FLREUnicodeBlockBlocks211:array[0..0] of TFLREUnicodeCharRange=(
(70784,70879)
);

const FLREUnicodeBlockBlocks212:array[0..0] of TFLREUnicodeCharRange=(
(71040,71167)
);

const FLREUnicodeBlockBlocks213:array[0..0] of TFLREUnicodeCharRange=(
(71168,71263)
);

const FLREUnicodeBlockBlocks214:array[0..0] of TFLREUnicodeCharRange=(
(71296,71375)
);

const FLREUnicodeBlockBlocks215:array[0..0] of TFLREUnicodeCharRange=(
(71424,71487)
);

const FLREUnicodeBlockBlocks216:array[0..0] of TFLREUnicodeCharRange=(
(71840,71935)
);

const FLREUnicodeBlockBlocks217:array[0..0] of TFLREUnicodeCharRange=(
(72384,72447)
);

const FLREUnicodeBlockBlocks218:array[0..0] of TFLREUnicodeCharRange=(
(73728,74751)
);

const FLREUnicodeBlockBlocks219:array[0..0] of TFLREUnicodeCharRange=(
(74752,74879)
);

const FLREUnicodeBlockBlocks220:array[0..0] of TFLREUnicodeCharRange=(
(74880,75087)
);

const FLREUnicodeBlockBlocks221:array[0..0] of TFLREUnicodeCharRange=(
(77824,78895)
);

const FLREUnicodeBlockBlocks222:array[0..0] of TFLREUnicodeCharRange=(
(82944,83583)
);

const FLREUnicodeBlockBlocks223:array[0..0] of TFLREUnicodeCharRange=(
(92160,92735)
);

const FLREUnicodeBlockBlocks224:array[0..0] of TFLREUnicodeCharRange=(
(92736,92783)
);

const FLREUnicodeBlockBlocks225:array[0..0] of TFLREUnicodeCharRange=(
(92880,92927)
);

const FLREUnicodeBlockBlocks226:array[0..0] of TFLREUnicodeCharRange=(
(92928,93071)
);

const FLREUnicodeBlockBlocks227:array[0..0] of TFLREUnicodeCharRange=(
(93952,94111)
);

const FLREUnicodeBlockBlocks228:array[0..0] of TFLREUnicodeCharRange=(
(110592,110847)
);

const FLREUnicodeBlockBlocks229:array[0..0] of TFLREUnicodeCharRange=(
(113664,113823)
);

const FLREUnicodeBlockBlocks230:array[0..0] of TFLREUnicodeCharRange=(
(113824,113839)
);

const FLREUnicodeBlockBlocks231:array[0..0] of TFLREUnicodeCharRange=(
(118784,119039)
);

const FLREUnicodeBlockBlocks232:array[0..0] of TFLREUnicodeCharRange=(
(119040,119295)
);

const FLREUnicodeBlockBlocks233:array[0..0] of TFLREUnicodeCharRange=(
(119296,119375)
);

const FLREUnicodeBlockBlocks234:array[0..0] of TFLREUnicodeCharRange=(
(119552,119647)
);

const FLREUnicodeBlockBlocks235:array[0..0] of TFLREUnicodeCharRange=(
(119648,119679)
);

const FLREUnicodeBlockBlocks236:array[0..0] of TFLREUnicodeCharRange=(
(119808,120831)
);

const FLREUnicodeBlockBlocks237:array[0..0] of TFLREUnicodeCharRange=(
(120832,121519)
);

const FLREUnicodeBlockBlocks238:array[0..0] of TFLREUnicodeCharRange=(
(124928,125151)
);

const FLREUnicodeBlockBlocks239:array[0..0] of TFLREUnicodeCharRange=(
(126464,126719)
);

const FLREUnicodeBlockBlocks240:array[0..0] of TFLREUnicodeCharRange=(
(126976,127023)
);

const FLREUnicodeBlockBlocks241:array[0..0] of TFLREUnicodeCharRange=(
(127024,127135)
);

const FLREUnicodeBlockBlocks242:array[0..0] of TFLREUnicodeCharRange=(
(127136,127231)
);

const FLREUnicodeBlockBlocks243:array[0..0] of TFLREUnicodeCharRange=(
(127232,127487)
);

const FLREUnicodeBlockBlocks244:array[0..0] of TFLREUnicodeCharRange=(
(127488,127743)
);

const FLREUnicodeBlockBlocks245:array[0..0] of TFLREUnicodeCharRange=(
(127744,128511)
);

const FLREUnicodeBlockBlocks246:array[0..0] of TFLREUnicodeCharRange=(
(128512,128591)
);

const FLREUnicodeBlockBlocks247:array[0..0] of TFLREUnicodeCharRange=(
(128592,128639)
);

const FLREUnicodeBlockBlocks248:array[0..0] of TFLREUnicodeCharRange=(
(128640,128767)
);

const FLREUnicodeBlockBlocks249:array[0..0] of TFLREUnicodeCharRange=(
(128768,128895)
);

const FLREUnicodeBlockBlocks250:array[0..0] of TFLREUnicodeCharRange=(
(128896,129023)
);

const FLREUnicodeBlockBlocks251:array[0..0] of TFLREUnicodeCharRange=(
(129024,129279)
);

const FLREUnicodeBlockBlocks252:array[0..0] of TFLREUnicodeCharRange=(
(129280,129535)
);

const FLREUnicodeBlockBlocks253:array[0..0] of TFLREUnicodeCharRange=(
(131072,173791)
);

const FLREUnicodeBlockBlocks254:array[0..0] of TFLREUnicodeCharRange=(
(173824,177983)
);

const FLREUnicodeBlockBlocks255:array[0..0] of TFLREUnicodeCharRange=(
(177984,178207)
);

const FLREUnicodeBlockBlocks256:array[0..0] of TFLREUnicodeCharRange=(
(178208,183983)
);

const FLREUnicodeBlockBlocks257:array[0..0] of TFLREUnicodeCharRange=(
(194560,195103)
);

const FLREUnicodeBlockBlocks258:array[0..0] of TFLREUnicodeCharRange=(
(917504,917631)
);

const FLREUnicodeBlockBlocks259:array[0..0] of TFLREUnicodeCharRange=(
(917760,917999)
);

const FLREUnicodeBlockBlocks260:array[0..0] of TFLREUnicodeCharRange=(
(983040,1048575)
);

const FLREUnicodeBlockBlocks261:array[0..0] of TFLREUnicodeCharRange=(
(1048576,1114111)
);

const FLREUnicodeBlockBlocksData:array[0..261] of pointer=(
@FLREUnicodeBlockBlocks0,
@FLREUnicodeBlockBlocks1,
@FLREUnicodeBlockBlocks2,
@FLREUnicodeBlockBlocks3,
@FLREUnicodeBlockBlocks4,
@FLREUnicodeBlockBlocks5,
@FLREUnicodeBlockBlocks6,
@FLREUnicodeBlockBlocks7,
@FLREUnicodeBlockBlocks8,
@FLREUnicodeBlockBlocks9,
@FLREUnicodeBlockBlocks10,
@FLREUnicodeBlockBlocks11,
@FLREUnicodeBlockBlocks12,
@FLREUnicodeBlockBlocks13,
@FLREUnicodeBlockBlocks14,
@FLREUnicodeBlockBlocks15,
@FLREUnicodeBlockBlocks16,
@FLREUnicodeBlockBlocks17,
@FLREUnicodeBlockBlocks18,
@FLREUnicodeBlockBlocks19,
@FLREUnicodeBlockBlocks20,
@FLREUnicodeBlockBlocks21,
@FLREUnicodeBlockBlocks22,
@FLREUnicodeBlockBlocks23,
@FLREUnicodeBlockBlocks24,
@FLREUnicodeBlockBlocks25,
@FLREUnicodeBlockBlocks26,
@FLREUnicodeBlockBlocks27,
@FLREUnicodeBlockBlocks28,
@FLREUnicodeBlockBlocks29,
@FLREUnicodeBlockBlocks30,
@FLREUnicodeBlockBlocks31,
@FLREUnicodeBlockBlocks32,
@FLREUnicodeBlockBlocks33,
@FLREUnicodeBlockBlocks34,
@FLREUnicodeBlockBlocks35,
@FLREUnicodeBlockBlocks36,
@FLREUnicodeBlockBlocks37,
@FLREUnicodeBlockBlocks38,
@FLREUnicodeBlockBlocks39,
@FLREUnicodeBlockBlocks40,
@FLREUnicodeBlockBlocks41,
@FLREUnicodeBlockBlocks42,
@FLREUnicodeBlockBlocks43,
@FLREUnicodeBlockBlocks44,
@FLREUnicodeBlockBlocks45,
@FLREUnicodeBlockBlocks46,
@FLREUnicodeBlockBlocks47,
@FLREUnicodeBlockBlocks48,
@FLREUnicodeBlockBlocks49,
@FLREUnicodeBlockBlocks50,
@FLREUnicodeBlockBlocks51,
@FLREUnicodeBlockBlocks52,
@FLREUnicodeBlockBlocks53,
@FLREUnicodeBlockBlocks54,
@FLREUnicodeBlockBlocks55,
@FLREUnicodeBlockBlocks56,
@FLREUnicodeBlockBlocks57,
@FLREUnicodeBlockBlocks58,
@FLREUnicodeBlockBlocks59,
@FLREUnicodeBlockBlocks60,
@FLREUnicodeBlockBlocks61,
@FLREUnicodeBlockBlocks62,
@FLREUnicodeBlockBlocks63,
@FLREUnicodeBlockBlocks64,
@FLREUnicodeBlockBlocks65,
@FLREUnicodeBlockBlocks66,
@FLREUnicodeBlockBlocks67,
@FLREUnicodeBlockBlocks68,
@FLREUnicodeBlockBlocks69,
@FLREUnicodeBlockBlocks70,
@FLREUnicodeBlockBlocks71,
@FLREUnicodeBlockBlocks72,
@FLREUnicodeBlockBlocks73,
@FLREUnicodeBlockBlocks74,
@FLREUnicodeBlockBlocks75,
@FLREUnicodeBlockBlocks76,
@FLREUnicodeBlockBlocks77,
@FLREUnicodeBlockBlocks78,
@FLREUnicodeBlockBlocks79,
@FLREUnicodeBlockBlocks80,
@FLREUnicodeBlockBlocks81,
@FLREUnicodeBlockBlocks82,
@FLREUnicodeBlockBlocks83,
@FLREUnicodeBlockBlocks84,
@FLREUnicodeBlockBlocks85,
@FLREUnicodeBlockBlocks86,
@FLREUnicodeBlockBlocks87,
@FLREUnicodeBlockBlocks88,
@FLREUnicodeBlockBlocks89,
@FLREUnicodeBlockBlocks90,
@FLREUnicodeBlockBlocks91,
@FLREUnicodeBlockBlocks92,
@FLREUnicodeBlockBlocks93,
@FLREUnicodeBlockBlocks94,
@FLREUnicodeBlockBlocks95,
@FLREUnicodeBlockBlocks96,
@FLREUnicodeBlockBlocks97,
@FLREUnicodeBlockBlocks98,
@FLREUnicodeBlockBlocks99,
@FLREUnicodeBlockBlocks100,
@FLREUnicodeBlockBlocks101,
@FLREUnicodeBlockBlocks102,
@FLREUnicodeBlockBlocks103,
@FLREUnicodeBlockBlocks104,
@FLREUnicodeBlockBlocks105,
@FLREUnicodeBlockBlocks106,
@FLREUnicodeBlockBlocks107,
@FLREUnicodeBlockBlocks108,
@FLREUnicodeBlockBlocks109,
@FLREUnicodeBlockBlocks110,
@FLREUnicodeBlockBlocks111,
@FLREUnicodeBlockBlocks112,
@FLREUnicodeBlockBlocks113,
@FLREUnicodeBlockBlocks114,
@FLREUnicodeBlockBlocks115,
@FLREUnicodeBlockBlocks116,
@FLREUnicodeBlockBlocks117,
@FLREUnicodeBlockBlocks118,
@FLREUnicodeBlockBlocks119,
@FLREUnicodeBlockBlocks120,
@FLREUnicodeBlockBlocks121,
@FLREUnicodeBlockBlocks122,
@FLREUnicodeBlockBlocks123,
@FLREUnicodeBlockBlocks124,
@FLREUnicodeBlockBlocks125,
@FLREUnicodeBlockBlocks126,
@FLREUnicodeBlockBlocks127,
@FLREUnicodeBlockBlocks128,
@FLREUnicodeBlockBlocks129,
@FLREUnicodeBlockBlocks130,
@FLREUnicodeBlockBlocks131,
@FLREUnicodeBlockBlocks132,
@FLREUnicodeBlockBlocks133,
@FLREUnicodeBlockBlocks134,
@FLREUnicodeBlockBlocks135,
@FLREUnicodeBlockBlocks136,
@FLREUnicodeBlockBlocks137,
@FLREUnicodeBlockBlocks138,
@FLREUnicodeBlockBlocks139,
@FLREUnicodeBlockBlocks140,
@FLREUnicodeBlockBlocks141,
@FLREUnicodeBlockBlocks142,
@FLREUnicodeBlockBlocks143,
@FLREUnicodeBlockBlocks144,
@FLREUnicodeBlockBlocks145,
@FLREUnicodeBlockBlocks146,
@FLREUnicodeBlockBlocks147,
@FLREUnicodeBlockBlocks148,
@FLREUnicodeBlockBlocks149,
@FLREUnicodeBlockBlocks150,
@FLREUnicodeBlockBlocks151,
@FLREUnicodeBlockBlocks152,
@FLREUnicodeBlockBlocks153,
@FLREUnicodeBlockBlocks154,
@FLREUnicodeBlockBlocks155,
@FLREUnicodeBlockBlocks156,
@FLREUnicodeBlockBlocks157,
@FLREUnicodeBlockBlocks158,
@FLREUnicodeBlockBlocks159,
@FLREUnicodeBlockBlocks160,
@FLREUnicodeBlockBlocks161,
@FLREUnicodeBlockBlocks162,
@FLREUnicodeBlockBlocks163,
@FLREUnicodeBlockBlocks164,
@FLREUnicodeBlockBlocks165,
@FLREUnicodeBlockBlocks166,
@FLREUnicodeBlockBlocks167,
@FLREUnicodeBlockBlocks168,
@FLREUnicodeBlockBlocks169,
@FLREUnicodeBlockBlocks170,
@FLREUnicodeBlockBlocks171,
@FLREUnicodeBlockBlocks172,
@FLREUnicodeBlockBlocks173,
@FLREUnicodeBlockBlocks174,
@FLREUnicodeBlockBlocks175,
@FLREUnicodeBlockBlocks176,
@FLREUnicodeBlockBlocks177,
@FLREUnicodeBlockBlocks178,
@FLREUnicodeBlockBlocks179,
@FLREUnicodeBlockBlocks180,
@FLREUnicodeBlockBlocks181,
@FLREUnicodeBlockBlocks182,
@FLREUnicodeBlockBlocks183,
@FLREUnicodeBlockBlocks184,
@FLREUnicodeBlockBlocks185,
@FLREUnicodeBlockBlocks186,
@FLREUnicodeBlockBlocks187,
@FLREUnicodeBlockBlocks188,
@FLREUnicodeBlockBlocks189,
@FLREUnicodeBlockBlocks190,
@FLREUnicodeBlockBlocks191,
@FLREUnicodeBlockBlocks192,
@FLREUnicodeBlockBlocks193,
@FLREUnicodeBlockBlocks194,
@FLREUnicodeBlockBlocks195,
@FLREUnicodeBlockBlocks196,
@FLREUnicodeBlockBlocks197,
@FLREUnicodeBlockBlocks198,
@FLREUnicodeBlockBlocks199,
@FLREUnicodeBlockBlocks200,
@FLREUnicodeBlockBlocks201,
@FLREUnicodeBlockBlocks202,
@FLREUnicodeBlockBlocks203,
@FLREUnicodeBlockBlocks204,
@FLREUnicodeBlockBlocks205,
@FLREUnicodeBlockBlocks206,
@FLREUnicodeBlockBlocks207,
@FLREUnicodeBlockBlocks208,
@FLREUnicodeBlockBlocks209,
@FLREUnicodeBlockBlocks210,
@FLREUnicodeBlockBlocks211,
@FLREUnicodeBlockBlocks212,
@FLREUnicodeBlockBlocks213,
@FLREUnicodeBlockBlocks214,
@FLREUnicodeBlockBlocks215,
@FLREUnicodeBlockBlocks216,
@FLREUnicodeBlockBlocks217,
@FLREUnicodeBlockBlocks218,
@FLREUnicodeBlockBlocks219,
@FLREUnicodeBlockBlocks220,
@FLREUnicodeBlockBlocks221,
@FLREUnicodeBlockBlocks222,
@FLREUnicodeBlockBlocks223,
@FLREUnicodeBlockBlocks224,
@FLREUnicodeBlockBlocks225,
@FLREUnicodeBlockBlocks226,
@FLREUnicodeBlockBlocks227,
@FLREUnicodeBlockBlocks228,
@FLREUnicodeBlockBlocks229,
@FLREUnicodeBlockBlocks230,
@FLREUnicodeBlockBlocks231,
@FLREUnicodeBlockBlocks232,
@FLREUnicodeBlockBlocks233,
@FLREUnicodeBlockBlocks234,
@FLREUnicodeBlockBlocks235,
@FLREUnicodeBlockBlocks236,
@FLREUnicodeBlockBlocks237,
@FLREUnicodeBlockBlocks238,
@FLREUnicodeBlockBlocks239,
@FLREUnicodeBlockBlocks240,
@FLREUnicodeBlockBlocks241,
@FLREUnicodeBlockBlocks242,
@FLREUnicodeBlockBlocks243,
@FLREUnicodeBlockBlocks244,
@FLREUnicodeBlockBlocks245,
@FLREUnicodeBlockBlocks246,
@FLREUnicodeBlockBlocks247,
@FLREUnicodeBlockBlocks248,
@FLREUnicodeBlockBlocks249,
@FLREUnicodeBlockBlocks250,
@FLREUnicodeBlockBlocks251,
@FLREUnicodeBlockBlocks252,
@FLREUnicodeBlockBlocks253,
@FLREUnicodeBlockBlocks254,
@FLREUnicodeBlockBlocks255,
@FLREUnicodeBlockBlocks256,
@FLREUnicodeBlockBlocks257,
@FLREUnicodeBlockBlocks258,
@FLREUnicodeBlockBlocks259,
@FLREUnicodeBlockBlocks260,
@FLREUnicodeBlockBlocks261
);

const FLREUnicodeBlockBlocksCounts:array[0..261] of longint=(
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1
);

const FLRECountUnicodeIgnoreCaseBlockBlocks=261;

const FLREUnicodeIgnoreCaseBlockBlocks0:array[0..0] of TFLREUnicodeCharRange=(
(0,127)
);

const FLREUnicodeIgnoreCaseBlockBlocks1:array[0..2] of TFLREUnicodeCharRange=(
(128,255),
(376,376),
(924,924)
);

const FLREUnicodeIgnoreCaseBlockBlocks2:array[0..3] of TFLREUnicodeCharRange=(
(73,73),
(83,83),
(105,105),
(255,383)
);

const FLREUnicodeIgnoreCaseBlockBlocks3:array[0..16] of TFLREUnicodeCharRange=(
(384,591),
(595,596),
(598,599),
(601,601),
(603,603),
(608,608),
(611,611),
(616,617),
(623,623),
(626,626),
(629,629),
(640,640),
(643,643),
(648,652),
(658,658),
(11365,11366),
(11390,11391)
);

const FLREUnicodeIgnoreCaseBlockBlocks4:array[0..20] of TFLREUnicodeCharRange=(
(385,385),
(390,390),
(393,394),
(399,400),
(403,404),
(406,407),
(412,413),
(415,415),
(422,422),
(425,425),
(430,430),
(433,434),
(439,439),
(580,581),
(592,687),
(11362,11362),
(11364,11364),
(11373,11376),
(42893,42893),
(42922,42925),
(42928,42930)
);

const FLREUnicodeIgnoreCaseBlockBlocks5:array[0..0] of TFLREUnicodeCharRange=(
(688,767)
);

const FLREUnicodeIgnoreCaseBlockBlocks6:array[0..1] of TFLREUnicodeCharRange=(
(768,879),
(921,921)
);

const FLREUnicodeIgnoreCaseBlockBlocks7:array[0..0] of TFLREUnicodeCharRange=(
(880,1023)
);

const FLREUnicodeIgnoreCaseBlockBlocks8:array[0..0] of TFLREUnicodeCharRange=(
(1024,1279)
);

const FLREUnicodeIgnoreCaseBlockBlocks9:array[0..0] of TFLREUnicodeCharRange=(
(1280,1327)
);

const FLREUnicodeIgnoreCaseBlockBlocks10:array[0..0] of TFLREUnicodeCharRange=(
(1328,1423)
);

const FLREUnicodeIgnoreCaseBlockBlocks11:array[0..0] of TFLREUnicodeCharRange=(
(1424,1535)
);

const FLREUnicodeIgnoreCaseBlockBlocks12:array[0..0] of TFLREUnicodeCharRange=(
(1536,1791)
);

const FLREUnicodeIgnoreCaseBlockBlocks13:array[0..0] of TFLREUnicodeCharRange=(
(1792,1871)
);

const FLREUnicodeIgnoreCaseBlockBlocks14:array[0..0] of TFLREUnicodeCharRange=(
(1872,1919)
);

const FLREUnicodeIgnoreCaseBlockBlocks15:array[0..0] of TFLREUnicodeCharRange=(
(1920,1983)
);

const FLREUnicodeIgnoreCaseBlockBlocks16:array[0..0] of TFLREUnicodeCharRange=(
(1984,2047)
);

const FLREUnicodeIgnoreCaseBlockBlocks17:array[0..0] of TFLREUnicodeCharRange=(
(2048,2111)
);

const FLREUnicodeIgnoreCaseBlockBlocks18:array[0..0] of TFLREUnicodeCharRange=(
(2112,2143)
);

const FLREUnicodeIgnoreCaseBlockBlocks19:array[0..0] of TFLREUnicodeCharRange=(
(2208,2303)
);

const FLREUnicodeIgnoreCaseBlockBlocks20:array[0..0] of TFLREUnicodeCharRange=(
(2304,2431)
);

const FLREUnicodeIgnoreCaseBlockBlocks21:array[0..0] of TFLREUnicodeCharRange=(
(2432,2559)
);

const FLREUnicodeIgnoreCaseBlockBlocks22:array[0..0] of TFLREUnicodeCharRange=(
(2560,2687)
);

const FLREUnicodeIgnoreCaseBlockBlocks23:array[0..0] of TFLREUnicodeCharRange=(
(2688,2815)
);

const FLREUnicodeIgnoreCaseBlockBlocks24:array[0..0] of TFLREUnicodeCharRange=(
(2816,2943)
);

const FLREUnicodeIgnoreCaseBlockBlocks25:array[0..0] of TFLREUnicodeCharRange=(
(2944,3071)
);

const FLREUnicodeIgnoreCaseBlockBlocks26:array[0..0] of TFLREUnicodeCharRange=(
(3072,3199)
);

const FLREUnicodeIgnoreCaseBlockBlocks27:array[0..0] of TFLREUnicodeCharRange=(
(3200,3327)
);

const FLREUnicodeIgnoreCaseBlockBlocks28:array[0..0] of TFLREUnicodeCharRange=(
(3328,3455)
);

const FLREUnicodeIgnoreCaseBlockBlocks29:array[0..0] of TFLREUnicodeCharRange=(
(3456,3583)
);

const FLREUnicodeIgnoreCaseBlockBlocks30:array[0..0] of TFLREUnicodeCharRange=(
(3584,3711)
);

const FLREUnicodeIgnoreCaseBlockBlocks31:array[0..0] of TFLREUnicodeCharRange=(
(3712,3839)
);

const FLREUnicodeIgnoreCaseBlockBlocks32:array[0..0] of TFLREUnicodeCharRange=(
(3840,4095)
);

const FLREUnicodeIgnoreCaseBlockBlocks33:array[0..0] of TFLREUnicodeCharRange=(
(4096,4255)
);

const FLREUnicodeIgnoreCaseBlockBlocks34:array[0..3] of TFLREUnicodeCharRange=(
(4256,4351),
(11520,11557),
(11559,11559),
(11565,11565)
);

const FLREUnicodeIgnoreCaseBlockBlocks35:array[0..0] of TFLREUnicodeCharRange=(
(4352,4607)
);

const FLREUnicodeIgnoreCaseBlockBlocks36:array[0..0] of TFLREUnicodeCharRange=(
(4608,4991)
);

const FLREUnicodeIgnoreCaseBlockBlocks37:array[0..0] of TFLREUnicodeCharRange=(
(4992,5023)
);

const FLREUnicodeIgnoreCaseBlockBlocks38:array[0..1] of TFLREUnicodeCharRange=(
(5024,5119),
(43888,43967)
);

const FLREUnicodeIgnoreCaseBlockBlocks39:array[0..0] of TFLREUnicodeCharRange=(
(5120,5759)
);

const FLREUnicodeIgnoreCaseBlockBlocks40:array[0..0] of TFLREUnicodeCharRange=(
(5760,5791)
);

const FLREUnicodeIgnoreCaseBlockBlocks41:array[0..0] of TFLREUnicodeCharRange=(
(5792,5887)
);

const FLREUnicodeIgnoreCaseBlockBlocks42:array[0..0] of TFLREUnicodeCharRange=(
(5888,5919)
);

const FLREUnicodeIgnoreCaseBlockBlocks43:array[0..0] of TFLREUnicodeCharRange=(
(5920,5951)
);

const FLREUnicodeIgnoreCaseBlockBlocks44:array[0..0] of TFLREUnicodeCharRange=(
(5952,5983)
);

const FLREUnicodeIgnoreCaseBlockBlocks45:array[0..0] of TFLREUnicodeCharRange=(
(5984,6015)
);

const FLREUnicodeIgnoreCaseBlockBlocks46:array[0..0] of TFLREUnicodeCharRange=(
(6016,6143)
);

const FLREUnicodeIgnoreCaseBlockBlocks47:array[0..0] of TFLREUnicodeCharRange=(
(6144,6319)
);

const FLREUnicodeIgnoreCaseBlockBlocks48:array[0..0] of TFLREUnicodeCharRange=(
(6320,6399)
);

const FLREUnicodeIgnoreCaseBlockBlocks49:array[0..0] of TFLREUnicodeCharRange=(
(6400,6479)
);

const FLREUnicodeIgnoreCaseBlockBlocks50:array[0..0] of TFLREUnicodeCharRange=(
(6480,6527)
);

const FLREUnicodeIgnoreCaseBlockBlocks51:array[0..0] of TFLREUnicodeCharRange=(
(6528,6623)
);

const FLREUnicodeIgnoreCaseBlockBlocks52:array[0..0] of TFLREUnicodeCharRange=(
(6624,6655)
);

const FLREUnicodeIgnoreCaseBlockBlocks53:array[0..0] of TFLREUnicodeCharRange=(
(6656,6687)
);

const FLREUnicodeIgnoreCaseBlockBlocks54:array[0..0] of TFLREUnicodeCharRange=(
(6688,6831)
);

const FLREUnicodeIgnoreCaseBlockBlocks55:array[0..0] of TFLREUnicodeCharRange=(
(6832,6911)
);

const FLREUnicodeIgnoreCaseBlockBlocks56:array[0..0] of TFLREUnicodeCharRange=(
(6912,7039)
);

const FLREUnicodeIgnoreCaseBlockBlocks57:array[0..0] of TFLREUnicodeCharRange=(
(7040,7103)
);

const FLREUnicodeIgnoreCaseBlockBlocks58:array[0..0] of TFLREUnicodeCharRange=(
(7104,7167)
);

const FLREUnicodeIgnoreCaseBlockBlocks59:array[0..0] of TFLREUnicodeCharRange=(
(7168,7247)
);

const FLREUnicodeIgnoreCaseBlockBlocks60:array[0..0] of TFLREUnicodeCharRange=(
(7248,7295)
);

const FLREUnicodeIgnoreCaseBlockBlocks61:array[0..0] of TFLREUnicodeCharRange=(
(7360,7375)
);

const FLREUnicodeIgnoreCaseBlockBlocks62:array[0..0] of TFLREUnicodeCharRange=(
(7376,7423)
);

const FLREUnicodeIgnoreCaseBlockBlocks63:array[0..2] of TFLREUnicodeCharRange=(
(7424,7551),
(11363,11363),
(42877,42877)
);

const FLREUnicodeIgnoreCaseBlockBlocks64:array[0..0] of TFLREUnicodeCharRange=(
(7552,7615)
);

const FLREUnicodeIgnoreCaseBlockBlocks65:array[0..0] of TFLREUnicodeCharRange=(
(7616,7679)
);

const FLREUnicodeIgnoreCaseBlockBlocks66:array[0..1] of TFLREUnicodeCharRange=(
(223,223),
(7680,7935)
);

const FLREUnicodeIgnoreCaseBlockBlocks67:array[0..1] of TFLREUnicodeCharRange=(
(921,921),
(7936,8191)
);

const FLREUnicodeIgnoreCaseBlockBlocks68:array[0..0] of TFLREUnicodeCharRange=(
(8192,8303)
);

const FLREUnicodeIgnoreCaseBlockBlocks69:array[0..0] of TFLREUnicodeCharRange=(
(8304,8351)
);

const FLREUnicodeIgnoreCaseBlockBlocks70:array[0..0] of TFLREUnicodeCharRange=(
(8352,8399)
);

const FLREUnicodeIgnoreCaseBlockBlocks71:array[0..0] of TFLREUnicodeCharRange=(
(8400,8447)
);

const FLREUnicodeIgnoreCaseBlockBlocks72:array[0..3] of TFLREUnicodeCharRange=(
(107,107),
(229,229),
(969,969),
(8448,8527)
);

const FLREUnicodeIgnoreCaseBlockBlocks73:array[0..0] of TFLREUnicodeCharRange=(
(8528,8591)
);

const FLREUnicodeIgnoreCaseBlockBlocks74:array[0..0] of TFLREUnicodeCharRange=(
(8592,8703)
);

const FLREUnicodeIgnoreCaseBlockBlocks75:array[0..0] of TFLREUnicodeCharRange=(
(8704,8959)
);

const FLREUnicodeIgnoreCaseBlockBlocks76:array[0..0] of TFLREUnicodeCharRange=(
(8960,9215)
);

const FLREUnicodeIgnoreCaseBlockBlocks77:array[0..0] of TFLREUnicodeCharRange=(
(9216,9279)
);

const FLREUnicodeIgnoreCaseBlockBlocks78:array[0..0] of TFLREUnicodeCharRange=(
(9280,9311)
);

const FLREUnicodeIgnoreCaseBlockBlocks79:array[0..0] of TFLREUnicodeCharRange=(
(9312,9471)
);

const FLREUnicodeIgnoreCaseBlockBlocks80:array[0..0] of TFLREUnicodeCharRange=(
(9472,9599)
);

const FLREUnicodeIgnoreCaseBlockBlocks81:array[0..0] of TFLREUnicodeCharRange=(
(9600,9631)
);

const FLREUnicodeIgnoreCaseBlockBlocks82:array[0..0] of TFLREUnicodeCharRange=(
(9632,9727)
);

const FLREUnicodeIgnoreCaseBlockBlocks83:array[0..0] of TFLREUnicodeCharRange=(
(9728,9983)
);

const FLREUnicodeIgnoreCaseBlockBlocks84:array[0..0] of TFLREUnicodeCharRange=(
(9984,10175)
);

const FLREUnicodeIgnoreCaseBlockBlocks85:array[0..0] of TFLREUnicodeCharRange=(
(10176,10223)
);

const FLREUnicodeIgnoreCaseBlockBlocks86:array[0..0] of TFLREUnicodeCharRange=(
(10224,10239)
);

const FLREUnicodeIgnoreCaseBlockBlocks87:array[0..0] of TFLREUnicodeCharRange=(
(10240,10495)
);

const FLREUnicodeIgnoreCaseBlockBlocks88:array[0..0] of TFLREUnicodeCharRange=(
(10496,10623)
);

const FLREUnicodeIgnoreCaseBlockBlocks89:array[0..0] of TFLREUnicodeCharRange=(
(10624,10751)
);

const FLREUnicodeIgnoreCaseBlockBlocks90:array[0..0] of TFLREUnicodeCharRange=(
(10752,11007)
);

const FLREUnicodeIgnoreCaseBlockBlocks91:array[0..0] of TFLREUnicodeCharRange=(
(11008,11263)
);

const FLREUnicodeIgnoreCaseBlockBlocks92:array[0..0] of TFLREUnicodeCharRange=(
(11264,11359)
);

const FLREUnicodeIgnoreCaseBlockBlocks93:array[0..7] of TFLREUnicodeCharRange=(
(570,570),
(574,576),
(592,594),
(619,619),
(625,625),
(637,637),
(7549,7549),
(11360,11391)
);

const FLREUnicodeIgnoreCaseBlockBlocks94:array[0..0] of TFLREUnicodeCharRange=(
(11392,11519)
);

const FLREUnicodeIgnoreCaseBlockBlocks95:array[0..3] of TFLREUnicodeCharRange=(
(4256,4293),
(4295,4295),
(4301,4301),
(11520,11567)
);

const FLREUnicodeIgnoreCaseBlockBlocks96:array[0..0] of TFLREUnicodeCharRange=(
(11568,11647)
);

const FLREUnicodeIgnoreCaseBlockBlocks97:array[0..0] of TFLREUnicodeCharRange=(
(11648,11743)
);

const FLREUnicodeIgnoreCaseBlockBlocks98:array[0..0] of TFLREUnicodeCharRange=(
(11744,11775)
);

const FLREUnicodeIgnoreCaseBlockBlocks99:array[0..0] of TFLREUnicodeCharRange=(
(11776,11903)
);

const FLREUnicodeIgnoreCaseBlockBlocks100:array[0..0] of TFLREUnicodeCharRange=(
(11904,12031)
);

const FLREUnicodeIgnoreCaseBlockBlocks101:array[0..0] of TFLREUnicodeCharRange=(
(12032,12255)
);

const FLREUnicodeIgnoreCaseBlockBlocks102:array[0..0] of TFLREUnicodeCharRange=(
(12272,12287)
);

const FLREUnicodeIgnoreCaseBlockBlocks103:array[0..0] of TFLREUnicodeCharRange=(
(12288,12351)
);

const FLREUnicodeIgnoreCaseBlockBlocks104:array[0..0] of TFLREUnicodeCharRange=(
(12352,12447)
);

const FLREUnicodeIgnoreCaseBlockBlocks105:array[0..0] of TFLREUnicodeCharRange=(
(12448,12543)
);

const FLREUnicodeIgnoreCaseBlockBlocks106:array[0..0] of TFLREUnicodeCharRange=(
(12544,12591)
);

const FLREUnicodeIgnoreCaseBlockBlocks107:array[0..0] of TFLREUnicodeCharRange=(
(12592,12687)
);

const FLREUnicodeIgnoreCaseBlockBlocks108:array[0..0] of TFLREUnicodeCharRange=(
(12688,12703)
);

const FLREUnicodeIgnoreCaseBlockBlocks109:array[0..0] of TFLREUnicodeCharRange=(
(12704,12735)
);

const FLREUnicodeIgnoreCaseBlockBlocks110:array[0..0] of TFLREUnicodeCharRange=(
(12736,12783)
);

const FLREUnicodeIgnoreCaseBlockBlocks111:array[0..0] of TFLREUnicodeCharRange=(
(12784,12799)
);

const FLREUnicodeIgnoreCaseBlockBlocks112:array[0..0] of TFLREUnicodeCharRange=(
(12800,13055)
);

const FLREUnicodeIgnoreCaseBlockBlocks113:array[0..0] of TFLREUnicodeCharRange=(
(13056,13311)
);

const FLREUnicodeIgnoreCaseBlockBlocks114:array[0..0] of TFLREUnicodeCharRange=(
(13312,19903)
);

const FLREUnicodeIgnoreCaseBlockBlocks115:array[0..0] of TFLREUnicodeCharRange=(
(19904,19967)
);

const FLREUnicodeIgnoreCaseBlockBlocks116:array[0..0] of TFLREUnicodeCharRange=(
(19968,40959)
);

const FLREUnicodeIgnoreCaseBlockBlocks117:array[0..0] of TFLREUnicodeCharRange=(
(40960,42127)
);

const FLREUnicodeIgnoreCaseBlockBlocks118:array[0..0] of TFLREUnicodeCharRange=(
(42128,42191)
);

const FLREUnicodeIgnoreCaseBlockBlocks119:array[0..0] of TFLREUnicodeCharRange=(
(42192,42239)
);

const FLREUnicodeIgnoreCaseBlockBlocks120:array[0..0] of TFLREUnicodeCharRange=(
(42240,42559)
);

const FLREUnicodeIgnoreCaseBlockBlocks121:array[0..0] of TFLREUnicodeCharRange=(
(42560,42655)
);

const FLREUnicodeIgnoreCaseBlockBlocks122:array[0..0] of TFLREUnicodeCharRange=(
(42656,42751)
);

const FLREUnicodeIgnoreCaseBlockBlocks123:array[0..0] of TFLREUnicodeCharRange=(
(42752,42783)
);

const FLREUnicodeIgnoreCaseBlockBlocks124:array[0..8] of TFLREUnicodeCharRange=(
(604,604),
(609,609),
(613,614),
(620,620),
(647,647),
(669,670),
(7545,7545),
(42784,43007),
(43859,43859)
);

const FLREUnicodeIgnoreCaseBlockBlocks125:array[0..0] of TFLREUnicodeCharRange=(
(43008,43055)
);

const FLREUnicodeIgnoreCaseBlockBlocks126:array[0..0] of TFLREUnicodeCharRange=(
(43056,43071)
);

const FLREUnicodeIgnoreCaseBlockBlocks127:array[0..0] of TFLREUnicodeCharRange=(
(43072,43135)
);

const FLREUnicodeIgnoreCaseBlockBlocks128:array[0..0] of TFLREUnicodeCharRange=(
(43136,43231)
);

const FLREUnicodeIgnoreCaseBlockBlocks129:array[0..0] of TFLREUnicodeCharRange=(
(43232,43263)
);

const FLREUnicodeIgnoreCaseBlockBlocks130:array[0..0] of TFLREUnicodeCharRange=(
(43264,43311)
);

const FLREUnicodeIgnoreCaseBlockBlocks131:array[0..0] of TFLREUnicodeCharRange=(
(43312,43359)
);

const FLREUnicodeIgnoreCaseBlockBlocks132:array[0..0] of TFLREUnicodeCharRange=(
(43360,43391)
);

const FLREUnicodeIgnoreCaseBlockBlocks133:array[0..0] of TFLREUnicodeCharRange=(
(43392,43487)
);

const FLREUnicodeIgnoreCaseBlockBlocks134:array[0..0] of TFLREUnicodeCharRange=(
(43488,43519)
);

const FLREUnicodeIgnoreCaseBlockBlocks135:array[0..0] of TFLREUnicodeCharRange=(
(43520,43615)
);

const FLREUnicodeIgnoreCaseBlockBlocks136:array[0..0] of TFLREUnicodeCharRange=(
(43616,43647)
);

const FLREUnicodeIgnoreCaseBlockBlocks137:array[0..0] of TFLREUnicodeCharRange=(
(43648,43743)
);

const FLREUnicodeIgnoreCaseBlockBlocks138:array[0..0] of TFLREUnicodeCharRange=(
(43744,43775)
);

const FLREUnicodeIgnoreCaseBlockBlocks139:array[0..0] of TFLREUnicodeCharRange=(
(43776,43823)
);

const FLREUnicodeIgnoreCaseBlockBlocks140:array[0..1] of TFLREUnicodeCharRange=(
(42931,42931),
(43824,43887)
);

const FLREUnicodeIgnoreCaseBlockBlocks141:array[0..1] of TFLREUnicodeCharRange=(
(5024,5103),
(43888,43967)
);

const FLREUnicodeIgnoreCaseBlockBlocks142:array[0..0] of TFLREUnicodeCharRange=(
(43968,44031)
);

const FLREUnicodeIgnoreCaseBlockBlocks143:array[0..0] of TFLREUnicodeCharRange=(
(44032,55215)
);

const FLREUnicodeIgnoreCaseBlockBlocks144:array[0..0] of TFLREUnicodeCharRange=(
(55216,55295)
);

const FLREUnicodeIgnoreCaseBlockBlocks145:array[0..0] of TFLREUnicodeCharRange=(
(55296,56191)
);

const FLREUnicodeIgnoreCaseBlockBlocks146:array[0..0] of TFLREUnicodeCharRange=(
(56192,56319)
);

const FLREUnicodeIgnoreCaseBlockBlocks147:array[0..0] of TFLREUnicodeCharRange=(
(56320,57343)
);

const FLREUnicodeIgnoreCaseBlockBlocks148:array[0..0] of TFLREUnicodeCharRange=(
(57344,63743)
);

const FLREUnicodeIgnoreCaseBlockBlocks149:array[0..0] of TFLREUnicodeCharRange=(
(63744,64255)
);

const FLREUnicodeIgnoreCaseBlockBlocks150:array[0..0] of TFLREUnicodeCharRange=(
(64256,64335)
);

const FLREUnicodeIgnoreCaseBlockBlocks151:array[0..0] of TFLREUnicodeCharRange=(
(64336,65023)
);

const FLREUnicodeIgnoreCaseBlockBlocks152:array[0..0] of TFLREUnicodeCharRange=(
(65024,65039)
);

const FLREUnicodeIgnoreCaseBlockBlocks153:array[0..0] of TFLREUnicodeCharRange=(
(65040,65055)
);

const FLREUnicodeIgnoreCaseBlockBlocks154:array[0..0] of TFLREUnicodeCharRange=(
(65056,65071)
);

const FLREUnicodeIgnoreCaseBlockBlocks155:array[0..0] of TFLREUnicodeCharRange=(
(65072,65103)
);

const FLREUnicodeIgnoreCaseBlockBlocks156:array[0..0] of TFLREUnicodeCharRange=(
(65104,65135)
);

const FLREUnicodeIgnoreCaseBlockBlocks157:array[0..0] of TFLREUnicodeCharRange=(
(65136,65279)
);

const FLREUnicodeIgnoreCaseBlockBlocks158:array[0..0] of TFLREUnicodeCharRange=(
(65280,65519)
);

const FLREUnicodeIgnoreCaseBlockBlocks159:array[0..0] of TFLREUnicodeCharRange=(
(65520,65535)
);

const FLREUnicodeIgnoreCaseBlockBlocks160:array[0..0] of TFLREUnicodeCharRange=(
(65536,65663)
);

const FLREUnicodeIgnoreCaseBlockBlocks161:array[0..0] of TFLREUnicodeCharRange=(
(65664,65791)
);

const FLREUnicodeIgnoreCaseBlockBlocks162:array[0..0] of TFLREUnicodeCharRange=(
(65792,65855)
);

const FLREUnicodeIgnoreCaseBlockBlocks163:array[0..0] of TFLREUnicodeCharRange=(
(65856,65935)
);

const FLREUnicodeIgnoreCaseBlockBlocks164:array[0..0] of TFLREUnicodeCharRange=(
(65936,65999)
);

const FLREUnicodeIgnoreCaseBlockBlocks165:array[0..0] of TFLREUnicodeCharRange=(
(66000,66047)
);

const FLREUnicodeIgnoreCaseBlockBlocks166:array[0..0] of TFLREUnicodeCharRange=(
(66176,66207)
);

const FLREUnicodeIgnoreCaseBlockBlocks167:array[0..0] of TFLREUnicodeCharRange=(
(66208,66271)
);

const FLREUnicodeIgnoreCaseBlockBlocks168:array[0..0] of TFLREUnicodeCharRange=(
(66272,66303)
);

const FLREUnicodeIgnoreCaseBlockBlocks169:array[0..0] of TFLREUnicodeCharRange=(
(66304,66351)
);

const FLREUnicodeIgnoreCaseBlockBlocks170:array[0..0] of TFLREUnicodeCharRange=(
(66352,66383)
);

const FLREUnicodeIgnoreCaseBlockBlocks171:array[0..0] of TFLREUnicodeCharRange=(
(66384,66431)
);

const FLREUnicodeIgnoreCaseBlockBlocks172:array[0..0] of TFLREUnicodeCharRange=(
(66432,66463)
);

const FLREUnicodeIgnoreCaseBlockBlocks173:array[0..0] of TFLREUnicodeCharRange=(
(66464,66527)
);

const FLREUnicodeIgnoreCaseBlockBlocks174:array[0..0] of TFLREUnicodeCharRange=(
(66560,66639)
);

const FLREUnicodeIgnoreCaseBlockBlocks175:array[0..0] of TFLREUnicodeCharRange=(
(66640,66687)
);

const FLREUnicodeIgnoreCaseBlockBlocks176:array[0..0] of TFLREUnicodeCharRange=(
(66688,66735)
);

const FLREUnicodeIgnoreCaseBlockBlocks177:array[0..0] of TFLREUnicodeCharRange=(
(66816,66863)
);

const FLREUnicodeIgnoreCaseBlockBlocks178:array[0..0] of TFLREUnicodeCharRange=(
(66864,66927)
);

const FLREUnicodeIgnoreCaseBlockBlocks179:array[0..0] of TFLREUnicodeCharRange=(
(67072,67455)
);

const FLREUnicodeIgnoreCaseBlockBlocks180:array[0..0] of TFLREUnicodeCharRange=(
(67584,67647)
);

const FLREUnicodeIgnoreCaseBlockBlocks181:array[0..0] of TFLREUnicodeCharRange=(
(67648,67679)
);

const FLREUnicodeIgnoreCaseBlockBlocks182:array[0..0] of TFLREUnicodeCharRange=(
(67680,67711)
);

const FLREUnicodeIgnoreCaseBlockBlocks183:array[0..0] of TFLREUnicodeCharRange=(
(67712,67759)
);

const FLREUnicodeIgnoreCaseBlockBlocks184:array[0..0] of TFLREUnicodeCharRange=(
(67808,67839)
);

const FLREUnicodeIgnoreCaseBlockBlocks185:array[0..0] of TFLREUnicodeCharRange=(
(67840,67871)
);

const FLREUnicodeIgnoreCaseBlockBlocks186:array[0..0] of TFLREUnicodeCharRange=(
(67872,67903)
);

const FLREUnicodeIgnoreCaseBlockBlocks187:array[0..0] of TFLREUnicodeCharRange=(
(67968,67999)
);

const FLREUnicodeIgnoreCaseBlockBlocks188:array[0..0] of TFLREUnicodeCharRange=(
(68000,68095)
);

const FLREUnicodeIgnoreCaseBlockBlocks189:array[0..0] of TFLREUnicodeCharRange=(
(68096,68191)
);

const FLREUnicodeIgnoreCaseBlockBlocks190:array[0..0] of TFLREUnicodeCharRange=(
(68192,68223)
);

const FLREUnicodeIgnoreCaseBlockBlocks191:array[0..0] of TFLREUnicodeCharRange=(
(68224,68255)
);

const FLREUnicodeIgnoreCaseBlockBlocks192:array[0..0] of TFLREUnicodeCharRange=(
(68288,68351)
);

const FLREUnicodeIgnoreCaseBlockBlocks193:array[0..0] of TFLREUnicodeCharRange=(
(68352,68415)
);

const FLREUnicodeIgnoreCaseBlockBlocks194:array[0..0] of TFLREUnicodeCharRange=(
(68416,68447)
);

const FLREUnicodeIgnoreCaseBlockBlocks195:array[0..0] of TFLREUnicodeCharRange=(
(68448,68479)
);

const FLREUnicodeIgnoreCaseBlockBlocks196:array[0..0] of TFLREUnicodeCharRange=(
(68480,68527)
);

const FLREUnicodeIgnoreCaseBlockBlocks197:array[0..0] of TFLREUnicodeCharRange=(
(68608,68687)
);

const FLREUnicodeIgnoreCaseBlockBlocks198:array[0..0] of TFLREUnicodeCharRange=(
(68736,68863)
);

const FLREUnicodeIgnoreCaseBlockBlocks199:array[0..0] of TFLREUnicodeCharRange=(
(69216,69247)
);

const FLREUnicodeIgnoreCaseBlockBlocks200:array[0..0] of TFLREUnicodeCharRange=(
(69632,69759)
);

const FLREUnicodeIgnoreCaseBlockBlocks201:array[0..0] of TFLREUnicodeCharRange=(
(69760,69839)
);

const FLREUnicodeIgnoreCaseBlockBlocks202:array[0..0] of TFLREUnicodeCharRange=(
(69840,69887)
);

const FLREUnicodeIgnoreCaseBlockBlocks203:array[0..0] of TFLREUnicodeCharRange=(
(69888,69967)
);

const FLREUnicodeIgnoreCaseBlockBlocks204:array[0..0] of TFLREUnicodeCharRange=(
(69968,70015)
);

const FLREUnicodeIgnoreCaseBlockBlocks205:array[0..0] of TFLREUnicodeCharRange=(
(70016,70111)
);

const FLREUnicodeIgnoreCaseBlockBlocks206:array[0..0] of TFLREUnicodeCharRange=(
(70112,70143)
);

const FLREUnicodeIgnoreCaseBlockBlocks207:array[0..0] of TFLREUnicodeCharRange=(
(70144,70223)
);

const FLREUnicodeIgnoreCaseBlockBlocks208:array[0..0] of TFLREUnicodeCharRange=(
(70272,70319)
);

const FLREUnicodeIgnoreCaseBlockBlocks209:array[0..0] of TFLREUnicodeCharRange=(
(70320,70399)
);

const FLREUnicodeIgnoreCaseBlockBlocks210:array[0..0] of TFLREUnicodeCharRange=(
(70400,70527)
);

const FLREUnicodeIgnoreCaseBlockBlocks211:array[0..0] of TFLREUnicodeCharRange=(
(70784,70879)
);

const FLREUnicodeIgnoreCaseBlockBlocks212:array[0..0] of TFLREUnicodeCharRange=(
(71040,71167)
);

const FLREUnicodeIgnoreCaseBlockBlocks213:array[0..0] of TFLREUnicodeCharRange=(
(71168,71263)
);

const FLREUnicodeIgnoreCaseBlockBlocks214:array[0..0] of TFLREUnicodeCharRange=(
(71296,71375)
);

const FLREUnicodeIgnoreCaseBlockBlocks215:array[0..0] of TFLREUnicodeCharRange=(
(71424,71487)
);

const FLREUnicodeIgnoreCaseBlockBlocks216:array[0..0] of TFLREUnicodeCharRange=(
(71840,71935)
);

const FLREUnicodeIgnoreCaseBlockBlocks217:array[0..0] of TFLREUnicodeCharRange=(
(72384,72447)
);

const FLREUnicodeIgnoreCaseBlockBlocks218:array[0..0] of TFLREUnicodeCharRange=(
(73728,74751)
);

const FLREUnicodeIgnoreCaseBlockBlocks219:array[0..0] of TFLREUnicodeCharRange=(
(74752,74879)
);

const FLREUnicodeIgnoreCaseBlockBlocks220:array[0..0] of TFLREUnicodeCharRange=(
(74880,75087)
);

const FLREUnicodeIgnoreCaseBlockBlocks221:array[0..0] of TFLREUnicodeCharRange=(
(77824,78895)
);

const FLREUnicodeIgnoreCaseBlockBlocks222:array[0..0] of TFLREUnicodeCharRange=(
(82944,83583)
);

const FLREUnicodeIgnoreCaseBlockBlocks223:array[0..0] of TFLREUnicodeCharRange=(
(92160,92735)
);

const FLREUnicodeIgnoreCaseBlockBlocks224:array[0..0] of TFLREUnicodeCharRange=(
(92736,92783)
);

const FLREUnicodeIgnoreCaseBlockBlocks225:array[0..0] of TFLREUnicodeCharRange=(
(92880,92927)
);

const FLREUnicodeIgnoreCaseBlockBlocks226:array[0..0] of TFLREUnicodeCharRange=(
(92928,93071)
);

const FLREUnicodeIgnoreCaseBlockBlocks227:array[0..0] of TFLREUnicodeCharRange=(
(93952,94111)
);

const FLREUnicodeIgnoreCaseBlockBlocks228:array[0..0] of TFLREUnicodeCharRange=(
(110592,110847)
);

const FLREUnicodeIgnoreCaseBlockBlocks229:array[0..0] of TFLREUnicodeCharRange=(
(113664,113823)
);

const FLREUnicodeIgnoreCaseBlockBlocks230:array[0..0] of TFLREUnicodeCharRange=(
(113824,113839)
);

const FLREUnicodeIgnoreCaseBlockBlocks231:array[0..0] of TFLREUnicodeCharRange=(
(118784,119039)
);

const FLREUnicodeIgnoreCaseBlockBlocks232:array[0..0] of TFLREUnicodeCharRange=(
(119040,119295)
);

const FLREUnicodeIgnoreCaseBlockBlocks233:array[0..0] of TFLREUnicodeCharRange=(
(119296,119375)
);

const FLREUnicodeIgnoreCaseBlockBlocks234:array[0..0] of TFLREUnicodeCharRange=(
(119552,119647)
);

const FLREUnicodeIgnoreCaseBlockBlocks235:array[0..0] of TFLREUnicodeCharRange=(
(119648,119679)
);

const FLREUnicodeIgnoreCaseBlockBlocks236:array[0..0] of TFLREUnicodeCharRange=(
(119808,120831)
);

const FLREUnicodeIgnoreCaseBlockBlocks237:array[0..0] of TFLREUnicodeCharRange=(
(120832,121519)
);

const FLREUnicodeIgnoreCaseBlockBlocks238:array[0..0] of TFLREUnicodeCharRange=(
(124928,125151)
);

const FLREUnicodeIgnoreCaseBlockBlocks239:array[0..0] of TFLREUnicodeCharRange=(
(126464,126719)
);

const FLREUnicodeIgnoreCaseBlockBlocks240:array[0..0] of TFLREUnicodeCharRange=(
(126976,127023)
);

const FLREUnicodeIgnoreCaseBlockBlocks241:array[0..0] of TFLREUnicodeCharRange=(
(127024,127135)
);

const FLREUnicodeIgnoreCaseBlockBlocks242:array[0..0] of TFLREUnicodeCharRange=(
(127136,127231)
);

const FLREUnicodeIgnoreCaseBlockBlocks243:array[0..0] of TFLREUnicodeCharRange=(
(127232,127487)
);

const FLREUnicodeIgnoreCaseBlockBlocks244:array[0..0] of TFLREUnicodeCharRange=(
(127488,127743)
);

const FLREUnicodeIgnoreCaseBlockBlocks245:array[0..0] of TFLREUnicodeCharRange=(
(127744,128511)
);

const FLREUnicodeIgnoreCaseBlockBlocks246:array[0..0] of TFLREUnicodeCharRange=(
(128512,128591)
);

const FLREUnicodeIgnoreCaseBlockBlocks247:array[0..0] of TFLREUnicodeCharRange=(
(128592,128639)
);

const FLREUnicodeIgnoreCaseBlockBlocks248:array[0..0] of TFLREUnicodeCharRange=(
(128640,128767)
);

const FLREUnicodeIgnoreCaseBlockBlocks249:array[0..0] of TFLREUnicodeCharRange=(
(128768,128895)
);

const FLREUnicodeIgnoreCaseBlockBlocks250:array[0..0] of TFLREUnicodeCharRange=(
(128896,129023)
);

const FLREUnicodeIgnoreCaseBlockBlocks251:array[0..0] of TFLREUnicodeCharRange=(
(129024,129279)
);

const FLREUnicodeIgnoreCaseBlockBlocks252:array[0..0] of TFLREUnicodeCharRange=(
(129280,129535)
);

const FLREUnicodeIgnoreCaseBlockBlocks253:array[0..0] of TFLREUnicodeCharRange=(
(131072,173791)
);

const FLREUnicodeIgnoreCaseBlockBlocks254:array[0..0] of TFLREUnicodeCharRange=(
(173824,177983)
);

const FLREUnicodeIgnoreCaseBlockBlocks255:array[0..0] of TFLREUnicodeCharRange=(
(177984,178207)
);

const FLREUnicodeIgnoreCaseBlockBlocks256:array[0..0] of TFLREUnicodeCharRange=(
(178208,183983)
);

const FLREUnicodeIgnoreCaseBlockBlocks257:array[0..0] of TFLREUnicodeCharRange=(
(194560,195103)
);

const FLREUnicodeIgnoreCaseBlockBlocks258:array[0..0] of TFLREUnicodeCharRange=(
(917504,917631)
);

const FLREUnicodeIgnoreCaseBlockBlocks259:array[0..0] of TFLREUnicodeCharRange=(
(917760,917999)
);

const FLREUnicodeIgnoreCaseBlockBlocks260:array[0..0] of TFLREUnicodeCharRange=(
(983040,1048575)
);

const FLREUnicodeIgnoreCaseBlockBlocks261:array[0..0] of TFLREUnicodeCharRange=(
(1048576,1114111)
);

const FLREUnicodeIgnoreCaseBlockBlocksData:array[0..261] of pointer=(
@FLREUnicodeIgnoreCaseBlockBlocks0,
@FLREUnicodeIgnoreCaseBlockBlocks1,
@FLREUnicodeIgnoreCaseBlockBlocks2,
@FLREUnicodeIgnoreCaseBlockBlocks3,
@FLREUnicodeIgnoreCaseBlockBlocks4,
@FLREUnicodeIgnoreCaseBlockBlocks5,
@FLREUnicodeIgnoreCaseBlockBlocks6,
@FLREUnicodeIgnoreCaseBlockBlocks7,
@FLREUnicodeIgnoreCaseBlockBlocks8,
@FLREUnicodeIgnoreCaseBlockBlocks9,
@FLREUnicodeIgnoreCaseBlockBlocks10,
@FLREUnicodeIgnoreCaseBlockBlocks11,
@FLREUnicodeIgnoreCaseBlockBlocks12,
@FLREUnicodeIgnoreCaseBlockBlocks13,
@FLREUnicodeIgnoreCaseBlockBlocks14,
@FLREUnicodeIgnoreCaseBlockBlocks15,
@FLREUnicodeIgnoreCaseBlockBlocks16,
@FLREUnicodeIgnoreCaseBlockBlocks17,
@FLREUnicodeIgnoreCaseBlockBlocks18,
@FLREUnicodeIgnoreCaseBlockBlocks19,
@FLREUnicodeIgnoreCaseBlockBlocks20,
@FLREUnicodeIgnoreCaseBlockBlocks21,
@FLREUnicodeIgnoreCaseBlockBlocks22,
@FLREUnicodeIgnoreCaseBlockBlocks23,
@FLREUnicodeIgnoreCaseBlockBlocks24,
@FLREUnicodeIgnoreCaseBlockBlocks25,
@FLREUnicodeIgnoreCaseBlockBlocks26,
@FLREUnicodeIgnoreCaseBlockBlocks27,
@FLREUnicodeIgnoreCaseBlockBlocks28,
@FLREUnicodeIgnoreCaseBlockBlocks29,
@FLREUnicodeIgnoreCaseBlockBlocks30,
@FLREUnicodeIgnoreCaseBlockBlocks31,
@FLREUnicodeIgnoreCaseBlockBlocks32,
@FLREUnicodeIgnoreCaseBlockBlocks33,
@FLREUnicodeIgnoreCaseBlockBlocks34,
@FLREUnicodeIgnoreCaseBlockBlocks35,
@FLREUnicodeIgnoreCaseBlockBlocks36,
@FLREUnicodeIgnoreCaseBlockBlocks37,
@FLREUnicodeIgnoreCaseBlockBlocks38,
@FLREUnicodeIgnoreCaseBlockBlocks39,
@FLREUnicodeIgnoreCaseBlockBlocks40,
@FLREUnicodeIgnoreCaseBlockBlocks41,
@FLREUnicodeIgnoreCaseBlockBlocks42,
@FLREUnicodeIgnoreCaseBlockBlocks43,
@FLREUnicodeIgnoreCaseBlockBlocks44,
@FLREUnicodeIgnoreCaseBlockBlocks45,
@FLREUnicodeIgnoreCaseBlockBlocks46,
@FLREUnicodeIgnoreCaseBlockBlocks47,
@FLREUnicodeIgnoreCaseBlockBlocks48,
@FLREUnicodeIgnoreCaseBlockBlocks49,
@FLREUnicodeIgnoreCaseBlockBlocks50,
@FLREUnicodeIgnoreCaseBlockBlocks51,
@FLREUnicodeIgnoreCaseBlockBlocks52,
@FLREUnicodeIgnoreCaseBlockBlocks53,
@FLREUnicodeIgnoreCaseBlockBlocks54,
@FLREUnicodeIgnoreCaseBlockBlocks55,
@FLREUnicodeIgnoreCaseBlockBlocks56,
@FLREUnicodeIgnoreCaseBlockBlocks57,
@FLREUnicodeIgnoreCaseBlockBlocks58,
@FLREUnicodeIgnoreCaseBlockBlocks59,
@FLREUnicodeIgnoreCaseBlockBlocks60,
@FLREUnicodeIgnoreCaseBlockBlocks61,
@FLREUnicodeIgnoreCaseBlockBlocks62,
@FLREUnicodeIgnoreCaseBlockBlocks63,
@FLREUnicodeIgnoreCaseBlockBlocks64,
@FLREUnicodeIgnoreCaseBlockBlocks65,
@FLREUnicodeIgnoreCaseBlockBlocks66,
@FLREUnicodeIgnoreCaseBlockBlocks67,
@FLREUnicodeIgnoreCaseBlockBlocks68,
@FLREUnicodeIgnoreCaseBlockBlocks69,
@FLREUnicodeIgnoreCaseBlockBlocks70,
@FLREUnicodeIgnoreCaseBlockBlocks71,
@FLREUnicodeIgnoreCaseBlockBlocks72,
@FLREUnicodeIgnoreCaseBlockBlocks73,
@FLREUnicodeIgnoreCaseBlockBlocks74,
@FLREUnicodeIgnoreCaseBlockBlocks75,
@FLREUnicodeIgnoreCaseBlockBlocks76,
@FLREUnicodeIgnoreCaseBlockBlocks77,
@FLREUnicodeIgnoreCaseBlockBlocks78,
@FLREUnicodeIgnoreCaseBlockBlocks79,
@FLREUnicodeIgnoreCaseBlockBlocks80,
@FLREUnicodeIgnoreCaseBlockBlocks81,
@FLREUnicodeIgnoreCaseBlockBlocks82,
@FLREUnicodeIgnoreCaseBlockBlocks83,
@FLREUnicodeIgnoreCaseBlockBlocks84,
@FLREUnicodeIgnoreCaseBlockBlocks85,
@FLREUnicodeIgnoreCaseBlockBlocks86,
@FLREUnicodeIgnoreCaseBlockBlocks87,
@FLREUnicodeIgnoreCaseBlockBlocks88,
@FLREUnicodeIgnoreCaseBlockBlocks89,
@FLREUnicodeIgnoreCaseBlockBlocks90,
@FLREUnicodeIgnoreCaseBlockBlocks91,
@FLREUnicodeIgnoreCaseBlockBlocks92,
@FLREUnicodeIgnoreCaseBlockBlocks93,
@FLREUnicodeIgnoreCaseBlockBlocks94,
@FLREUnicodeIgnoreCaseBlockBlocks95,
@FLREUnicodeIgnoreCaseBlockBlocks96,
@FLREUnicodeIgnoreCaseBlockBlocks97,
@FLREUnicodeIgnoreCaseBlockBlocks98,
@FLREUnicodeIgnoreCaseBlockBlocks99,
@FLREUnicodeIgnoreCaseBlockBlocks100,
@FLREUnicodeIgnoreCaseBlockBlocks101,
@FLREUnicodeIgnoreCaseBlockBlocks102,
@FLREUnicodeIgnoreCaseBlockBlocks103,
@FLREUnicodeIgnoreCaseBlockBlocks104,
@FLREUnicodeIgnoreCaseBlockBlocks105,
@FLREUnicodeIgnoreCaseBlockBlocks106,
@FLREUnicodeIgnoreCaseBlockBlocks107,
@FLREUnicodeIgnoreCaseBlockBlocks108,
@FLREUnicodeIgnoreCaseBlockBlocks109,
@FLREUnicodeIgnoreCaseBlockBlocks110,
@FLREUnicodeIgnoreCaseBlockBlocks111,
@FLREUnicodeIgnoreCaseBlockBlocks112,
@FLREUnicodeIgnoreCaseBlockBlocks113,
@FLREUnicodeIgnoreCaseBlockBlocks114,
@FLREUnicodeIgnoreCaseBlockBlocks115,
@FLREUnicodeIgnoreCaseBlockBlocks116,
@FLREUnicodeIgnoreCaseBlockBlocks117,
@FLREUnicodeIgnoreCaseBlockBlocks118,
@FLREUnicodeIgnoreCaseBlockBlocks119,
@FLREUnicodeIgnoreCaseBlockBlocks120,
@FLREUnicodeIgnoreCaseBlockBlocks121,
@FLREUnicodeIgnoreCaseBlockBlocks122,
@FLREUnicodeIgnoreCaseBlockBlocks123,
@FLREUnicodeIgnoreCaseBlockBlocks124,
@FLREUnicodeIgnoreCaseBlockBlocks125,
@FLREUnicodeIgnoreCaseBlockBlocks126,
@FLREUnicodeIgnoreCaseBlockBlocks127,
@FLREUnicodeIgnoreCaseBlockBlocks128,
@FLREUnicodeIgnoreCaseBlockBlocks129,
@FLREUnicodeIgnoreCaseBlockBlocks130,
@FLREUnicodeIgnoreCaseBlockBlocks131,
@FLREUnicodeIgnoreCaseBlockBlocks132,
@FLREUnicodeIgnoreCaseBlockBlocks133,
@FLREUnicodeIgnoreCaseBlockBlocks134,
@FLREUnicodeIgnoreCaseBlockBlocks135,
@FLREUnicodeIgnoreCaseBlockBlocks136,
@FLREUnicodeIgnoreCaseBlockBlocks137,
@FLREUnicodeIgnoreCaseBlockBlocks138,
@FLREUnicodeIgnoreCaseBlockBlocks139,
@FLREUnicodeIgnoreCaseBlockBlocks140,
@FLREUnicodeIgnoreCaseBlockBlocks141,
@FLREUnicodeIgnoreCaseBlockBlocks142,
@FLREUnicodeIgnoreCaseBlockBlocks143,
@FLREUnicodeIgnoreCaseBlockBlocks144,
@FLREUnicodeIgnoreCaseBlockBlocks145,
@FLREUnicodeIgnoreCaseBlockBlocks146,
@FLREUnicodeIgnoreCaseBlockBlocks147,
@FLREUnicodeIgnoreCaseBlockBlocks148,
@FLREUnicodeIgnoreCaseBlockBlocks149,
@FLREUnicodeIgnoreCaseBlockBlocks150,
@FLREUnicodeIgnoreCaseBlockBlocks151,
@FLREUnicodeIgnoreCaseBlockBlocks152,
@FLREUnicodeIgnoreCaseBlockBlocks153,
@FLREUnicodeIgnoreCaseBlockBlocks154,
@FLREUnicodeIgnoreCaseBlockBlocks155,
@FLREUnicodeIgnoreCaseBlockBlocks156,
@FLREUnicodeIgnoreCaseBlockBlocks157,
@FLREUnicodeIgnoreCaseBlockBlocks158,
@FLREUnicodeIgnoreCaseBlockBlocks159,
@FLREUnicodeIgnoreCaseBlockBlocks160,
@FLREUnicodeIgnoreCaseBlockBlocks161,
@FLREUnicodeIgnoreCaseBlockBlocks162,
@FLREUnicodeIgnoreCaseBlockBlocks163,
@FLREUnicodeIgnoreCaseBlockBlocks164,
@FLREUnicodeIgnoreCaseBlockBlocks165,
@FLREUnicodeIgnoreCaseBlockBlocks166,
@FLREUnicodeIgnoreCaseBlockBlocks167,
@FLREUnicodeIgnoreCaseBlockBlocks168,
@FLREUnicodeIgnoreCaseBlockBlocks169,
@FLREUnicodeIgnoreCaseBlockBlocks170,
@FLREUnicodeIgnoreCaseBlockBlocks171,
@FLREUnicodeIgnoreCaseBlockBlocks172,
@FLREUnicodeIgnoreCaseBlockBlocks173,
@FLREUnicodeIgnoreCaseBlockBlocks174,
@FLREUnicodeIgnoreCaseBlockBlocks175,
@FLREUnicodeIgnoreCaseBlockBlocks176,
@FLREUnicodeIgnoreCaseBlockBlocks177,
@FLREUnicodeIgnoreCaseBlockBlocks178,
@FLREUnicodeIgnoreCaseBlockBlocks179,
@FLREUnicodeIgnoreCaseBlockBlocks180,
@FLREUnicodeIgnoreCaseBlockBlocks181,
@FLREUnicodeIgnoreCaseBlockBlocks182,
@FLREUnicodeIgnoreCaseBlockBlocks183,
@FLREUnicodeIgnoreCaseBlockBlocks184,
@FLREUnicodeIgnoreCaseBlockBlocks185,
@FLREUnicodeIgnoreCaseBlockBlocks186,
@FLREUnicodeIgnoreCaseBlockBlocks187,
@FLREUnicodeIgnoreCaseBlockBlocks188,
@FLREUnicodeIgnoreCaseBlockBlocks189,
@FLREUnicodeIgnoreCaseBlockBlocks190,
@FLREUnicodeIgnoreCaseBlockBlocks191,
@FLREUnicodeIgnoreCaseBlockBlocks192,
@FLREUnicodeIgnoreCaseBlockBlocks193,
@FLREUnicodeIgnoreCaseBlockBlocks194,
@FLREUnicodeIgnoreCaseBlockBlocks195,
@FLREUnicodeIgnoreCaseBlockBlocks196,
@FLREUnicodeIgnoreCaseBlockBlocks197,
@FLREUnicodeIgnoreCaseBlockBlocks198,
@FLREUnicodeIgnoreCaseBlockBlocks199,
@FLREUnicodeIgnoreCaseBlockBlocks200,
@FLREUnicodeIgnoreCaseBlockBlocks201,
@FLREUnicodeIgnoreCaseBlockBlocks202,
@FLREUnicodeIgnoreCaseBlockBlocks203,
@FLREUnicodeIgnoreCaseBlockBlocks204,
@FLREUnicodeIgnoreCaseBlockBlocks205,
@FLREUnicodeIgnoreCaseBlockBlocks206,
@FLREUnicodeIgnoreCaseBlockBlocks207,
@FLREUnicodeIgnoreCaseBlockBlocks208,
@FLREUnicodeIgnoreCaseBlockBlocks209,
@FLREUnicodeIgnoreCaseBlockBlocks210,
@FLREUnicodeIgnoreCaseBlockBlocks211,
@FLREUnicodeIgnoreCaseBlockBlocks212,
@FLREUnicodeIgnoreCaseBlockBlocks213,
@FLREUnicodeIgnoreCaseBlockBlocks214,
@FLREUnicodeIgnoreCaseBlockBlocks215,
@FLREUnicodeIgnoreCaseBlockBlocks216,
@FLREUnicodeIgnoreCaseBlockBlocks217,
@FLREUnicodeIgnoreCaseBlockBlocks218,
@FLREUnicodeIgnoreCaseBlockBlocks219,
@FLREUnicodeIgnoreCaseBlockBlocks220,
@FLREUnicodeIgnoreCaseBlockBlocks221,
@FLREUnicodeIgnoreCaseBlockBlocks222,
@FLREUnicodeIgnoreCaseBlockBlocks223,
@FLREUnicodeIgnoreCaseBlockBlocks224,
@FLREUnicodeIgnoreCaseBlockBlocks225,
@FLREUnicodeIgnoreCaseBlockBlocks226,
@FLREUnicodeIgnoreCaseBlockBlocks227,
@FLREUnicodeIgnoreCaseBlockBlocks228,
@FLREUnicodeIgnoreCaseBlockBlocks229,
@FLREUnicodeIgnoreCaseBlockBlocks230,
@FLREUnicodeIgnoreCaseBlockBlocks231,
@FLREUnicodeIgnoreCaseBlockBlocks232,
@FLREUnicodeIgnoreCaseBlockBlocks233,
@FLREUnicodeIgnoreCaseBlockBlocks234,
@FLREUnicodeIgnoreCaseBlockBlocks235,
@FLREUnicodeIgnoreCaseBlockBlocks236,
@FLREUnicodeIgnoreCaseBlockBlocks237,
@FLREUnicodeIgnoreCaseBlockBlocks238,
@FLREUnicodeIgnoreCaseBlockBlocks239,
@FLREUnicodeIgnoreCaseBlockBlocks240,
@FLREUnicodeIgnoreCaseBlockBlocks241,
@FLREUnicodeIgnoreCaseBlockBlocks242,
@FLREUnicodeIgnoreCaseBlockBlocks243,
@FLREUnicodeIgnoreCaseBlockBlocks244,
@FLREUnicodeIgnoreCaseBlockBlocks245,
@FLREUnicodeIgnoreCaseBlockBlocks246,
@FLREUnicodeIgnoreCaseBlockBlocks247,
@FLREUnicodeIgnoreCaseBlockBlocks248,
@FLREUnicodeIgnoreCaseBlockBlocks249,
@FLREUnicodeIgnoreCaseBlockBlocks250,
@FLREUnicodeIgnoreCaseBlockBlocks251,
@FLREUnicodeIgnoreCaseBlockBlocks252,
@FLREUnicodeIgnoreCaseBlockBlocks253,
@FLREUnicodeIgnoreCaseBlockBlocks254,
@FLREUnicodeIgnoreCaseBlockBlocks255,
@FLREUnicodeIgnoreCaseBlockBlocks256,
@FLREUnicodeIgnoreCaseBlockBlocks257,
@FLREUnicodeIgnoreCaseBlockBlocks258,
@FLREUnicodeIgnoreCaseBlockBlocks259,
@FLREUnicodeIgnoreCaseBlockBlocks260,
@FLREUnicodeIgnoreCaseBlockBlocks261
);

const FLREUnicodeIgnoreCaseBlockBlocksCounts:array[0..261] of longint=(
1,
3,
4,
17,
21,
1,
2,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
4,
1,
1,
1,
2,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
3,
1,
1,
2,
2,
1,
1,
1,
1,
4,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
8,
1,
4,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
9,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
2,
2,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1,
1
);

const FLRECountUnicodeAdditionalBlocks=3;

const FLREUnicodeAdditionalBlocks0:array[0..161] of TFLREUnicodeCharRange=(
(45,59),
(65,91),
(95,123),
(183,184),
(192,306),
(308,319),
(321,452),
(461,497),
(500,502),
(506,536),
(592,681),
(699,706),
(720,722),
(768,838),
(864,866),
(902,983),
(986,1012),
(1025,1159),
(1168,1221),
(1223,1225),
(1227,1229),
(1232,1260),
(1262,1270),
(1272,1274),
(1329,1367),
(1369,1370),
(1377,1415),
(1425,1477),
(1488,1515),
(1520,1523),
(1569,1595),
(1600,1619),
(1632,1642),
(1648,1720),
(1722,1774),
(1776,1786),
(2305,2362),
(2364,2382),
(2385,2389),
(2392,2404),
(2406,2416),
(2433,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2492,2501),
(2503,2505),
(2507,2510),
(2519,2520),
(2524,2532),
(2534,2546),
(2562,2563),
(2565,2571),
(2575,2577),
(2579,2618),
(2620,2627),
(2631,2633),
(2635,2638),
(2649,2655),
(2662,2677),
(2689,2746),
(2748,2766),
(2784,2785),
(2790,2800),
(2817,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2876,2884),
(2887,2889),
(2891,2894),
(2902,2904),
(2908,2914),
(2918,2928),
(2946,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3006,3011),
(3014,3022),
(3031,3032),
(3047,3056),
(3073,3130),
(3134,3150),
(3157,3159),
(3168,3170),
(3174,3184),
(3202,3258),
(3262,3278),
(3285,3287),
(3294,3298),
(3302,3312),
(3330,3386),
(3390,3396),
(3398,3406),
(3415,3416),
(3424,3426),
(3430,3440),
(3585,3643),
(3648,3674),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3774),
(3776,3790),
(3792,3802),
(3864,3866),
(3872,3882),
(3893,3898),
(3902,3946),
(3953,3980),
(3984,4014),
(4017,4026),
(4256,4294),
(4304,4343),
(4352,4371),
(4412,4417),
(4428,4433),
(4436,4438),
(4441,4442),
(4447,4458),
(4461,4463),
(4466,4470),
(4510,4511),
(4520,4521),
(4523,4524),
(4526,4528),
(4535,4547),
(4587,4588),
(4592,4593),
(4601,4602),
(7680,7836),
(7840,7930),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8127),
(8130,8141),
(8144,8148),
(8150,8156),
(8160,8173),
(8178,8189),
(8400,8413),
(8417,8418),
(8486,8487),
(8490,8492),
(8494,8495),
(8576,8579),
(12293,12296),
(12321,12342),
(12353,12437),
(12441,12443),
(12445,12447),
(12449,12543),
(12549,12589),
(19968,40870),
(44032,55204)
);

const FLREUnicodeAdditionalBlocks1:array[0..19] of TFLREUnicodeCharRange=(
(48,58),
(1632,1642),
(1776,1786),
(2406,2416),
(2534,2544),
(2662,2672),
(2790,2800),
(2918,2928),
(3047,3056),
(3174,3184),
(3302,3312),
(3430,3440),
(3664,3674),
(3792,3802),
(3872,3882),
(4160,4170),
(4969,4978),
(6112,6122),
(6160,6170),
(65296,65306)
);

const FLREUnicodeAdditionalBlocks2:array[0..116] of TFLREUnicodeCharRange=(
(58,59),
(65,91),
(95,123),
(192,306),
(308,319),
(321,452),
(461,497),
(500,502),
(506,536),
(592,681),
(699,706),
(902,983),
(986,1012),
(1025,1154),
(1168,1221),
(1223,1225),
(1227,1229),
(1232,1260),
(1262,1270),
(1272,1274),
(1329,1367),
(1369,1370),
(1377,1415),
(1488,1515),
(1520,1523),
(1569,1595),
(1601,1611),
(1649,1720),
(1722,1750),
(1765,1767),
(2309,2362),
(2365,2366),
(2392,2402),
(2437,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2524,2530),
(2544,2546),
(2565,2571),
(2575,2577),
(2579,2618),
(2649,2655),
(2674,2677),
(2693,2746),
(2749,2750),
(2784,2785),
(2821,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2877,2878),
(2908,2914),
(2949,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3077,3130),
(3168,3170),
(3205,3258),
(3294,3298),
(3333,3386),
(3424,3426),
(3585,3636),
(3648,3654),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3764),
(3773,3774),
(3776,3781),
(3904,3946),
(4256,4294),
(4304,4343),
(4352,4371),
(4412,4417),
(4428,4433),
(4436,4438),
(4441,4442),
(4447,4458),
(4461,4463),
(4466,4470),
(4510,4511),
(4520,4521),
(4523,4524),
(4526,4528),
(4535,4547),
(4587,4588),
(4592,4593),
(4601,4602),
(7680,7836),
(7840,7930),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8127),
(8130,8141),
(8144,8148),
(8150,8156),
(8160,8173),
(8178,8189),
(8486,8487),
(8490,8492),
(8494,8495),
(8576,8579),
(12295,12296),
(12321,12330),
(12353,12437),
(12449,12539),
(12549,12589),
(19968,40870),
(44032,55204)
);

const FLREUnicodeAdditionalBlocks3:array[0..238] of TFLREUnicodeCharRange=(
(36,37),
(43,44),
(48,58),
(60,63),
(65,91),
(94,127),
(162,564),
(592,686),
(688,751),
(768,848),
(864,880),
(884,886),
(890,891),
(900,1015),
(1024,1270),
(1272,1274),
(1280,1296),
(1329,1367),
(1369,1370),
(1377,1416),
(1425,1477),
(1488,1515),
(1520,1523),
(1569,1595),
(1600,1622),
(1632,1642),
(1646,1774),
(1776,1791),
(1808,1837),
(1840,1867),
(1920,1970),
(2305,2362),
(2364,2382),
(2384,2389),
(2392,2404),
(2406,2416),
(2433,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2492,2501),
(2503,2505),
(2507,2510),
(2519,2520),
(2524,2532),
(2534,2555),
(2562,2563),
(2565,2571),
(2575,2577),
(2579,2618),
(2620,2627),
(2631,2633),
(2635,2638),
(2649,2655),
(2662,2677),
(2689,2746),
(2748,2766),
(2768,2769),
(2784,2785),
(2790,2800),
(2817,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2876,2884),
(2887,2889),
(2891,2894),
(2902,2904),
(2908,2914),
(2918,2929),
(2946,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3006,3011),
(3014,3022),
(3031,3032),
(3047,3059),
(3073,3130),
(3134,3150),
(3157,3159),
(3168,3170),
(3174,3184),
(3202,3258),
(3262,3278),
(3285,3287),
(3294,3298),
(3302,3312),
(3330,3386),
(3390,3396),
(3398,3406),
(3415,3416),
(3424,3426),
(3430,3440),
(3458,3479),
(3482,3518),
(3520,3527),
(3530,3531),
(3535,3552),
(3570,3572),
(3585,3643),
(3647,3674),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3774),
(3776,3790),
(3792,3802),
(3804,3806),
(3840,3844),
(3859,3898),
(3902,3947),
(3953,3980),
(3984,4045),
(4047,4048),
(4096,4147),
(4150,4154),
(4160,4170),
(4176,4186),
(4256,4294),
(4304,4345),
(4352,4442),
(4447,4515),
(4520,4602),
(4608,4686),
(4688,4702),
(4704,4750),
(4752,4790),
(4792,4806),
(4808,4886),
(4888,4955),
(4969,4989),
(5024,5109),
(5121,5741),
(5743,5751),
(5761,5787),
(5792,5867),
(5870,5873),
(5888,5909),
(5920,5941),
(5952,5972),
(5984,6004),
(6016,6100),
(6103,6104),
(6107,6109),
(6112,6122),
(6155,6158),
(6160,6170),
(6176,6264),
(6272,6314),
(7680,7836),
(7840,7930),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8148),
(8150,8176),
(8178,8191),
(8260,8261),
(8274,8275),
(8304,8306),
(8308,8317),
(8319,8333),
(8352,8370),
(8400,8427),
(8448,8507),
(8509,8524),
(8531,8580),
(8592,9001),
(9003,9140),
(9143,9167),
(9216,9255),
(9280,9291),
(9312,9748),
(9750,9854),
(9856,9866),
(9985,9994),
(9996,10067),
(10070,10079),
(10081,10088),
(10102,10133),
(10136,10175),
(10192,10214),
(10224,10627),
(10649,10712),
(10716,10748),
(10750,11008),
(11904,12020),
(12032,12246),
(12272,12284),
(12292,12296),
(12306,12308),
(12320,12439),
(12441,12544),
(12549,12589),
(12593,12728),
(12784,12829),
(12832,12868),
(12881,12924),
(12927,13004),
(13008,13175),
(13179,13278),
(13280,19894),
(19968,40870),
(40960,42125),
(42128,42183),
(44032,55204),
(63744,64046),
(64048,64107),
(64256,64263),
(64275,64280),
(64285,64434),
(64467,64830),
(64848,64912),
(64914,64968),
(65008,65021),
(65024,65040),
(65056,65060),
(65122,65127),
(65129,65130),
(65136,65277),
(65284,65285),
(65291,65292),
(65296,65306),
(65308,65311),
(65313,65339),
(65342,65375),
(65382,65471),
(65474,65480),
(65482,65488),
(65490,65496),
(65498,65501),
(65504,65519),
(65532,65534)
);

const FLREUnicodeAdditionalBlocksData:array[0..3] of pointer=(
@FLREUnicodeAdditionalBlocks0,
@FLREUnicodeAdditionalBlocks1,
@FLREUnicodeAdditionalBlocks2,
@FLREUnicodeAdditionalBlocks3
);

const FLREUnicodeAdditionalBlocksCounts:array[0..3] of longint=(
162,
20,
117,
239
);

const FLRECountUnicodeIgnoreCaseAdditionalBlocks=3;

const FLREUnicodeIgnoreCaseAdditionalBlocks0:array[0..167] of TFLREUnicodeCharRange=(
(45,59),
(65,91),
(95,123),
(183,184),
(192,452),
(454,454),
(461,497),
(499,503),
(506,537),
(544,544),
(573,573),
(579,581),
(592,681),
(699,706),
(720,722),
(768,838),
(864,866),
(895,895),
(902,983),
(986,1012),
(1017,1017),
(1024,1159),
(1168,1275),
(1329,1367),
(1369,1370),
(1377,1415),
(1425,1477),
(1488,1515),
(1520,1523),
(1569,1595),
(1600,1619),
(1632,1642),
(1648,1720),
(1722,1774),
(1776,1786),
(2305,2362),
(2364,2382),
(2385,2389),
(2392,2404),
(2406,2416),
(2433,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2492,2501),
(2503,2505),
(2507,2510),
(2519,2520),
(2524,2532),
(2534,2546),
(2562,2563),
(2565,2571),
(2575,2577),
(2579,2618),
(2620,2627),
(2631,2633),
(2635,2638),
(2649,2655),
(2662,2677),
(2689,2746),
(2748,2766),
(2784,2785),
(2790,2800),
(2817,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2876,2884),
(2887,2889),
(2891,2894),
(2902,2904),
(2908,2914),
(2918,2928),
(2946,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3006,3011),
(3014,3022),
(3031,3032),
(3047,3056),
(3073,3130),
(3134,3150),
(3157,3159),
(3168,3170),
(3174,3184),
(3202,3258),
(3262,3278),
(3285,3287),
(3294,3298),
(3302,3312),
(3330,3386),
(3390,3396),
(3398,3406),
(3415,3416),
(3424,3426),
(3430,3440),
(3585,3643),
(3648,3674),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3774),
(3776,3790),
(3792,3802),
(3864,3866),
(3872,3882),
(3893,3898),
(3902,3946),
(3953,3980),
(3984,4014),
(4017,4026),
(4256,4294),
(4304,4343),
(4352,4371),
(4412,4417),
(4428,4433),
(4436,4438),
(4441,4442),
(4447,4458),
(4461,4463),
(4466,4470),
(4510,4511),
(4520,4521),
(4523,4524),
(4526,4528),
(4535,4547),
(4587,4588),
(4592,4593),
(4601,4602),
(7680,7836),
(7840,7931),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8127),
(8130,8141),
(8144,8148),
(8150,8156),
(8160,8173),
(8178,8189),
(8400,8413),
(8417,8418),
(8486,8487),
(8490,8492),
(8494,8495),
(8576,8580),
(11362,11362),
(11364,11364),
(11373,11376),
(11520,11557),
(12293,12296),
(12321,12342),
(12353,12437),
(12441,12443),
(12445,12447),
(12449,12543),
(12549,12589),
(19968,40870),
(42893,42893),
(42922,42925),
(42928,42930),
(44032,55204)
);

const FLREUnicodeIgnoreCaseAdditionalBlocks1:array[0..19] of TFLREUnicodeCharRange=(
(48,58),
(1632,1642),
(1776,1786),
(2406,2416),
(2534,2544),
(2662,2672),
(2790,2800),
(2918,2928),
(3047,3056),
(3174,3184),
(3302,3312),
(3430,3440),
(3664,3674),
(3792,3802),
(3872,3882),
(4160,4170),
(4969,4978),
(6112,6122),
(6160,6170),
(65296,65306)
);

const FLREUnicodeIgnoreCaseAdditionalBlocks2:array[0..122] of TFLREUnicodeCharRange=(
(58,59),
(65,91),
(95,123),
(192,452),
(454,454),
(461,497),
(499,503),
(506,537),
(544,544),
(573,573),
(579,581),
(592,681),
(699,706),
(895,895),
(902,983),
(986,1012),
(1017,1017),
(1024,1154),
(1168,1275),
(1329,1367),
(1369,1370),
(1377,1415),
(1488,1515),
(1520,1523),
(1569,1595),
(1601,1611),
(1649,1720),
(1722,1750),
(1765,1767),
(2309,2362),
(2365,2366),
(2392,2402),
(2437,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2524,2530),
(2544,2546),
(2565,2571),
(2575,2577),
(2579,2618),
(2649,2655),
(2674,2677),
(2693,2746),
(2749,2750),
(2784,2785),
(2821,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2877,2878),
(2908,2914),
(2949,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3077,3130),
(3168,3170),
(3205,3258),
(3294,3298),
(3333,3386),
(3424,3426),
(3585,3636),
(3648,3654),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3764),
(3773,3774),
(3776,3781),
(3904,3946),
(4256,4294),
(4304,4343),
(4352,4371),
(4412,4417),
(4428,4433),
(4436,4438),
(4441,4442),
(4447,4458),
(4461,4463),
(4466,4470),
(4510,4511),
(4520,4521),
(4523,4524),
(4526,4528),
(4535,4547),
(4587,4588),
(4592,4593),
(4601,4602),
(7680,7836),
(7840,7931),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8127),
(8130,8141),
(8144,8148),
(8150,8156),
(8160,8173),
(8178,8189),
(8486,8487),
(8490,8492),
(8494,8495),
(8576,8580),
(11362,11362),
(11364,11364),
(11373,11376),
(11520,11557),
(12295,12296),
(12321,12330),
(12353,12437),
(12449,12539),
(12549,12589),
(19968,40870),
(42893,42893),
(42922,42925),
(42928,42930),
(44032,55204)
);

const FLREUnicodeIgnoreCaseAdditionalBlocks3:array[0..251] of TFLREUnicodeCharRange=(
(36,37),
(43,44),
(48,58),
(60,63),
(65,91),
(94,127),
(162,564),
(573,573),
(579,581),
(592,686),
(688,751),
(768,848),
(864,881),
(884,887),
(890,891),
(895,895),
(900,1017),
(1021,1021),
(1024,1275),
(1280,1297),
(1329,1367),
(1369,1370),
(1377,1416),
(1425,1477),
(1488,1515),
(1520,1523),
(1569,1595),
(1600,1622),
(1632,1642),
(1646,1774),
(1776,1791),
(1808,1837),
(1840,1867),
(1920,1970),
(2305,2362),
(2364,2382),
(2384,2389),
(2392,2404),
(2406,2416),
(2433,2445),
(2447,2449),
(2451,2483),
(2486,2490),
(2492,2501),
(2503,2505),
(2507,2510),
(2519,2520),
(2524,2532),
(2534,2555),
(2562,2563),
(2565,2571),
(2575,2577),
(2579,2618),
(2620,2627),
(2631,2633),
(2635,2638),
(2649,2655),
(2662,2677),
(2689,2746),
(2748,2766),
(2768,2769),
(2784,2785),
(2790,2800),
(2817,2829),
(2831,2833),
(2835,2868),
(2870,2874),
(2876,2884),
(2887,2889),
(2891,2894),
(2902,2904),
(2908,2914),
(2918,2929),
(2946,2955),
(2958,2966),
(2969,2976),
(2979,2981),
(2984,2987),
(2990,3002),
(3006,3011),
(3014,3022),
(3031,3032),
(3047,3059),
(3073,3130),
(3134,3150),
(3157,3159),
(3168,3170),
(3174,3184),
(3202,3258),
(3262,3278),
(3285,3287),
(3294,3298),
(3302,3312),
(3330,3386),
(3390,3396),
(3398,3406),
(3415,3416),
(3424,3426),
(3430,3440),
(3458,3479),
(3482,3518),
(3520,3527),
(3530,3531),
(3535,3552),
(3570,3572),
(3585,3643),
(3647,3674),
(3713,3717),
(3719,3723),
(3725,3726),
(3732,3752),
(3754,3774),
(3776,3790),
(3792,3802),
(3804,3806),
(3840,3844),
(3859,3898),
(3902,3947),
(3953,3980),
(3984,4045),
(4047,4048),
(4096,4147),
(4150,4154),
(4160,4170),
(4176,4186),
(4256,4294),
(4304,4345),
(4352,4442),
(4447,4515),
(4520,4602),
(4608,4686),
(4688,4702),
(4704,4750),
(4752,4790),
(4792,4806),
(4808,4886),
(4888,4955),
(4969,4989),
(5024,5109),
(5112,5117),
(5121,5741),
(5743,5751),
(5761,5787),
(5792,5867),
(5870,5873),
(5888,5909),
(5920,5941),
(5952,5972),
(5984,6004),
(6016,6100),
(6103,6104),
(6107,6109),
(6112,6122),
(6155,6158),
(6160,6170),
(6176,6264),
(6272,6314),
(7680,7836),
(7840,7931),
(7936,7958),
(7960,7966),
(7968,8006),
(8008,8014),
(8016,8062),
(8064,8148),
(8150,8176),
(8178,8191),
(8260,8261),
(8274,8275),
(8304,8306),
(8308,8317),
(8319,8333),
(8352,8370),
(8400,8427),
(8448,8507),
(8509,8524),
(8526,8526),
(8531,8580),
(8592,9001),
(9003,9140),
(9143,9167),
(9216,9255),
(9280,9291),
(9312,9748),
(9750,9854),
(9856,9866),
(9985,9994),
(9996,10067),
(10070,10079),
(10081,10088),
(10102,10133),
(10136,10175),
(10192,10214),
(10224,10627),
(10649,10712),
(10716,10748),
(10750,11008),
(11362,11362),
(11364,11364),
(11373,11376),
(11520,11557),
(11904,12020),
(12032,12246),
(12272,12284),
(12292,12296),
(12306,12308),
(12320,12439),
(12441,12544),
(12549,12589),
(12593,12728),
(12784,12829),
(12832,12868),
(12881,12924),
(12927,13004),
(13008,13175),
(13179,13278),
(13280,19894),
(19968,40870),
(40960,42125),
(42128,42183),
(42893,42893),
(42922,42925),
(42928,42930),
(43888,43967),
(44032,55204),
(63744,64046),
(64048,64107),
(64256,64263),
(64275,64280),
(64285,64434),
(64467,64830),
(64848,64912),
(64914,64968),
(65008,65021),
(65024,65040),
(65056,65060),
(65122,65127),
(65129,65130),
(65136,65277),
(65284,65285),
(65291,65292),
(65296,65306),
(65308,65311),
(65313,65339),
(65342,65375),
(65382,65471),
(65474,65480),
(65482,65488),
(65490,65496),
(65498,65501),
(65504,65519),
(65532,65534)
);

const FLREUnicodeIgnoreCaseAdditionalBlocksData:array[0..3] of pointer=(
@FLREUnicodeIgnoreCaseAdditionalBlocks0,
@FLREUnicodeIgnoreCaseAdditionalBlocks1,
@FLREUnicodeIgnoreCaseAdditionalBlocks2,
@FLREUnicodeIgnoreCaseAdditionalBlocks3
);

const FLREUnicodeIgnoreCaseAdditionalBlocksCounts:array[0..3] of longint=(
168,
20,
123,
252
);

const FLRELowerUpperCaseUnicodeCharClassSize=123;

      FLRELowerUpperCaseUnicodeCharClass:array[0..122,0..1] of longword=(
(65,90),
(97,122),
(181,181),
(192,214),
(216,222),
(224,246),
(248,311),
(313,328),
(330,396),
(398,410),
(412,425),
(428,441),
(444,445),
(447,447),
(452,495),
(497,544),
(546,563),
(570,596),
(598,599),
(601,601),
(603,604),
(608,609),
(611,611),
(613,614),
(616,617),
(619,620),
(623,623),
(625,626),
(629,629),
(637,637),
(640,640),
(643,643),
(647,652),
(658,658),
(669,670),
(837,837),
(880,883),
(886,887),
(891,893),
(895,895),
(902,902),
(904,906),
(908,908),
(910,911),
(913,929),
(931,943),
(945,977),
(981,1013),
(1015,1019),
(1021,1153),
(1162,1327),
(1329,1366),
(1377,1414),
(4256,4293),
(4295,4295),
(4301,4301),
(5024,5109),
(5112,5117),
(7545,7545),
(7549,7549),
(7680,7829),
(7835,7835),
(7838,7838),
(7840,7957),
(7960,7965),
(7968,8005),
(8008,8013),
(8017,8017),
(8019,8019),
(8021,8021),
(8023,8023),
(8025,8025),
(8027,8027),
(8029,8029),
(8031,8061),
(8064,8113),
(8115,8115),
(8120,8124),
(8126,8126),
(8131,8131),
(8136,8140),
(8144,8145),
(8152,8155),
(8160,8161),
(8165,8165),
(8168,8172),
(8179,8179),
(8184,8188),
(8486,8486),
(8490,8491),
(8498,8498),
(8526,8526),
(8544,8575),
(8579,8580),
(9398,9449),
(11264,11310),
(11312,11358),
(11360,11376),
(11378,11379),
(11381,11382),
(11390,11491),
(11499,11502),
(11506,11507),
(11520,11557),
(11559,11559),
(11565,11565),
(42560,42605),
(42624,42651),
(42786,42799),
(42802,42863),
(42873,42887),
(42891,42893),
(42896,42899),
(42902,42925),
(42928,42935),
(43859,43859),
(43888,43967),
(65313,65338),
(65345,65370),
(66560,66639),
(68736,68786),
(68800,68850),
(71840,71903)
);

const FLREUnicodeClassHashMapSeedSize=297;
      FLREUnicodeClassHashMapValueSize=297;
      FLREUnicodeClassHashMapSize=297;

      FLREUnicodeClassHashMapSeedBits=16;

      FLREUnicodeClassHashMapSeeds:array[0..296] of smallint=(
-297,
3,
-295,
0,
1,
0,
0,
-292,
-289,
0,
-286,
0,
0,
-285,
-283,
-282,
0,
0,
-281,
1,
-280,
-279,
-278,
0,
-275,
-273,
0,
-272,
0,
1,
0,
2,
-269,
0,
2,
-265,
0,
-262,
1,
0,
0,
0,
0,
-260,
0,
-257,
1,
1,
-256,
-255,
-254,
1,
1,
-251,
-247,
0,
-246,
1,
-245,
-243,
-241,
-236,
0,
-235,
0,
1,
-234,
0,
1,
0,
0,
-233,
0,
0,
0,
0,
0,
1,
-232,
0,
-231,
-229,
0,
1,
-228,
1,
0,
1,
5,
1,
-227,
0,
0,
-224,
1,
1,
4,
1,
-223,
-218,
-216,
2,
5,
1,
0,
1,
-212,
1,
-211,
0,
1,
2,
1,
-210,
0,
-205,
1,
3,
-204,
1,
-203,
1,
-197,
-181,
-177,
2,
3,
-176,
0,
-165,
-164,
1,
-163,
0,
0,
-162,
-161,
13,
1,
0,
-156,
0,
-154,
0,
1,
-152,
0,
0,
-150,
1,
0,
-143,
0,
-136,
0,
0,
9,
0,
1,
-134,
0,
0,
0,
-131,
-129,
3,
2,
3,
2,
-127,
0,
0,
-126,
2,
-125,
-123,
-122,
0,
0,
-121,
0,
-120,
8,
0,
-117,
0,
0,
-116,
-114,
0,
0,
0,
5,
0,
0,
0,
3,
0,
-113,
0,
-112,
2,
-109,
1,
2,
0,
-106,
-105,
-104,
0,
0,
6,
0,
0,
-101,
-98,
-95,
1,
-90,
1,
11,
0,
0,
0,
0,
3,
0,
0,
1,
-88,
-86,
1,
-85,
0,
-82,
-81,
1,
-79,
-75,
7,
-70,
0,
29,
0,
-69,
-66,
3,
-65,
-60,
-57,
0,
-56,
-52,
-48,
-47,
-45,
0,
0,
1,
-42,
0,
-35,
-33,
0,
0,
0,
0,
0,
0,
-31,
-29,
0,
0,
-27,
5,
-18,
0,
0,
4,
1,
-17,
0,
0,
-16,
0,
-15,
4,
0,
-13,
3,
-12,
0,
-9,
0,
-7,
0,
-1
);

      FLREUnicodeClassHashMapKeys:array[0..296] of TFLRERawByteString=(
'IsConnectorPunctuation',
'Me',
'InSpace_Separator',
'InLm',
'IsModifierLetter',
'CurrencySymbol',
'Pi',
'InSurrogate',
'Po',
'Currency_Symbol',
'InNumber',
'InPunctuation',
'Ps',
'Sc',
'IsLine_Separator',
'InOther_Number',
'OtherPunctuation',
'Cc',
'IsConnector_Punctuation',
'InDashPunctuation',
'IsLineSeparator',
'InTitlecase_Letter',
'InOther_Symbol',
'Sm',
'InOtherSymbol',
'So',
'IsTitlecase_Letter',
'InSk',
'Cf',
'IsSurrogate',
'OtherLetter',
'InZs',
'IsInitial_Punctuation',
'IsOpenPunctuation',
'IsFinal_Punctuation',
'InSc',
'Control',
'InNonSpacingMark',
'InMath_Symbol',
'IsM',
'IsL',
'Cs',
'InOther_Punctuation',
'OpenPunctuation',
'IsModifier_Letter',
'IsLetterNumber',
'InNd',
'Letter_Number',
'IsUppercase_Letter',
'IsSpacingCombiningMark',
'IsEnclosingMark',
'InZl',
'InInitial_Punctuation',
'Other_Symbol',
'Other',
'InS',
'InClosePunctuation',
'InTitlecaseLetter',
'IsZ',
'InP',
'MathSymbol',
'InCurrency_Symbol',
'LowercaseLetter',
'IsSeperator',
'IsDashPunctuation',
'InNo',
'IsParagraphSeparator',
'IsFinalPunctuation',
'InOtherNumber',
'InZp',
'IsNd',
'IsControl',
'InSpacing_Combining_Mark',
'DecimalDigitNumber',
'InN',
'InLine_Separator',
'InOtherLetter',
'Final_Punctuation',
'InM',
'IsMath_Symbol',
'InC',
'InParagraph_Separator',
'IsSymbol',
'Modifier_Symbol',
'InSo',
'InSm',
'Connector_Punctuation',
'OtherSymbol',
'IsNo',
'IsCurrency_Symbol',
'IsLo',
'IsNl',
'IsLm',
'ClosePunctuation',
'InOpenPunctuation',
'InClose_Punctuation',
'InOtherPunctuation',
'IsSk',
'InLowercase_Letter',
'Lo',
'IsClosePunctuation',
'IsNumber',
'IsOther_Punctuation',
'IsOther_Symbol',
'IsSc',
'InUppercase_Letter',
'InParagraphSeparator',
'Punctuation',
'IsDash_Punctuation',
'OtherNumber',
'IsOther_Letter',
'Non_Spacing_Mark',
'InFinal_Punctuation',
'IsPunctuation',
'Sk',
'IsFormat',
'InLo',
'InOpen_Punctuation',
'IsMathSymbol',
'InLl',
'IsPrivateUse',
'EnclosingMark',
'InDecimal_Digit_Number',
'IsOther',
'InLu',
'InMe',
'Initial_Punctuation',
'UppercaseLetter',
'Surrogate',
'Space_Separator',
'InMn',
'IsOpen_Punctuation',
'IsOtherLetter',
'IsLt',
'InLetterNumber',
'IsSpacing_Combining_Mark',
'Other_Punctuation',
'InPrivateUse',
'Decimal_Digit_Number',
'IsPrivate_Use',
'InL',
'IsSm',
'IsTitlecaseLetter',
'IsSo',
'InUnassigned',
'InitialPunctuation',
'IsCurrencySymbol',
'Nd',
'IsModifier_Symbol',
'Lu',
'IsSpaceSeparator',
'Lowercase_Letter',
'ParagraphSeparator',
'InConnectorPunctuation',
'InZ',
'SpaceSeparator',
'IsModifierSymbol',
'IsS',
'Symbol',
'Spacing_Combining_Mark',
'IsOtherSymbol',
'IsParagraph_Separator',
'InPc',
'InCurrencySymbol',
'InLetter_Number',
'InCo',
'Zs',
'InCn',
'InSpacingCombiningMark',
'Zp',
'IsCn',
'IsCo',
'Private_Use',
'Pe',
'Unassigned',
'InPf',
'Lm',
'InMc',
'IsCf',
'InPs',
'Zl',
'IsMe',
'LineSeparator',
'IsMc',
'IsLowercase_Letter',
'Titlecase_Letter',
'InSeperator',
'Uppercase_Letter',
'InEnclosing_Mark',
'Cn',
'IsZp',
'InInitialPunctuation',
'Dash_Punctuation',
'IsZs',
'IsZl',
'InLowercaseLetter',
'InPi',
'Co',
'TitlecaseLetter',
'IsCs',
'ConnectorPunctuation',
'Modifier_Letter',
'InPo',
'IsDecimalDigitNumber',
'InDecimalDigitNumber',
'IsSpace_Separator',
'InMark',
'FinalPunctuation',
'InNl',
'InCs',
'IsOther_Number',
'Mn',
'InConnector_Punctuation',
'InFormat',
'InSpaceSeparator',
'IsInitialPunctuation',
'InPrivate_Use',
'IsP',
'Number',
'Pf',
'InLineSeparator',
'IsLl',
'Open_Punctuation',
'IsN',
'InCc',
'InSymbol',
'Math_Symbol',
'IsMn',
'PrivateUse',
'InCf',
'IsC',
'SpacingCombiningMark',
'ModifierSymbol',
'Seperator',
'IsPs',
'InUppercaseLetter',
'Lt',
'Format',
'IsUnassigned',
'Mc',
'InOther',
'C',
'Mark',
'InLt',
'IsUppercaseLetter',
'DashPunctuation',
'InModifier_Symbol',
'IsDecimal_Digit_Number',
'IsPf',
'NonSpacingMark',
'LetterNumber',
'IsPc',
'Other_Number',
'IsPd',
'IsPe',
'Close_Punctuation',
'InEnclosingMark',
'InFinalPunctuation',
'Ll',
'IsPo',
'IsMark',
'IsPi',
'InDash_Punctuation',
'IsOtherPunctuation',
'IsCc',
'InPd',
'ModifierLetter',
'Paragraph_Separator',
'IsNon_Spacing_Mark',
'Enclosing_Mark',
'IsLetter_Number',
'Nl',
'IsEnclosing_Mark',
'Line_Separator',
'No',
'IsNonSpacingMark',
'InModifier_Letter',
'L',
'M',
'N',
'P',
'S',
'Other_Letter',
'InOther_Letter',
'InModifierLetter',
'IsOtherNumber',
'InMathSymbol',
'InControl',
'Z',
'IsLowercaseLetter',
'InPe',
'Pc',
'InNon_Spacing_Mark',
'IsLu',
'Pd',
'InModifierSymbol',
'IsClose_Punctuation'
);

      FLREUnicodeClassHashMapValueBits=32;

      FLREUnicodeClassHashMapValues:array[0..296] of longword=(
4194304,
128,
4096,
16,
16,
33554432,
268435456,
262144,
8388608,
33554432,
3584,
821559296,
1048576,
33554432,
8192,
2048,
8388608,
32768,
4194304,
524288,
8192,
8,
134217728,
16777216,
134217728,
134217728,
8,
67108864,
65536,
262144,
32,
4096,
268435456,
1048576,
536870912,
33554432,
32768,
64,
16777216,
448,
62,
262144,
8388608,
1048576,
16,
1024,
512,
1024,
2,
256,
128,
8192,
268435456,
134217728,
491521,
251658240,
2097152,
8,
28672,
821559296,
16777216,
33554432,
4,
28672,
524288,
2048,
16384,
536870912,
2048,
16384,
512,
32768,
256,
512,
3584,
8192,
32,
536870912,
448,
16777216,
491521,
16384,
251658240,
67108864,
134217728,
16777216,
4194304,
134217728,
2048,
33554432,
32,
1024,
16,
2097152,
1048576,
2097152,
8388608,
67108864,
4,
32,
2097152,
3584,
8388608,
134217728,
33554432,
2,
16384,
821559296,
524288,
2048,
32,
64,
536870912,
821559296,
67108864,
32768,
32,
1048576,
16777216,
4,
131072,
128,
512,
491521,
2,
128,
268435456,
2,
262144,
4096,
64,
1048576,
32,
8,
1024,
256,
8388608,
131072,
512,
131072,
62,
16777216,
8,
134217728,
1,
268435456,
33554432,
512,
67108864,
2,
4096,
4,
16384,
4194304,
28672,
4096,
67108864,
251658240,
251658240,
256,
134217728,
16384,
4194304,
33554432,
1024,
131072,
4096,
1,
256,
16384,
1,
131072,
131072,
2097152,
1,
536870912,
16,
256,
65536,
1048576,
8192,
128,
8192,
256,
4,
8,
28672,
2,
128,
1,
16384,
268435456,
524288,
4096,
8192,
4,
268435456,
131072,
8,
262144,
4194304,
16,
8388608,
512,
512,
4096,
448,
536870912,
1024,
262144,
2048,
64,
4194304,
32768,
4096,
268435456,
131072,
821559296,
3584,
536870912,
8192,
4,
1048576,
3584,
32768,
251658240,
16777216,
64,
131072,
65536,
491521,
256,
67108864,
28672,
1048576,
2,
8,
32768,
1,
256,
491521,
491521,
448,
8,
2,
524288,
67108864,
512,
536870912,
64,
1024,
4194304,
2048,
524288,
2097152,
2097152,
128,
536870912,
4,
8388608,
448,
268435456,
524288,
8388608,
32768,
524288,
16,
16384,
64,
128,
1024,
1024,
128,
8192,
2048,
64,
16,
62,
448,
3584,
821559296,
251658240,
32,
32,
16,
2048,
16777216,
32768,
28672,
4,
2097152,
4194304,
64,
2,
524288,
67108864,
2097152
);

const FLREUnicodeScriptHashMapSeedSize=495;
      FLREUnicodeScriptHashMapValueSize=495;
      FLREUnicodeScriptHashMapSize=495;

      FLREUnicodeScriptHashMapSeedBits=16;

      FLREUnicodeScriptHashMapSeeds:array[0..494] of smallint=(
1,
-495,
-492,
1,
0,
-491,
3,
-489,
-486,
0,
-485,
-480,
1,
1,
0,
-476,
0,
2,
1,
0,
4,
2,
-475,
0,
0,
0,
-474,
0,
-473,
-471,
-470,
1,
0,
2,
0,
1,
1,
0,
0,
1,
-467,
1,
0,
0,
0,
1,
-465,
0,
-462,
2,
0,
-461,
1,
-460,
-459,
0,
0,
1,
1,
2,
0,
2,
-458,
5,
0,
0,
1,
0,
-457,
0,
0,
0,
0,
-454,
0,
0,
0,
-450,
-448,
-444,
0,
1,
0,
-442,
-441,
0,
0,
3,
-439,
0,
1,
0,
7,
0,
3,
-436,
-426,
0,
0,
-419,
-415,
0,
2,
-410,
-406,
0,
-403,
-402,
0,
0,
0,
3,
1,
0,
0,
-393,
0,
0,
0,
0,
0,
0,
-385,
1,
1,
3,
0,
0,
-383,
3,
1,
4,
-381,
0,
-380,
1,
1,
-378,
3,
0,
-376,
-375,
0,
1,
0,
0,
5,
0,
1,
1,
-374,
-369,
-366,
0,
0,
8,
-359,
0,
1,
-353,
0,
0,
-346,
-345,
-344,
0,
0,
-342,
1,
2,
-341,
2,
1,
1,
-338,
1,
0,
1,
-333,
-332,
-331,
0,
2,
0,
2,
-326,
6,
0,
-323,
1,
-322,
2,
-321,
-316,
0,
0,
0,
-315,
0,
-313,
0,
1,
0,
0,
1,
3,
0,
0,
0,
-311,
6,
0,
-310,
-303,
-301,
3,
3,
2,
4,
-295,
0,
1,
1,
-293,
-287,
0,
0,
-286,
-285,
-283,
0,
15,
0,
0,
0,
-282,
0,
0,
-280,
-276,
-271,
0,
3,
0,
1,
0,
-269,
0,
0,
2,
0,
5,
-266,
0,
-264,
4,
0,
-262,
0,
7,
8,
-261,
-260,
0,
-259,
-258,
0,
5,
1,
0,
3,
-257,
0,
0,
0,
0,
0,
-254,
-251,
0,
-246,
-245,
0,
1,
2,
0,
1,
5,
2,
-243,
-240,
-239,
0,
0,
3,
1,
-233,
0,
-227,
4,
0,
1,
-224,
0,
0,
-222,
0,
11,
0,
0,
4,
-221,
1,
0,
-212,
0,
0,
-207,
3,
0,
-204,
0,
-198,
-196,
10,
3,
-191,
0,
-189,
0,
4,
-185,
-178,
3,
0,
-176,
-169,
2,
-166,
-163,
0,
1,
-161,
-159,
7,
-157,
-156,
0,
0,
-147,
-142,
-141,
3,
0,
-138,
-136,
7,
-135,
-134,
0,
2,
4,
5,
0,
11,
-130,
-129,
0,
8,
0,
-127,
0,
1,
0,
-126,
0,
-124,
0,
0,
1,
-123,
1,
0,
-122,
8,
4,
0,
-119,
0,
-116,
2,
0,
0,
4,
0,
-115,
0,
0,
3,
0,
-114,
0,
0,
-112,
0,
-110,
-109,
0,
-107,
0,
-102,
-101,
0,
0,
2,
0,
-100,
5,
-98,
10,
-96,
1,
-95,
-83,
0,
-81,
0,
-78,
-77,
-75,
3,
0,
-71,
-67,
-61,
1,
0,
-58,
0,
-56,
-53,
-52,
0,
0,
-50,
0,
3,
-49,
13,
0,
0,
-48,
15,
0,
5,
6,
0,
6,
3,
1,
-44,
3,
-39,
12,
0,
0,
1,
4,
3,
-38,
0,
0,
-36,
9,
0,
1,
-33,
-32,
3,
-29,
0,
-27,
0,
0,
-22,
-17,
-16,
-13,
-11,
0,
1,
0,
0,
-6,
-4
);

      FLREUnicodeScriptHashMapKeys:array[0..494] of TFLRERawByteString=(
'InBrahmi',
'Balinese',
'IsCham',
'Ogham',
'ImperialAramaic',
'Old_Turkic',
'Anatolian_Hieroglyphs',
'IsTai_Viet',
'IsLimbu',
'IsTirhuta',
'IsBuhid',
'IsTaiViet',
'InPhags_Pa',
'InHebrew',
'InSaurashtra',
'InCyrillic',
'InscriptionalParthian',
'IsCypriot',
'InBraille',
'Hanunoo',
'Hangul',
'IsOld_South_Arabian',
'IsCuneiform',
'Han',
'Elbasan',
'Buginese',
'InKhudawadi',
'IsInscriptional_Parthian',
'IsOldTurkic',
'InYi',
'IsWarang_Citi',
'InMeroiticHieroglyphs',
'IsRejang',
'IsInscriptionalParthian',
'Georgian',
'NewTaiLue',
'InInherited',
'InInscriptionalPahlavi',
'IsInherited',
'IsKaithi',
'Old_Persian',
'InKannada',
'IsOld_Turkic',
'InSoraSompeng',
'IsNko',
'InSignWriting',
'Devanagari',
'IsGeorgian',
'IsTakri',
'IsImperialAramaic',
'InLepcha',
'MeroiticCursive',
'Hatran',
'InBassaVah',
'InKhmer',
'InCanadianAboriginal',
'InPsalter_Pahlavi',
'Cuneiform',
'Gujarati',
'IsMongolian',
'InTaiViet',
'Bengali',
'IsNew_Tai_Lue',
'Old_Italic',
'InOld_Permic',
'IsMandaic',
'Lycian',
'InTai_Viet',
'Chakma',
'InTifinagh',
'Syriac',
'LinearB',
'IsGujarati',
'Khojki',
'Tai_Le',
'InSamaritan',
'Tamil',
'InTaiLe',
'IsMeroiticHieroglyphs',
'IsOld_Permic',
'InKatakana',
'Hebrew',
'InManichaean',
'Bassa_Vah',
'InOl_Chiki',
'IsCommon',
'InTirhuta',
'InNew_Tai_Lue',
'PhagsPa',
'Old_Permic',
'Takri',
'InBopomofo',
'OldTurkic',
'Malayalam',
'Rejang',
'InDevanagari',
'Sora_Sompeng',
'InAnatolian_Hieroglyphs',
'IsMalayalam',
'IsHan',
'TaiLe',
'InTai_Tham',
'InGeorgian',
'OldItalic',
'Telugu',
'Lepcha',
'InTai_Le',
'IsCarian',
'WarangCiti',
'Palmyrene',
'IsSyriac',
'InDeseret',
'IsDevanagari',
'InOsmanya',
'Khudawadi',
'SoraSompeng',
'IsOlChiki',
'IsThaana',
'Canadian_Aboriginal',
'Bamum',
'InUgaritic',
'InOldHungarian',
'InSora_Sompeng',
'PauCinHau',
'Caucasian_Albanian',
'InImperialAramaic',
'IsThai',
'IsOldPersian',
'IsTaiTham',
'InPsalterPahlavi',
'InEthiopic',
'InPhoenician',
'IsNabataean',
'IsOldSouthArabian',
'IsBengali',
'InThaana',
'InLimbu',
'InOldSouthArabian',
'InLao',
'IsTai_Tham',
'IsGrantha',
'InEgyptianHieroglyphs',
'InOriya',
'IsOldPermic',
'Duployan',
'InLatin',
'Ugaritic',
'IsCherokee',
'InOldItalic',
'Latin',
'Old_Hungarian',
'IsPahawhHmong',
'IsTagalog',
'InInscriptionalParthian',
'InBamum',
'InPahawh_Hmong',
'IsCaucasianAlbanian',
'Tai_Tham',
'IsInscriptional_Pahlavi',
'Avestan',
'InLinearB',
'InDuployan',
'InLinearA',
'Tagalog',
'Egyptian_Hieroglyphs',
'InRunic',
'IsAvestan',
'IsVai',
'InLisu',
'InMeetei_Mayek',
'InSiddham',
'InGrantha',
'IsOldHungarian',
'Mongolian',
'InBuhid',
'AnatolianHieroglyphs',
'Arabic',
'InSundanese',
'Saurashtra',
'InRejang',
'InArmenian',
'IsOsmanya',
'KayahLi',
'IsAnatolianHieroglyphs',
'InElbasan',
'IsKhojki',
'IsWarangCiti',
'IsLinear_A',
'Mende_Kikakui',
'IsSamaritan',
'Oriya',
'Common',
'Cypriot',
'IsMiao',
'Tai_Viet',
'InHiragana',
'Linear_B',
'InMiao',
'Grantha',
'IsMende_Kikakui',
'Inscriptional_Parthian',
'Meetei_Mayek',
'IsSora_Sompeng',
'InEgyptian_Hieroglyphs',
'Cherokee',
'Hiragana',
'IsGlagolitic',
'OldSouthArabian',
'InThai',
'InOld_South_Arabian',
'TaiTham',
'InMyanmar',
'IsKhmer',
'InMeeteiMayek',
'InPahawhHmong',
'IsTamil',
'InWarang_Citi',
'Tibetan',
'IsGothic',
'PsalterPahlavi',
'InOld_Italic',
'Thai',
'InKayahLi',
'Tirhuta',
'InVai',
'Deseret',
'IsLycian',
'IsHatran',
'InOld_Turkic',
'IsTifinagh',
'Cyrillic',
'Sharada',
'InSinhala',
'InKhojki',
'InGreek',
'IsMendeKikakui',
'Buhid',
'InMendeKikakui',
'IsTai_Le',
'IsRunic',
'InTaiTham',
'Nko',
'InSharada',
'Javanese',
'InLydian',
'Vai',
'InBuginese',
'Siddham',
'IsHangul',
'InOld_Hungarian',
'Thaana',
'InPauCinHau',
'IsModi',
'IsGurmukhi',
'IsLinear_B',
'IsMeroitic_Hieroglyphs',
'IsOld_North_Arabian',
'InLinear_A',
'InSylotiNagri',
'InLinear_B',
'Warang_Citi',
'IsPalmyrene',
'IsEgyptian_Hieroglyphs',
'IsArabic',
'IsSignWriting',
'InKayah_Li',
'IsKannada',
'Greek',
'Mro',
'IsOld_Italic',
'InInscriptional_Parthian',
'InCham',
'IsTelugu',
'IsTaiLe',
'IsBassaVah',
'IsSylotiNagri',
'Meroitic_Hieroglyphs',
'Samaritan',
'IsOld_Hungarian',
'IsKhudawadi',
'IsLinearB',
'IsHebrew',
'IsAnatolian_Hieroglyphs',
'Runic',
'IsLatin',
'InGothic',
'EgyptianHieroglyphs',
'InNko',
'IsAhom',
'InJavanese',
'IsBamum',
'InTagbanwa',
'InBengali',
'InscriptionalPahlavi',
'InSyriac',
'IsSaurashtra',
'Syloti_Nagri',
'IsMeetei_Mayek',
'Limbu',
'IsEgyptianHieroglyphs',
'InChakma',
'InOldTurkic',
'OldNorthArabian',
'Ahom',
'Batak',
'InAhom',
'InTibetan',
'IsBatak',
'IsImperial_Aramaic',
'InPhagsPa',
'InLycian',
'Gurmukhi',
'IsPsalter_Pahlavi',
'IsMro',
'Brahmi',
'InTakri',
'Phags_Pa',
'SylotiNagri',
'IsNewTaiLue',
'IsLydian',
'IsKayahLi',
'CanadianAboriginal',
'Kannada',
'CaucasianAlbanian',
'IsSundanese',
'LinearA',
'Myanmar',
'IsOl_Chiki',
'InHatran',
'InBatak',
'IsKatakana',
'IsKharoshthi',
'InOld_North_Arabian',
'InCommon',
'Yi',
'InTagalog',
'InCaucasian_Albanian',
'InCanadian_Aboriginal',
'Braille',
'Cham',
'InMultani',
'IsYi',
'IsOldItalic',
'InCypriot',
'Modi',
'Ethiopic',
'IsBraille',
'InNewTaiLue',
'Bopomofo',
'IsSoraSompeng',
'MeeteiMayek',
'Carian',
'IsManichaean',
'InHan',
'Phoenician',
'IsDuployan',
'IsPsalterPahlavi',
'InMeroitic_Cursive',
'InMandaic',
'InCoptic',
'InWarangCiti',
'Nabataean',
'InKaithi',
'Coptic',
'IsMeeteiMayek',
'IsUgaritic',
'Inscriptional_Pahlavi',
'IsDeseret',
'IsBalinese',
'IsMeroiticCursive',
'InNabataean',
'SignWriting',
'InBalinese',
'IsShavian',
'IsPhagsPa',
'InMahajani',
'IsCanadian_Aboriginal',
'MendeKikakui',
'Lao',
'InKharoshthi',
'TaiViet',
'IsLinearA',
'Mahajani',
'Manichaean',
'InOldPermic',
'IsPhoenician',
'InGurmukhi',
'InMro',
'OldPermic',
'InGujarati',
'IsCoptic',
'Tagbanwa',
'IsHanunoo',
'Lisu',
'IsElbasan',
'IsBassa_Vah',
'IsPau_Cin_Hau',
'Gothic',
'InAnatolianHieroglyphs',
'Imperial_Aramaic',
'InCaucasianAlbanian',
'InTelugu',
'InPau_Cin_Hau',
'IsInscriptionalPahlavi',
'InOldPersian',
'InCherokee',
'New_Tai_Lue',
'InMende_Kikakui',
'InModi',
'InArabic',
'InHangul',
'InCarian',
'IsOriya',
'Pau_Cin_Hau',
'Kaithi',
'Linear_A',
'Inherited',
'Miao',
'IsChakma',
'IsCanadianAboriginal',
'Meroitic_Cursive',
'InOldNorthArabian',
'InOld_Persian',
'OldPersian',
'InHanunoo',
'IsMahajani',
'InAvestan',
'Sundanese',
'IsOldNorthArabian',
'Ol_Chiki',
'InGlagolitic',
'InMeroitic_Hieroglyphs',
'IsBrahmi',
'Old_North_Arabian',
'InInscriptional_Pahlavi',
'Sinhala',
'IsTibetan',
'IsTagbanwa',
'InMeroiticCursive',
'IsLisu',
'IsGreek',
'IsEthiopic',
'Glagolitic',
'IsKayah_Li',
'Kayah_Li',
'IsMultani',
'OldHungarian',
'Khmer',
'Psalter_Pahlavi',
'Multani',
'Katakana',
'Kharoshthi',
'PahawhHmong',
'IsSiddham',
'Shavian',
'MeroiticHieroglyphs',
'IsSinhala',
'IsBuginese',
'IsPhags_Pa',
'IsCyrillic',
'IsBopomofo',
'Mandaic',
'IsHiragana',
'InOgham',
'InMalayalam',
'IsOgham',
'Tifinagh',
'InImperial_Aramaic',
'BassaVah',
'Pahawh_Hmong',
'IsLepcha',
'IsJavanese',
'IsCaucasian_Albanian',
'IsSharada',
'InSyloti_Nagri',
'Osmanya',
'IsMeroitic_Cursive',
'IsPauCinHau',
'IsPahawh_Hmong',
'IsOld_Persian',
'IsArmenian',
'Lydian',
'InBassa_Vah',
'Armenian',
'OlChiki',
'InMongolian',
'InShavian',
'InCuneiform',
'InPalmyrene',
'IsMyanmar',
'InTamil',
'Old_South_Arabian',
'IsLao',
'InOlChiki',
'IsSyloti_Nagri'
);

      FLREUnicodeScriptHashMapValueBits=8;

      FLREUnicodeScriptHashMapValues:array[0..494] of byte=(
94,
62,
77,
29,
87,
91,
127,
79,
46,
124,
44,
79,
65,
6,
71,
4,
89,
52,
53,
43,
25,
88,
63,
36,
106,
54,
123,
89,
91,
37,
125,
98,
73,
89,
24,
56,
41,
90,
41,
92,
60,
17,
91,
101,
66,
131,
10,
24,
102,
87,
68,
97,
128,
104,
31,
28,
121,
63,
13,
32,
79,
11,
56,
38,
120,
95,
74,
79,
96,
58,
8,
48,
13,
109,
47,
82,
15,
47,
98,
120,
34,
6,
112,
104,
69,
1,
124,
56,
65,
120,
102,
35,
91,
18,
73,
10,
101,
127,
18,
36,
47,
78,
24,
38,
16,
68,
47,
75,
125,
118,
8,
40,
10,
51,
123,
101,
69,
9,
28,
84,
49,
130,
101,
119,
103,
87,
20,
60,
78,
121,
26,
64,
117,
88,
11,
9,
46,
88,
21,
78,
107,
81,
14,
120,
105,
2,
49,
27,
38,
2,
130,
108,
42,
89,
84,
108,
103,
78,
90,
80,
48,
105,
110,
42,
81,
30,
80,
70,
83,
86,
122,
107,
130,
32,
44,
127,
7,
67,
71,
73,
5,
51,
72,
127,
106,
109,
125,
110,
113,
82,
14,
1,
52,
99,
79,
33,
48,
99,
107,
113,
89,
86,
101,
81,
27,
33,
57,
88,
20,
88,
78,
23,
31,
86,
108,
15,
125,
22,
39,
121,
38,
20,
72,
124,
70,
40,
74,
128,
91,
58,
4,
100,
19,
109,
3,
113,
44,
113,
47,
30,
78,
66,
100,
85,
76,
70,
54,
122,
25,
130,
9,
119,
114,
12,
48,
98,
116,
110,
59,
48,
125,
118,
81,
7,
131,
72,
17,
3,
115,
38,
89,
77,
16,
47,
104,
59,
98,
82,
130,
123,
48,
6,
127,
30,
2,
39,
81,
66,
126,
85,
84,
45,
11,
90,
8,
71,
59,
86,
46,
81,
96,
91,
116,
126,
93,
126,
22,
93,
87,
65,
74,
12,
121,
115,
94,
102,
65,
59,
56,
76,
72,
28,
17,
103,
67,
110,
23,
69,
128,
93,
34,
61,
116,
1,
37,
42,
103,
28,
53,
77,
129,
37,
38,
52,
114,
26,
53,
56,
35,
101,
86,
75,
112,
36,
64,
105,
121,
97,
95,
55,
125,
117,
92,
55,
86,
49,
90,
40,
62,
97,
117,
131,
62,
50,
65,
111,
28,
113,
21,
61,
79,
110,
111,
112,
120,
64,
12,
115,
120,
13,
55,
45,
43,
83,
106,
104,
119,
39,
127,
87,
103,
16,
119,
90,
60,
27,
56,
113,
114,
7,
25,
75,
14,
119,
92,
110,
41,
99,
96,
28,
97,
116,
60,
60,
43,
111,
80,
67,
116,
69,
57,
98,
94,
116,
90,
19,
22,
45,
97,
83,
3,
26,
57,
72,
72,
129,
130,
31,
121,
129,
34,
61,
108,
122,
50,
98,
19,
54,
65,
4,
35,
95,
33,
29,
18,
29,
58,
87,
104,
108,
68,
85,
103,
100,
59,
51,
97,
119,
108,
60,
5,
76,
104,
5,
69,
32,
50,
63,
118,
23,
15,
88,
21,
69,
59
);

const FLREUnicodeBlockHashMapSeedSize=1290;
      FLREUnicodeBlockHashMapValueSize=1290;
      FLREUnicodeBlockHashMapSize=1290;

      FLREUnicodeBlockHashMapSeedBits=16;

      FLREUnicodeBlockHashMapSeeds:array[0..1289] of smallint=(
1,
1,
5,
-1287,
2,
3,
-1281,
1,
-1277,
0,
2,
-1276,
0,
-1275,
-1270,
0,
0,
-1263,
-1262,
1,
1,
-1260,
-1257,
-1253,
1,
0,
0,
-1252,
0,
-1251,
-1250,
-1249,
0,
-1247,
0,
0,
1,
-1246,
0,
2,
0,
2,
0,
0,
0,
-1245,
1,
-1243,
1,
-1238,
0,
-1237,
-1230,
-1229,
-1227,
0,
0,
0,
1,
0,
0,
-1223,
-1217,
-1213,
0,
-1212,
-1211,
-1208,
0,
0,
-1206,
-1204,
-1203,
-1199,
0,
0,
2,
0,
-1198,
0,
0,
0,
0,
0,
-1196,
1,
0,
-1195,
1,
0,
-1191,
0,
2,
-1190,
-1189,
2,
0,
-1185,
-1184,
-1179,
1,
0,
-1175,
0,
0,
-1174,
3,
0,
-1170,
-1169,
1,
0,
1,
1,
0,
-1167,
-1158,
-1155,
4,
-1154,
-1153,
2,
-1152,
-1151,
0,
0,
0,
-1150,
0,
0,
1,
0,
-1147,
-1145,
1,
1,
-1144,
0,
2,
0,
-1139,
1,
0,
0,
-1137,
-1134,
0,
1,
2,
0,
-1133,
-1124,
0,
0,
-1122,
0,
-1121,
1,
0,
-1120,
-1119,
4,
0,
0,
0,
3,
0,
-1117,
-1115,
-1114,
0,
0,
-1113,
0,
1,
3,
0,
0,
-1112,
2,
-1109,
3,
1,
-1107,
0,
1,
-1106,
1,
0,
-1105,
11,
2,
0,
0,
7,
1,
-1104,
1,
1,
-1103,
-1094,
-1092,
-1091,
0,
-1087,
2,
-1084,
3,
3,
0,
-1081,
0,
0,
2,
-1080,
-1078,
1,
1,
2,
-1076,
1,
1,
-1075,
2,
0,
-1072,
-1071,
-1070,
-1069,
0,
1,
-1060,
2,
-1059,
0,
0,
1,
-1057,
-1052,
-1050,
1,
-1047,
-1045,
-1044,
-1043,
5,
1,
0,
1,
-1042,
1,
1,
3,
0,
0,
-1040,
-1038,
-1036,
-1035,
2,
1,
-1033,
-1028,
0,
0,
2,
-1025,
0,
0,
-1023,
0,
-1019,
0,
1,
0,
0,
-1017,
0,
0,
3,
-1016,
1,
1,
0,
2,
-1015,
0,
-1014,
3,
-1013,
3,
-1009,
-1005,
0,
-993,
-992,
0,
0,
0,
1,
-987,
0,
2,
0,
0,
0,
-983,
2,
0,
-982,
-981,
-980,
0,
-977,
-975,
-973,
0,
-972,
3,
1,
-971,
0,
7,
-969,
0,
-967,
0,
1,
2,
-966,
2,
-965,
1,
0,
1,
-963,
0,
0,
-961,
4,
-959,
0,
-950,
0,
2,
0,
-948,
1,
0,
0,
2,
-947,
-946,
-944,
0,
0,
-943,
1,
1,
1,
0,
0,
-942,
3,
-937,
1,
2,
-932,
0,
1,
4,
-929,
-918,
1,
-915,
-911,
0,
0,
0,
3,
-906,
-905,
-904,
-903,
-899,
0,
0,
-896,
-895,
0,
0,
1,
0,
0,
0,
0,
0,
1,
-893,
-891,
3,
-887,
1,
1,
-885,
0,
0,
0,
0,
0,
3,
-884,
1,
1,
1,
0,
0,
-883,
-877,
0,
-871,
0,
-869,
0,
-866,
0,
-864,
1,
-863,
1,
0,
1,
-859,
-858,
-856,
-853,
-852,
0,
-851,
1,
-845,
-843,
-840,
-839,
-838,
0,
0,
5,
1,
-834,
2,
-820,
0,
0,
0,
0,
0,
-819,
0,
0,
-818,
0,
-817,
0,
0,
0,
-809,
-807,
0,
0,
0,
7,
0,
1,
1,
7,
0,
0,
0,
0,
0,
0,
0,
1,
-803,
-800,
-798,
0,
0,
1,
-792,
0,
1,
0,
-790,
2,
-782,
-781,
-779,
-778,
0,
0,
0,
0,
-777,
-776,
-774,
1,
0,
1,
2,
1,
-773,
-769,
2,
3,
-767,
-766,
-765,
0,
0,
-764,
-760,
-756,
1,
1,
-751,
-749,
0,
0,
2,
-747,
9,
-744,
-740,
-738,
-736,
-734,
2,
0,
2,
-733,
13,
1,
-732,
0,
1,
5,
0,
-730,
-728,
-725,
-724,
-718,
0,
1,
1,
2,
0,
0,
0,
0,
-715,
-706,
-705,
-700,
3,
-699,
13,
2,
-693,
-692,
3,
0,
2,
-690,
0,
0,
0,
0,
1,
1,
-688,
-686,
-681,
-680,
0,
0,
0,
-678,
-675,
1,
0,
0,
0,
1,
-672,
0,
0,
1,
0,
0,
-671,
-668,
0,
3,
0,
1,
1,
1,
2,
-665,
-664,
-662,
-659,
0,
4,
-658,
4,
0,
-656,
-655,
-654,
0,
0,
0,
0,
-653,
10,
2,
-649,
0,
0,
-646,
-639,
0,
0,
-637,
0,
-636,
-634,
0,
0,
2,
-631,
-630,
3,
-623,
0,
1,
1,
9,
0,
-617,
-611,
2,
0,
-610,
0,
-609,
3,
-605,
2,
0,
0,
1,
0,
0,
1,
-602,
-599,
0,
2,
1,
-596,
-595,
0,
2,
0,
-593,
1,
-580,
2,
3,
1,
3,
4,
-578,
-575,
-574,
0,
0,
0,
0,
2,
5,
0,
-572,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
1,
0,
0,
6,
-570,
-569,
-568,
0,
-564,
-559,
0,
5,
1,
1,
1,
1,
0,
-558,
-551,
-550,
0,
-548,
0,
-547,
3,
-544,
0,
0,
-542,
-541,
-540,
-539,
0,
3,
0,
-538,
0,
0,
0,
-533,
0,
0,
0,
2,
-530,
-527,
-526,
-522,
1,
1,
-520,
0,
-518,
-515,
0,
-514,
0,
0,
0,
0,
0,
3,
-507,
-505,
0,
0,
-504,
-502,
2,
0,
-497,
0,
-488,
2,
0,
0,
-482,
-481,
-473,
-471,
0,
5,
0,
-468,
-463,
0,
5,
4,
-458,
-457,
-454,
1,
-453,
0,
12,
-448,
0,
-447,
8,
0,
0,
0,
-444,
2,
0,
3,
-441,
-440,
0,
0,
5,
-439,
0,
0,
1,
1,
-438,
-437,
0,
2,
0,
0,
1,
-436,
-431,
-429,
-424,
-421,
6,
0,
0,
0,
0,
-420,
0,
-418,
-417,
10,
1,
-415,
0,
0,
0,
-411,
1,
-410,
1,
4,
0,
3,
0,
0,
-409,
-408,
0,
-403,
5,
-401,
0,
0,
0,
0,
3,
0,
0,
0,
-400,
-398,
8,
0,
0,
6,
-395,
6,
-389,
-387,
0,
0,
-385,
0,
-384,
0,
-382,
1,
0,
0,
1,
-381,
11,
2,
0,
-372,
-369,
-365,
-364,
0,
-363,
-362,
-361,
-359,
0,
-357,
-355,
3,
-354,
4,
0,
0,
0,
2,
6,
-353,
0,
1,
0,
0,
4,
0,
-349,
2,
-340,
3,
-339,
-337,
-335,
0,
0,
0,
-333,
-330,
0,
2,
-327,
0,
-326,
2,
1,
-320,
-318,
8,
6,
0,
-316,
0,
-315,
-313,
1,
4,
1,
5,
0,
0,
-312,
-308,
-307,
0,
2,
1,
4,
0,
-306,
0,
0,
-301,
2,
-300,
-298,
8,
-296,
-294,
0,
-290,
-288,
0,
-287,
-281,
4,
0,
0,
4,
0,
0,
-278,
-275,
-273,
0,
-272,
-270,
0,
-267,
-259,
-258,
28,
2,
-257,
-255,
-253,
-252,
0,
-251,
0,
11,
0,
-250,
0,
0,
-248,
0,
-244,
-242,
-240,
0,
0,
0,
0,
-237,
3,
-235,
0,
0,
-233,
0,
-232,
0,
4,
-229,
1,
0,
0,
1,
-228,
0,
1,
-227,
0,
3,
0,
0,
-225,
0,
1,
-224,
1,
0,
-223,
-221,
-214,
5,
1,
1,
0,
0,
0,
3,
-211,
-210,
0,
-209,
-203,
0,
0,
-202,
-198,
-197,
0,
1,
0,
0,
13,
0,
2,
-196,
0,
-194,
6,
0,
1,
1,
9,
7,
4,
9,
0,
0,
0,
-184,
26,
-182,
-180,
0,
0,
1,
-173,
-170,
-169,
0,
-168,
1,
-167,
0,
4,
-164,
0,
-162,
-160,
6,
5,
0,
-154,
-151,
-149,
0,
0,
0,
0,
-146,
35,
0,
0,
-144,
1,
-142,
-138,
0,
-137,
0,
0,
0,
1,
-136,
5,
0,
0,
-133,
0,
1,
-129,
0,
0,
16,
-125,
-122,
4,
0,
0,
5,
0,
6,
0,
-121,
-120,
0,
-119,
0,
-117,
-114,
-112,
2,
0,
0,
-108,
-107,
0,
-105,
0,
1,
0,
1,
0,
0,
3,
3,
-104,
-101,
-100,
2,
-99,
-96,
0,
1,
16,
0,
1,
0,
0,
4,
-91,
-89,
0,
-88,
-87,
1,
-86,
-85,
0,
-83,
0,
0,
-79,
11,
-76,
-74,
9,
0,
0,
0,
-72,
-71,
0,
3,
-64,
-63,
6,
-61,
-60,
0,
0,
9,
1,
-57,
0,
0,
0,
3,
3,
16,
-56,
5,
3,
-52,
0,
0,
0,
-51,
0,
1,
-43,
-41,
0,
-37,
-35,
0,
-27,
9,
3,
3,
0,
4,
0,
10,
1,
2,
-25,
19,
0,
0,
11,
0,
5,
-21,
-20,
1,
-17,
0,
3,
0,
0,
1,
-14,
-13,
-11,
-10,
-8,
-5,
1,
-3,
2,
-2,
0,
-1,
0,
0
);

      FLREUnicodeBlockHashMapKeys:array[0..1289] of TFLRERawByteString=(
'Arabic_Supplement',
'InSundaneseSupplement',
'NKo',
'Deseret',
'LinearBSyllabary',
'Variation_Selectors_Supplement',
'InDuployan',
'Block_Elements',
'InMiao',
'InGreekandCoptic',
'InMeroitic_Cursive',
'InSupplementalMathematicalOperators',
'IsDevanagari',
'InSamaritan',
'IsGrantha',
'InHebrew',
'HighPrivateUseSurrogates',
'CJKCompatibility',
'InKayah_Li',
'IsEthiopic_Supplement',
'IsCJK_Unified_Ideographs',
'InMiscellaneousSymbolsandArrows',
'InLow_Surrogates',
'IsCJK_Compatibility',
'IsSupplemental_Arrows-A',
'EthiopicSupplement',
'Balinese',
'IsHangulSyllables',
'InSpecials',
'InEgyptianHieroglyphs',
'Yi_Radicals',
'InCoptic',
'InCJK_Compatibility_Forms',
'IsCJKUnifiedIdeographs',
'Takri',
'PauCinHau',
'InEthiopic_Extended',
'SuttonSignWriting',
'IsLowSurrogates',
'InCJKUnifiedIdeographsExtensionD',
'IsOldHungarian',
'InCJKUnifiedIdeographsExtensionB',
'Common_Indic_Number_Forms',
'CJKUnifiedIdeographs',
'InCJK_Compatibility_Ideographs',
'InTags',
'Letterlike_Symbols',
'GeometricShapesExtended',
'Grantha',
'Phonetic_Extensions_Supplement',
'IsEarly_Dynastic_Cuneiform',
'IsGurmukhi',
'InOld_Persian',
'Vedic_Extensions',
'IsDingbats',
'InAvestan',
'InSupplemental_Arrows-C',
'IsVertical_Forms',
'IsEnclosedAlphanumerics',
'Caucasian_Albanian',
'Musical_Symbols',
'IsCJKUnifiedIdeographsExtensionE',
'IsGothic',
'IsSora_Sompeng',
'InOl_Chiki',
'IsLatin_Extended-A',
'IsLatin_Extended-B',
'IsLatin_Extended-C',
'InMeroiticHieroglyphs',
'InBraillePatterns',
'BlockElements',
'IsIdeographicDescriptionCharacters',
'IsCombiningDiacriticalMarks',
'High_Surrogates',
'Old_Hungarian',
'Thaana',
'SinhalaArchaicNumbers',
'InBox_Drawing',
'BamumSupplement',
'IsLimbu',
'IsKatakana',
'IsCJKCompatibilityIdeographs',
'InArabic_Mathematical_Alphabetic_Symbols',
'IsBoxDrawing',
'IsSpecials',
'InCuneiform_Numbers_and_Punctuation',
'IsKanbun',
'ArabicPresentationForms-B',
'Vai',
'Vertical_Forms',
'ArabicPresentationForms-A',
'InBopomofo_Extended',
'InSiddham',
'Tai_Le',
'InMendeKikakui',
'IsEthiopicExtended',
'Sinhala',
'IsEgyptian_Hieroglyphs',
'InHatran',
'OldPersian',
'IsCarian',
'InLinearBIdeograms',
'InPhoneticExtensionsSupplement',
'IsYiSyllables',
'InPhaistos_Disc',
'IsOpticalCharacterRecognition',
'IsCuneiform',
'SmallFormVariants',
'Hebrew',
'IsCuneiformNumbersandPunctuation',
'InGreek_and_Coptic',
'IPA_Extensions',
'InEthiopic',
'Superscripts_and_Subscripts',
'InKanaSupplement',
'PhaistosDisc',
'InEnclosed_Alphanumerics',
'InMalayalam',
'InKatakana_Phonetic_Extensions',
'InUgaritic',
'IsAncientGreekNumbers',
'IsLinearBSyllabary',
'InCommonIndicNumberForms',
'InscriptionalParthian',
'InCJK_Compatibility_Ideographs_Supplement',
'IsLow_Surrogates',
'IsGeometricShapesExtended',
'InEnclosedIdeographicSupplement',
'InYi_Syllables',
'IsEthiopicSupplement',
'IsOld_Turkic',
'Buhid',
'IsEnclosedCJKLettersandMonths',
'InTibetan',
'IsVedicExtensions',
'IsDomino_Tiles',
'Phaistos_Disc',
'InEnclosedCJKLettersandMonths',
'IsTaiXuanJingSymbols',
'IsArabic_Presentation_Forms-B',
'IsArabic_Presentation_Forms-A',
'InPlayingCards',
'Arabic_Presentation_Forms-B',
'MeeteiMayekExtensions',
'Playing_Cards',
'Arabic_Extended-A',
'YiRadicals',
'IsOl_Chiki',
'IsJavanese',
'InSinhala',
'NewTaiLue',
'InAlchemical_Symbols',
'EgyptianHieroglyphs',
'InOrnamental_Dingbats',
'InAegean_Numbers',
'InSupplementaryPrivateUseArea-B',
'InSupplementaryPrivateUseArea-A',
'InSuperscriptsandSubscripts',
'IsOld_Persian',
'InTelugu',
'IsCombiningDiacriticalMarksforSymbols',
'SupplementalArrows-A',
'InGeorgian',
'SupplementalArrows-C',
'InSundanese',
'Cherokee',
'IsLisu',
'IsCham',
'Supplementary_Private_Use_Area-A',
'IsAegean_Numbers',
'InModifier_Tone_Letters',
'IsGreekExtended',
'InPsalterPahlavi',
'MiscellaneousMathematicalSymbols-A',
'InCurrencySymbols',
'InHangulCompatibilityJamo',
'IsCJKCompatibilityForms',
'CyrillicSupplement',
'InEmoticons',
'Chakma',
'LatinExtended-A',
'Tai_Xuan_Jing_Symbols',
'InSupplementalPunctuation',
'IsOldSouthArabian',
'InShorthandFormatControls',
'LatinExtended-D',
'Miscellaneous_Symbols_and_Arrows',
'IsSaurashtra',
'Sundanese',
'InAlphabeticPresentationForms',
'InCaucasianAlbanian',
'IsBamumSupplement',
'IsMeetei_Mayek',
'InMiscellaneousSymbols',
'InSuperscripts_and_Subscripts',
'Latin_Extended_Additional',
'IsLinearA',
'IsRunic',
'IsMusicalSymbols',
'Rejang',
'InKaithi',
'IsBassa_Vah',
'InWarang_Citi',
'IsLatinExtended-D',
'IsKanaSupplement',
'InGlagolitic',
'Nabataean',
'InHangulSyllables',
'Katakana',
'Arabic',
'GreekExtended',
'IsOldItalic',
'InPhaistosDisc',
'InSharada',
'MiscellaneousSymbols',
'InKanbun',
'PrivateUseArea',
'IsLinear_B_Ideograms',
'InLydian',
'IsKayah_Li',
'InManichaean',
'CJK_Unified_Ideographs_Extension_B',
'Tibetan',
'InSupplementary_Private_Use_Area-A',
'InModifierToneLetters',
'InBoxDrawing',
'InCyrillic',
'Latin-1Supplement',
'InEnclosed_Ideographic_Supplement',
'InOldItalic',
'IsArabicExtended-A',
'IsCurrency_Symbols',
'IsHangul_Jamo',
'InPhonetic_Extensions_Supplement',
'Samaritan',
'IsThai',
'InMyanmar_Extended-A',
'Box_Drawing',
'IsBrahmi',
'IsCaucasian_Albanian',
'DevanagariExtended',
'Gothic',
'InMusical_Symbols',
'IsHighSurrogates',
'VedicExtensions',
'IsHigh_Surrogates',
'InGeometric_Shapes',
'IsEmoticons',
'InOld_Hungarian',
'InArmenian',
'IsMyanmarExtended-A',
'IsDeseret',
'IsMyanmarExtended-B',
'OpticalCharacterRecognition',
'IsGeometric_Shapes_Extended',
'IsMiscellaneous_Symbols_and_Arrows',
'Syriac',
'InJavanese',
'IsKana_Supplement',
'Osmanya',
'Inscriptional_Parthian',
'InCuneiform',
'InPahawhHmong',
'InBlockElements',
'InCJK_Unified_Ideographs_Extension_D',
'OldSouthArabian',
'InPalmyrene',
'InCombining_Diacritical_Marks_Extended',
'InLimbu',
'InMahajani',
'IsCherokeeSupplement',
'IsPsalter_Pahlavi',
'InArabic_Presentation_Forms-B',
'Miscellaneous_Symbols',
'InArabic_Presentation_Forms-A',
'Kangxi_Radicals',
'InCJKCompatibility',
'IsAegeanNumbers',
'MiscellaneousTechnical',
'InOsmanya',
'NumberForms',
'IsTaiViet',
'InCJKSymbolsandPunctuation',
'IsSupplementaryPrivateUseArea-A',
'IsBox_Drawing',
'IsCombining_Half_Marks',
'Combining_Marks_for_Symbols',
'IsSutton_SignWriting',
'IsTai_Viet',
'InEthiopic_Supplement',
'InCJK_Unified_Ideographs',
'EarlyDynasticCuneiform',
'InGreek_Extended',
'Multani',
'CombiningHalfMarks',
'Kharoshthi',
'InEnclosedAlphanumericSupplement',
'IsSylotiNagri',
'InEarly_Dynastic_Cuneiform',
'IsShorthand_Format_Controls',
'IsMro',
'EnclosedAlphanumerics',
'InGrantha',
'IsMiscellaneous_Symbols',
'IsAlchemicalSymbols',
'InLatin_Extended_Additional',
'IsBlock_Elements',
'InCombiningDiacriticalMarksforSymbols',
'IsOld_Hungarian',
'IsSiddham',
'Ornamental_Dingbats',
'IsEnclosedAlphanumericSupplement',
'Kannada',
'Khojki',
'InHalfwidthandFullwidthForms',
'IsCounting_Rod_Numerals',
'IsMiscellaneous_Symbols_and_Pictographs',
'InCJK_Unified_Ideographs_Extension_A',
'IsAhom',
'InCJK_Unified_Ideographs_Extension_B',
'Mahjong_Tiles',
'Private_Use_Area',
'IsSupplemental_Arrows-C',
'IsBlockElements',
'Unified_Canadian_Aboriginal_Syllabics_Extended',
'InCJK_Unified_Ideographs_Extension_E',
'CJK_Compatibility_Forms',
'IsKhudawadi',
'IsBraille_Patterns',
'IsHangulCompatibilityJamo',
'GeneralPunctuation',
'InCombining_Diacritical_Marks_for_Symbols',
'IsSmallFormVariants',
'IsYijing_Hexagram_Symbols',
'InArrows',
'Batak',
'IsLao',
'SupplementalSymbolsandPictographs',
'IsHighPrivateUseSurrogates',
'IsMiscellaneousSymbols',
'InCypriot_Syllabary',
'InLatin_Extended-A',
'IsInscriptional_Pahlavi',
'Cyrillic_Extended-B',
'InOld_South_Arabian',
'IsWarangCiti',
'Miao',
'IsMeeteiMayekExtensions',
'IsByzantineMusicalSymbols',
'IsCuneiform_Numbers_and_Punctuation',
'IsBuginese',
'ImperialAramaic',
'IsSuttonSignWriting',
'IsDevanagariExtended',
'Tags',
'Khmer',
'InCJKCompatibilityIdeographsSupplement',
'Kayah_Li',
'Bassa_Vah',
'IsSupplementalSymbolsandPictographs',
'SpacingModifierLetters',
'InSupplemental_Symbols_and_Pictographs',
'Enclosed_Ideographic_Supplement',
'IsPrivate_Use_Area',
'InBlock_Elements',
'OldTurkic',
'InOld_North_Arabian',
'IsTai_Xuan_Jing_Symbols',
'InImperial_Aramaic',
'Cyrillic_Supplement',
'InControlPictures',
'New_Tai_Lue',
'CJK_Compatibility',
'IsBamum',
'InCJKUnifiedIdeographsExtensionE',
'Combining_Diacritical_Marks_Supplement',
'IsHangul_Syllables',
'IsLycian',
'InCJKUnifiedIdeographsExtensionA',
'Hangul_Jamo_Extended-A',
'IsLinear_B_Syllabary',
'LatinExtended-E',
'IsCombining_Diacritical_Marks_for_Symbols',
'InOldNorthArabian',
'Emoticons',
'InBopomofo',
'InDevanagariExtended',
'InIdeographic_Description_Characters',
'IsCountingRodNumerals',
'Ugaritic',
'InTaiTham',
'IsGeorgian',
'Arabic_Mathematical_Alphabetic_Symbols',
'InPrivate_Use_Area',
'InKhojki',
'IsAncient_Symbols',
'InYiSyllables',
'InByzantine_Musical_Symbols',
'PhoneticExtensionsSupplement',
'CuneiformNumbersandPunctuation',
'IsEthiopicExtended-A',
'Mathematical_Alphanumeric_Symbols',
'Geometric_Shapes_Extended',
'InCaucasian_Albanian',
'General_Punctuation',
'IsPhoneticExtensions',
'KangxiRadicals',
'IsMeroiticHieroglyphs',
'KayahLi',
'InSutton_SignWriting',
'Oriya',
'Sharada',
'InYi_Radicals',
'InWarangCiti',
'InHangul_Jamo',
'InRunic',
'SylotiNagri',
'Latin-1_Supplement',
'IsCaucasianAlbanian',
'InMiscellaneous_Symbols_and_Pictographs',
'BraillePatterns',
'IsTaiTham',
'Psalter_Pahlavi',
'InLinearA',
'InRumi_Numeral_Symbols',
'InMeeteiMayek',
'Meetei_Mayek_Extensions',
'IsLatinExtended-A',
'IPAExtensions',
'IsSundanese',
'InThai',
'IsLatinExtended-E',
'InTransport_and_Map_Symbols',
'Bopomofo_Extended',
'InEthiopicSupplement',
'Georgian',
'InBatak',
'InHangulJamoExtended-B',
'IsKaithi',
'InSora_Sompeng',
'IsCJK_Compatibility_Forms',
'MiscellaneousSymbolsandArrows',
'IsImperial_Aramaic',
'Pahawh_Hmong',
'IsImperialAramaic',
'IsOriya',
'IsPahawhHmong',
'IsMeroitic_Cursive',
'Phags-pa',
'IsKharoshthi',
'IsCoptic',
'SupplementalMathematicalOperators',
'InNew_Tai_Lue',
'IsTibetan',
'InCypriotSyllabary',
'IsSyriac',
'Domino_Tiles',
'IsBalinese',
'AncientSymbols',
'Buginese',
'InYiRadicals',
'InLatinExtended-C',
'InCJKCompatibilityIdeographs',
'InLatinExtended-A',
'InLetterlike_Symbols',
'InHighPrivateUseSurrogates',
'IsHangulJamo',
'IsOsmanya',
'IsEnclosed_Ideographic_Supplement',
'Geometric_Shapes',
'IsHangul_Jamo_Extended-B',
'InSundanese_Supplement',
'InMiscellaneous_Mathematical_Symbols-B',
'InTirhuta',
'InCJK_Unified_Ideographs_Extension_C',
'IsCJK_Unified_Ideographs_Extension_B',
'IsRejang',
'IsNumber_Forms',
'Ethiopic_Extended',
'IsDevanagari_Extended',
'ShorthandFormatControls',
'IsHangul_Jamo_Extended-A',
'IsPrivateUseArea',
'IsOld_Italic',
'IsSpacingModifierLetters',
'IsTifinagh',
'IsIPA_Extensions',
'TaiXuanJingSymbols',
'InShavian',
'InMiscellaneous_Symbols_and_Arrows',
'InTagbanwa',
'IsPsalterPahlavi',
'IsTamil',
'IsMiscellaneousTechnical',
'IsTirhuta',
'IsSupplementalMathematicalOperators',
'Inscriptional_Pahlavi',
'InHighSurrogates',
'Armenian',
'InVerticalForms',
'InAlphabetic_Presentation_Forms',
'IsAncientGreekMusicalNotation',
'MyanmarExtended-B',
'GeometricShapes',
'IsTai_Le',
'CurrencySymbols',
'Miscellaneous_Mathematical_Symbols-A',
'Greek_Extended',
'InEnclosed_CJK_Letters_and_Months',
'IsKhmer_Symbols',
'InArabic',
'IsCherokee',
'InCJKRadicalsSupplement',
'IsUnified_Canadian_Aboriginal_Syllabics',
'IsKhojki',
'IsCyrillic_Supplement',
'InHiragana',
'InSoraSompeng',
'IsCombining_Diacritical_Marks',
'IsSupplemental_Punctuation',
'InCJKCompatibilityForms',
'IsSupplementalArrows-C',
'IsCJK_Compatibility_Ideographs',
'InCoptic_Epact_Numbers',
'IsMiscellaneousMathematicalSymbols-A',
'IsSupplementalArrows-B',
'Old_Italic',
'IsMiscellaneousMathematicalSymbols-B',
'IsAncientSymbols',
'IsGeometricShapes',
'Shavian',
'InLatin-1Supplement',
'InTai_Viet',
'IsKangxi_Radicals',
'Tagalog',
'IsDuployan',
'IsKatakana_Phonetic_Extensions',
'IsMiao',
'InAegeanNumbers',
'IsOldPermic',
'MendeKikakui',
'InPau_Cin_Hau',
'Lycian',
'InInscriptional_Pahlavi',
'InMeetei_Mayek',
'MeeteiMayek',
'InCombining_Marks_for_Symbols',
'Alphabetic_Presentation_Forms',
'GeorgianSupplement',
'Duployan',
'IsSinhala_Archaic_Numbers',
'InCJK_Symbols_and_Punctuation',
'IsThaana',
'IsOrnamentalDingbats',
'Syloti_Nagri',
'InSpacing_Modifier_Letters',
'InKatakana',
'InTamil',
'IsLatin_Extended-E',
'Brahmi',
'CombiningDiacriticalMarks',
'CJK_Compatibility_Ideographs_Supplement',
'IsBuhid',
'IsLatin_Extended-D',
'InMyanmar',
'Meetei_Mayek',
'InNumber_Forms',
'InOldSouthArabian',
'InCurrency_Symbols',
'InSyloti_Nagri',
'IsNabataean',
'Linear_B_Ideograms',
'HangulJamoExtended-A',
'IsCJKUnifiedIdeographsExtensionC',
'IsCJKUnifiedIdeographsExtensionB',
'HangulJamoExtended-B',
'IsGeorgianSupplement',
'IsCJKUnifiedIdeographsExtensionA',
'InDevanagari_Extended',
'InSinhalaArchaicNumbers',
'CJK_Unified_Ideographs_Extension_D',
'CJK_Strokes',
'IsGeneral_Punctuation',
'InMahjong_Tiles',
'IsTransportandMapSymbols',
'InCyrillicSupplement',
'IsKangxiRadicals',
'Rumi_Numeral_Symbols',
'InMahjongTiles',
'Cyrillic_Extended-A',
'InCombiningDiacriticalMarksSupplement',
'Katakana_Phonetic_Extensions',
'IsPau_Cin_Hau',
'IsBatak',
'InNabataean',
'Supplemental_Mathematical_Operators',
'Ideographic_Description_Characters',
'IsIPAExtensions',
'InDingbats',
'IsGeorgian_Supplement',
'IdeographicDescriptionCharacters',
'IsShorthandFormatControls',
'IsHigh_Private_Use_Surrogates',
'InGeorgianSupplement',
'OldHungarian',
'IsRumi_Numeral_Symbols',
'OldPermic',
'IsGreek_Extended',
'IsMusical_Symbols',
'InKayahLi',
'IsLinear_A',
'Miscellaneous_Mathematical_Symbols-B',
'IsInscriptional_Parthian',
'IsSyloti_Nagri',
'InIdeographicDescriptionCharacters',
'InBamum_Supplement',
'IsLetterlikeSymbols',
'IsTags',
'Supplemental_Arrows-C',
'Supplemental_Arrows-B',
'InPhags-pa',
'Egyptian_Hieroglyphs',
'IsMiscellaneousSymbolsandArrows',
'InBamumSupplement',
'InDevanagari',
'IsCJKRadicalsSupplement',
'InGeometricShapesExtended',
'Khudawadi',
'InAncient_Greek_Musical_Notation',
'InMeroitic_Hieroglyphs',
'IsMandaic',
'UnifiedCanadianAboriginalSyllabicsExtended',
'ModifierToneLetters',
'InSaurashtra',
'IsSupplementary_Private_Use_Area-A',
'Mathematical_Operators',
'PsalterPahlavi',
'InArabicPresentationForms-B',
'InKangxi_Radicals',
'Latin_Extended-A',
'IsModifier_Tone_Letters',
'IsWarang_Citi',
'IsCyrillicExtended-B',
'InCham',
'Tirhuta',
'IsMongolian',
'InLatinExtendedAdditional',
'Dingbats',
'IsMyanmar',
'InMiscellaneousTechnical',
'Mro',
'SundaneseSupplement',
'InGeometricShapes',
'InArabicMathematicalAlphabeticSymbols',
'IsVai',
'AnatolianHieroglyphs',
'Braille_Patterns',
'Lao',
'InEthiopicExtended',
'IsMendeKikakui',
'Miscellaneous_Technical',
'AlchemicalSymbols',
'InKhmerSymbols',
'IsMahjongTiles',
'InHalfwidth_and_Fullwidth_Forms',
'IsUnifiedCanadianAboriginalSyllabicsExtended',
'InVariation_Selectors',
'YijingHexagramSymbols',
'CJKUnifiedIdeographsExtensionB',
'IsModifierToneLetters',
'InGothic',
'IsMiscellaneous_Mathematical_Symbols-A',
'InEnclosedAlphanumerics',
'IsCJKUnifiedIdeographsExtensionD',
'InLinearBSyllabary',
'InMandaic',
'InBuhid',
'IsCJK_Strokes',
'CJKCompatibilityIdeographsSupplement',
'IsShavian',
'InLycian',
'InCJKUnifiedIdeographsExtensionC',
'IsPhaistos_Disc',
'IsGeometric_Shapes',
'IsMende_Kikakui',
'InTakri',
'Myanmar',
'Supplemental_Arrows-A',
'IsTransport_and_Map_Symbols',
'LinearBIdeograms',
'AlphabeticPresentationForms',
'Pau_Cin_Hau',
'Palmyrene',
'IsBamum_Supplement',
'InPlaying_Cards',
'IsGlagolitic',
'IsSoraSompeng',
'InLinear_B_Syllabary',
'InOldPersian',
'AncientGreekNumbers',
'MahjongTiles',
'IsAncient_Greek_Numbers',
'IsVariationSelectorsSupplement',
'Meroitic_Cursive',
'InSupplementalSymbolsandPictographs',
'InOlChiki',
'OldItalic',
'IsEgyptianHieroglyphs',
'InTai_Xuan_Jing_Symbols',
'IsMeeteiMayek',
'IsCombiningHalfMarks',
'InVai',
'InRumiNumeralSymbols',
'Mongolian',
'InMathematical_Operators',
'Ancient_Greek_Numbers',
'IsBraillePatterns',
'Cypriot_Syllabary',
'IsInscriptionalPahlavi',
'InArabicExtended-A',
'InHangul_Jamo_Extended-B',
'Thai',
'Mende_Kikakui',
'CountingRodNumerals',
'BopomofoExtended',
'InCombiningDiacriticalMarks',
'Control_Pictures',
'Runic',
'IsHiragana',
'MyanmarExtended-A',
'InHangul_Compatibility_Jamo',
'Kanbun',
'IsHangul_Compatibility_Jamo',
'InGreekExtended',
'IsBopomofoExtended',
'InYijingHexagramSymbols',
'ArabicExtended-A',
'CJKUnifiedIdeographsExtensionE',
'Warang_Citi',
'CJKUnifiedIdeographsExtensionD',
'IsMeetei_Mayek_Extensions',
'LowSurrogates',
'Devanagari_Extended',
'CJKUnifiedIdeographsExtensionC',
'InGeneral_Punctuation',
'IsCJKSymbolsandPunctuation',
'CJKUnifiedIdeographsExtensionA',
'IsOldTurkic',
'IsSupplementary_Private_Use_Area-B',
'InEnclosed_Alphanumeric_Supplement',
'WarangCiti',
'OldNorthArabian',
'IsHebrew',
'IsCyrillicSupplement',
'IsModi',
'InLepcha',
'IsVerticalForms',
'IsTagalog',
'IsSupplemental_Mathematical_Operators',
'InLinear_B_Ideograms',
'Cuneiform',
'InKharoshthi',
'LatinExtended-C',
'CyrillicExtended-A',
'CyrillicExtended-B',
'InCherokeeSupplement',
'Spacing_Modifier_Letters',
'IsEnclosed_CJK_Letters_and_Months',
'IsLatinExtended-B',
'Gurmukhi',
'InMiscellaneous_Symbols',
'IsPauCinHau',
'IsLatinExtended-C',
'InOgham',
'InTifinagh',
'Hangul_Compatibility_Jamo',
'IsDominoTiles',
'RumiNumeralSymbols',
'InOpticalCharacterRecognition',
'Imperial_Aramaic',
'IsCJKCompatibility',
'CJK_Symbols_and_Punctuation',
'IsCJK_Radicals_Supplement',
'IsSupplemental_Symbols_and_Pictographs',
'Number_Forms',
'InBraille_Patterns',
'ArabicMathematicalAlphabeticSymbols',
'HangulCompatibilityJamo',
'IsAvestan',
'InUnified_Canadian_Aboriginal_Syllabics_Extended',
'IsMultani',
'IsTai_Tham',
'Arrows',
'MathematicalOperators',
'IsGreek_and_Coptic',
'EthiopicExtended',
'IsMiscellaneousSymbolsandPictographs',
'Lydian',
'InAncient_Greek_Numbers',
'MeroiticHieroglyphs',
'InMyanmar_Extended-B',
'Modi',
'InPauCinHau',
'InSupplemental_Arrows-A',
'InModi',
'InNKo',
'InMathematicalOperators',
'InSpacingModifierLetters',
'CombiningDiacriticalMarksforSymbols',
'InCombining_Diacritical_Marks_Supplement',
'MusicalSymbols',
'InOld_Italic',
'IsVariationSelectors',
'InCuneiformNumbersandPunctuation',
'Kana_Supplement',
'InMiscellaneous_Technical',
'InVedic_Extensions',
'OlChiki',
'IsSupplementalPunctuation',
'IsMathematicalAlphanumericSymbols',
'InCJK_Strokes',
'InBopomofoExtended',
'InCJKUnifiedIdeographs',
'Hangul_Jamo',
'Glagolitic',
'InAncientSymbols',
'InKhmer_Symbols',
'Avestan',
'LatinExtended-B',
'InBrahmi',
'Halfwidth_and_Fullwidth_Forms',
'InEthiopicExtended-A',
'IsSundaneseSupplement',
'Old_North_Arabian',
'IsTelugu',
'IsControlPictures',
'IsLatin-1_Supplement',
'InGeorgian_Supplement',
'InCombining_Diacritical_Marks',
'Combining_Diacritical_Marks_Extended',
'Greek_and_Coptic',
'VariationSelectorsSupplement',
'HangulJamo',
'IsPhags-pa',
'InMiscellaneousSymbolsandPictographs',
'InIPA_Extensions',
'InKana_Supplement',
'SupplementalArrows-B',
'IsArabic_Extended-A',
'IsArmenian',
'ArabicSupplement',
'IsCoptic_Epact_Numbers',
'EnclosedCJKLettersandMonths',
'InLatin_Extended-D',
'IsArabicMathematicalAlphabeticSymbols',
'InGeometric_Shapes_Extended',
'IsMalayalam',
'InCJKStrokes',
'InMeeteiMayekExtensions',
'InTransportandMapSymbols',
'InKatakanaPhoneticExtensions',
'IsSpacing_Modifier_Letters',
'OrnamentalDingbats',
'Ahom',
'IsMahajani',
'IsGujarati',
'IsCombining_Marks_for_Symbols',
'Small_Form_Variants',
'IsCommon_Indic_Number_Forms',
'CombiningDiacriticalMarksExtended',
'IsLydian',
'CJKCompatibilityForms',
'IsPhonetic_Extensions_Supplement',
'Ancient_Symbols',
'InNumberForms',
'Shorthand_Format_Controls',
'Khmer_Symbols',
'Siddham',
'IsMyanmar_Extended-A',
'InArabicPresentationForms-A',
'Counting_Rod_Numerals',
'InTai_Tham',
'IsMyanmar_Extended-B',
'IsSuperscriptsandSubscripts',
'InSupplementalArrows-A',
'InHangul_Syllables',
'Variation_Selectors',
'IsArabic',
'Unified_Canadian_Aboriginal_Syllabics',
'DominoTiles',
'IsUnified_Canadian_Aboriginal_Syllabics_Extended',
'InDominoTiles',
'InMongolian',
'Old_Persian',
'InCombiningDiacriticalMarksExtended',
'Yijing_Hexagram_Symbols',
'InLatinExtended-B',
'Modifier_Tone_Letters',
'InMiscellaneousMathematicalSymbols-B',
'InLowSurrogates',
'Combining_Diacritical_Marks_for_Symbols',
'Old_Turkic',
'InMiscellaneousMathematicalSymbols-A',
'InMeetei_Mayek_Extensions',
'InLisu',
'Sora_Sompeng',
'InCarian',
'IsBassaVah',
'IsPhoenician',
'IsArabicPresentationForms-B',
'InInscriptional_Parthian',
'IsBengali',
'AegeanNumbers',
'InAncient_Symbols',
'IsLepcha',
'IsEnclosed_Alphanumeric_Supplement',
'Telugu',
'InHigh_Private_Use_Surrogates',
'InSupplemental_Arrows-B',
'SupplementalPunctuation',
'InHangulJamo',
'Early_Dynastic_Cuneiform',
'IsYi_Radicals',
'IsLatinExtendedAdditional',
'InVariationSelectors',
'IsCherokee_Supplement',
'IsCurrencySymbols',
'InUnified_Canadian_Aboriginal_Syllabics',
'IsNumberForms',
'InCounting_Rod_Numerals',
'IsSmall_Form_Variants',
'InVedicExtensions',
'Myanmar_Extended-A',
'IsInscriptionalParthian',
'IsCombining_Diacritical_Marks_Supplement',
'IsPlaying_Cards',
'IsMathematicalOperators',
'InMende_Kikakui',
'IsCopticEpactNumbers',
'Combining_Half_Marks',
'Sinhala_Archaic_Numbers',
'CopticEpactNumbers',
'InCherokee_Supplement',
'InLatin_Extended-B',
'InInscriptionalParthian',
'InLatin_Extended-C',
'IsCombiningDiacriticalMarksExtended',
'InLatin_Extended-E',
'InLao',
'InLetterlikeSymbols',
'Ethiopic_Supplement',
'IsYijingHexagramSymbols',
'IsChakma',
'InHangulJamoExtended-A',
'InBengali',
'InArabicSupplement',
'IsKhmerSymbols',
'Enclosed_Alphanumerics',
'InHanunoo',
'InVariationSelectorsSupplement',
'IsEthiopic',
'IsSamaritan',
'CJK_Unified_Ideographs_Extension_E',
'TaiTham',
'CJK_Unified_Ideographs_Extension_A',
'CJK_Unified_Ideographs_Extension_C',
'InSupplemental_Punctuation',
'IsArabic_Mathematical_Alphabetic_Symbols',
'IsGeneralPunctuation',
'IsPlayingCards',
'InAncientGreekNumbers',
'InHangul_Jamo_Extended-A',
'Georgian_Supplement',
'Saurashtra',
'InTaiViet',
'LatinExtendedAdditional',
'InMeroiticCursive',
'IsAnatolian_Hieroglyphs',
'IsCJKStrokes',
'PahawhHmong',
'Hangul_Syllables',
'IsOrnamental_Dingbats',
'IsBopomofo',
'IsOldNorthArabian',
'CJKStrokes',
'InCountingRodNumerals',
'Cham',
'EthiopicExtended-A',
'InPhoneticExtensions',
'InOrnamentalDingbats',
'Lepcha',
'SuperscriptsandSubscripts',
'InNewTaiLue',
'Coptic_Epact_Numbers',
'TransportandMapSymbols',
'IsCommonIndicNumberForms',
'ByzantineMusicalSymbols',
'IsLatin_Extended_Additional',
'InSupplementalArrows-C',
'InSupplementalArrows-B',
'InYijing_Hexagram_Symbols',
'InCherokee',
'LetterlikeSymbols',
'KanaSupplement',
'InShorthand_Format_Controls',
'InCyrillic_Extended-A',
'IsHangulJamoExtended-A',
'IsOld_South_Arabian',
'Cuneiform_Numbers_and_Punctuation',
'InGujarati',
'InArabic_Extended-A',
'AncientGreekMusicalNotation',
'InPrivateUseArea',
'Devanagari',
'IsHangulJamoExtended-B',
'IsSupplementaryPrivateUseArea-B',
'Phonetic_Extensions',
'Old_Permic',
'KhmerSymbols',
'InThaana',
'InOldTurkic',
'InPahawh_Hmong',
'InKangxiRadicals',
'Mandaic',
'Tai_Tham',
'InOldPermic',
'IsPhonetic_Extensions',
'Miscellaneous_Symbols_and_Pictographs',
'IsVedic_Extensions',
'SupplementaryPrivateUseArea-A',
'SupplementaryPrivateUseArea-B',
'InVariation_Selectors_Supplement',
'MathematicalAlphanumericSymbols',
'InCombiningHalfMarks',
'IsUnifiedCanadianAboriginalSyllabics',
'Yi_Syllables',
'IsOldPersian',
'VariationSelectors',
'IsKayahLi',
'Low_Surrogates',
'KatakanaPhoneticExtensions',
'InPhonetic_Extensions',
'Javanese',
'Hanunoo',
'IsPalmyrene',
'Ol_Chiki',
'IsOgham',
'InKhudawadi',
'InBalinese',
'IsPhaistosDisc',
'InCJK_Radicals_Supplement',
'GreekandCoptic',
'IsOptical_Character_Recognition',
'MiscellaneousMathematicalSymbols-B',
'BoxDrawing',
'Carian',
'InControl_Pictures',
'Sundanese_Supplement',
'InMyanmarExtended-B',
'Bengali',
'Supplemental_Punctuation',
'IsMiscellaneous_Mathematical_Symbols-B',
'Cherokee_Supplement',
'IsSinhala',
'IsGreekandCoptic',
'IsSupplementalArrows-A',
'InSuttonSignWriting',
'IsHatran',
'InIPAExtensions',
'IsMathematical_Alphanumeric_Symbols',
'IsTagbanwa',
'IsSuperscripts_and_Subscripts',
'IsPhoneticExtensionsSupplement',
'Linear_B_Syllabary',
'Lisu',
'IsCJK_Unified_Ideographs_Extension_C',
'IsMathematical_Operators',
'InPsalter_Pahlavi',
'IsEnclosed_Alphanumerics',
'InInscriptionalPahlavi',
'InOld_Turkic',
'InCommon_Indic_Number_Forms',
'Enclosed_Alphanumeric_Supplement',
'Ancient_Greek_Musical_Notation',
'MeroiticCursive',
'IsCombiningMarksforSymbols',
'InCyrillic_Extended-B',
'High_Private_Use_Surrogates',
'InAlchemicalSymbols',
'Elbasan',
'IsCJK_Symbols_and_Punctuation',
'InLatinExtended-E',
'CJK_Radicals_Supplement',
'InLatinExtended-D',
'Latin_Extended-D',
'Latin_Extended-E',
'Limbu',
'IsRumiNumeralSymbols',
'IsAlphabeticPresentationForms',
'PhoneticExtensions',
'Latin_Extended-B',
'Latin_Extended-C',
'IsNKo',
'InOriya',
'IsMiscellaneous_Technical',
'TaiLe',
'HalfwidthandFullwidthForms',
'Tifinagh',
'Arabic_Presentation_Forms-A',
'InKannada',
'IsSharada',
'PlayingCards',
'InMathematical_Alphanumeric_Symbols',
'InChakma',
'Meroitic_Hieroglyphs',
'Supplementary_Private_Use_Area-B',
'InAhom',
'IsAlphabetic_Presentation_Forms',
'IsArabicSupplement',
'IsCyrillic_Extended-B',
'IsCyrillic_Extended-A',
'Alchemical_Symbols',
'CommonIndicNumberForms',
'CombiningMarksforSymbols',
'InMultani',
'InUnifiedCanadianAboriginalSyllabics',
'InSmall_Form_Variants',
'Specials',
'IsCJKCompatibilityIdeographsSupplement',
'InBassa_Vah',
'InArabic_Supplement',
'InTai_Le',
'Tagbanwa',
'IsNew_Tai_Lue',
'Bopomofo',
'InBamum',
'IsMeroitic_Hieroglyphs',
'InAncientGreekMusicalNotation',
'InEgyptian_Hieroglyphs',
'Hatran',
'SoraSompeng',
'LinearA',
'IsLetterlike_Symbols',
'InElbasan',
'InMusicalSymbols',
'InTaiLe',
'Tai_Viet',
'Kaithi',
'Mahajani',
'HangulSyllables',
'InscriptionalPahlavi',
'IsLatin-1Supplement',
'Byzantine_Musical_Symbols',
'Ogham',
'Aegean_Numbers',
'IsUgaritic',
'IsKhmer',
'Cyrillic',
'Phoenician',
'IsMahjong_Tiles',
'YiSyllables',
'CombiningDiacriticalMarksSupplement',
'IsControl_Pictures',
'IsTaiLe',
'IsMeroiticCursive',
'IsCypriotSyllabary',
'IsHanunoo',
'IsAnatolianHieroglyphs',
'Myanmar_Extended-B',
'IsCombining_Diacritical_Marks_Extended',
'IsSinhalaArchaicNumbers',
'IsLinearBIdeograms',
'InUnifiedCanadianAboriginalSyllabicsExtended',
'Optical_Character_Recognition',
'VerticalForms',
'IsVariation_Selectors',
'InBassaVah',
'IsCJK_Compatibility_Ideographs_Supplement',
'Bamum',
'InMathematicalAlphanumericSymbols',
'IsHalfwidth_and_Fullwidth_Forms',
'IsKannada',
'InMyanmarExtended-A',
'InOldHungarian',
'IsCypriot_Syllabary',
'InDomino_Tiles',
'IsEthiopic_Extended',
'InDeseret',
'CherokeeSupplement',
'IsKatakanaPhoneticExtensions',
'InVertical_Forms',
'InAnatolian_Hieroglyphs',
'InSmallFormVariants',
'IsSundanese_Supplement',
'TaiViet',
'IsManichaean',
'Hangul_Jamo_Extended-B',
'Currency_Symbols',
'CJKSymbolsandPunctuation',
'ControlPictures',
'IsEnclosedIdeographicSupplement',
'InCJK_Compatibility',
'InCyrillicExtended-A',
'InCyrillicExtended-B',
'Coptic',
'Combining_Diacritical_Marks',
'InSupplementary_Private_Use_Area-B',
'CJKRadicalsSupplement',
'InCombiningMarksforSymbols',
'InImperialAramaic',
'IsPahawh_Hmong',
'InAnatolianHieroglyphs',
'IsArabic_Supplement',
'IsByzantine_Musical_Symbols',
'IsTakri',
'CJKCompatibilityIdeographs',
'EnclosedIdeographicSupplement',
'InByzantineMusicalSymbols',
'IsBopomofo_Extended',
'Enclosed_CJK_Letters_and_Months',
'IsCyrillic',
'CJK_Compatibility_Ideographs',
'IsOld_North_Arabian',
'IsArabicPresentationForms-A',
'InLatin-1_Supplement',
'InOptical_Character_Recognition',
'Supplemental_Symbols_and_Pictographs',
'Sutton_SignWriting',
'IsYi_Syllables',
'InGeneralPunctuation',
'BassaVah',
'InSyriac',
'HighSurrogates',
'IsCombiningDiacriticalMarksSupplement',
'Ethiopic_Extended-A',
'Ethiopic',
'IsCyrillicExtended-A',
'InTagalog',
'EnclosedAlphanumericSupplement',
'CaucasianAlbanian',
'InEarlyDynasticCuneiform',
'Malayalam',
'CJK_Unified_Ideographs',
'InSylotiNagri',
'InTaiXuanJingSymbols',
'Anatolian_Hieroglyphs',
'IsElbasan',
'InCyrillic_Supplement',
'InKhmer',
'UnifiedCanadianAboriginalSyllabics',
'InEthiopic_Extended-A',
'IsHalfwidthandFullwidthForms',
'IsEarlyDynasticCuneiform',
'IsAncient_Greek_Musical_Notation',
'Linear_A',
'IsYiRadicals',
'InPhoenician',
'InBuginese',
'Gujarati',
'IsOld_Permic',
'Bamum_Supplement',
'IsAlchemical_Symbols',
'Old_South_Arabian',
'InMiscellaneous_Mathematical_Symbols-A',
'InMro',
'Hiragana',
'IsNewTaiLue',
'IsCJK_Unified_Ideographs_Extension_A',
'IsVariation_Selectors_Supplement',
'InOld_Permic',
'IsCJK_Unified_Ideographs_Extension_D',
'IsCJK_Unified_Ideographs_Extension_E',
'CypriotSyllabary',
'InSupplemental_Mathematical_Operators',
'Transport_and_Map_Symbols',
'InRejang',
'Tamil',
'InHigh_Surrogates',
'IsSupplemental_Arrows-B',
'InSinhala_Archaic_Numbers',
'Manichaean',
'MiscellaneousSymbolsandPictographs',
'IsEthiopic_Extended-A',
'InCombining_Half_Marks',
'InLinear_A',
'InGurmukhi',
'IsArrows',
'IsOlChiki',
'IsIdeographic_Description_Characters',
'InCopticEpactNumbers'
);

      FLREUnicodeBlockHashMapValueBits=16;

      FLREUnicodeBlockHashMapValues:array[0..1289] of word=(
14,
61,
16,
174,
160,
259,
229,
81,
227,
7,
188,
90,
20,
17,
210,
11,
146,
113,
130,
37,
116,
91,
147,
113,
86,
37,
56,
143,
159,
221,
118,
94,
155,
116,
214,
217,
97,
237,
147,
255,
198,
253,
126,
116,
149,
258,
72,
250,
210,
64,
220,
22,
173,
62,
84,
193,
251,
153,
79,
178,
232,
256,
170,
202,
60,
2,
3,
93,
187,
87,
81,
102,
6,
145,
198,
15,
206,
80,
223,
49,
105,
149,
239,
80,
159,
219,
108,
157,
120,
153,
151,
109,
212,
50,
238,
97,
29,
221,
184,
173,
167,
161,
64,
117,
165,
78,
218,
156,
11,
219,
7,
4,
36,
69,
228,
165,
79,
28,
111,
172,
163,
160,
126,
194,
257,
147,
250,
244,
117,
37,
197,
44,
112,
32,
62,
241,
165,
112,
234,
157,
151,
242,
157,
138,
242,
19,
118,
60,
133,
29,
51,
249,
221,
247,
162,
261,
260,
69,
173,
26,
71,
86,
34,
251,
57,
38,
119,
135,
260,
162,
123,
67,
196,
85,
70,
107,
155,
9,
246,
203,
2,
234,
99,
190,
230,
124,
91,
128,
57,
150,
178,
223,
142,
83,
69,
66,
179,
41,
232,
131,
201,
225,
216,
124,
228,
92,
183,
143,
105,
12,
67,
169,
165,
205,
83,
108,
148,
161,
186,
130,
192,
253,
32,
260,
123,
80,
8,
1,
244,
169,
19,
70,
35,
64,
17,
30,
136,
80,
200,
178,
129,
170,
232,
145,
62,
145,
82,
246,
198,
10,
136,
174,
134,
78,
250,
91,
13,
133,
228,
176,
194,
218,
226,
81,
255,
190,
182,
55,
49,
204,
141,
196,
157,
83,
151,
101,
113,
162,
76,
176,
73,
137,
103,
260,
80,
154,
71,
237,
137,
37,
116,
220,
67,
208,
154,
189,
243,
125,
220,
230,
224,
79,
210,
83,
249,
66,
81,
71,
198,
212,
247,
243,
27,
207,
158,
235,
245,
114,
215,
253,
240,
148,
251,
81,
48,
256,
155,
209,
87,
107,
68,
71,
156,
115,
74,
58,
31,
252,
146,
83,
180,
2,
195,
121,
190,
216,
227,
138,
231,
219,
53,
181,
237,
129,
258,
46,
257,
130,
225,
252,
5,
252,
244,
148,
81,
197,
191,
234,
181,
9,
77,
51,
113,
122,
256,
65,
143,
166,
114,
132,
160,
140,
71,
191,
246,
106,
129,
102,
235,
172,
54,
34,
239,
148,
207,
164,
117,
231,
64,
219,
139,
236,
250,
178,
68,
63,
101,
187,
130,
237,
24,
205,
118,
216,
35,
41,
125,
1,
178,
245,
87,
54,
196,
179,
199,
142,
138,
2,
4,
57,
30,
140,
248,
109,
37,
34,
58,
144,
201,
202,
155,
91,
181,
226,
181,
24,
226,
188,
127,
189,
94,
90,
51,
32,
180,
13,
241,
56,
164,
53,
118,
93,
149,
2,
72,
146,
35,
176,
244,
82,
144,
61,
89,
211,
254,
253,
131,
73,
97,
129,
230,
132,
148,
169,
5,
96,
4,
234,
175,
91,
45,
196,
25,
76,
211,
90,
195,
145,
10,
153,
150,
233,
134,
82,
50,
70,
85,
67,
112,
52,
12,
38,
100,
39,
207,
9,
104,
202,
6,
99,
155,
251,
149,
168,
85,
88,
169,
89,
164,
82,
175,
1,
137,
101,
42,
229,
111,
227,
162,
171,
238,
217,
166,
195,
142,
142,
71,
150,
95,
229,
206,
103,
15,
247,
125,
5,
105,
25,
140,
200,
6,
257,
44,
124,
33,
142,
73,
190,
70,
125,
183,
161,
132,
254,
253,
144,
95,
114,
129,
206,
255,
110,
68,
240,
248,
9,
101,
199,
240,
98,
65,
111,
217,
58,
183,
90,
102,
4,
84,
95,
102,
230,
146,
95,
198,
199,
171,
67,
232,
130,
179,
89,
194,
125,
102,
223,
72,
258,
251,
88,
127,
221,
91,
223,
20,
100,
250,
209,
233,
187,
18,
48,
123,
128,
260,
75,
196,
157,
101,
2,
123,
216,
121,
135,
211,
47,
66,
84,
33,
76,
224,
61,
82,
239,
120,
222,
87,
31,
97,
238,
76,
249,
52,
240,
158,
48,
152,
115,
253,
123,
170,
85,
79,
255,
160,
18,
44,
110,
257,
175,
166,
254,
165,
82,
238,
214,
33,
86,
248,
161,
150,
217,
182,
223,
242,
92,
202,
160,
173,
163,
240,
163,
259,
188,
252,
60,
169,
221,
234,
142,
154,
120,
199,
47,
75,
163,
87,
180,
195,
19,
144,
30,
238,
235,
109,
6,
77,
41,
104,
136,
107,
108,
107,
67,
109,
115,
19,
256,
216,
255,
138,
147,
129,
254,
68,
103,
114,
197,
261,
243,
216,
191,
11,
9,
213,
59,
153,
42,
90,
161,
218,
189,
93,
98,
121,
141,
5,
112,
3,
22,
83,
217,
93,
40,
96,
107,
241,
199,
78,
181,
113,
103,
100,
252,
73,
87,
239,
107,
193,
48,
208,
54,
74,
75,
7,
97,
245,
186,
163,
187,
134,
213,
217,
86,
213,
16,
75,
5,
71,
65,
232,
169,
152,
219,
228,
76,
62,
60,
99,
236,
110,
109,
116,
35,
92,
164,
52,
193,
3,
200,
158,
139,
61,
191,
26,
77,
1,
95,
6,
55,
7,
259,
35,
127,
245,
4,
228,
88,
19,
10,
14,
168,
112,
124,
239,
250,
28,
110,
138,
248,
111,
5,
247,
215,
204,
23,
71,
156,
126,
55,
186,
155,
64,
164,
73,
230,
52,
212,
136,
151,
235,
54,
134,
69,
86,
143,
152,
12,
39,
241,
48,
241,
47,
173,
55,
115,
3,
123,
89,
147,
71,
197,
85,
138,
119,
202,
167,
225,
185,
157,
194,
21,
162,
164,
59,
243,
26,
146,
88,
99,
35,
220,
118,
66,
152,
141,
70,
39,
73,
235,
156,
62,
136,
194,
65,
242,
75,
238,
168,
154,
206,
168,
141,
3,
194,
93,
55,
140,
31,
72,
37,
115,
203,
132,
21,
14,
52,
79,
43,
259,
36,
17,
256,
54,
114,
254,
99,
239,
68,
242,
163,
132,
95,
128,
137,
66,
188,
222,
110,
226,
143,
247,
106,
191,
110,
235,
135,
139,
63,
247,
59,
69,
51,
168,
248,
126,
231,
66,
251,
88,
115,
38,
72,
228,
230,
98,
132,
190,
219,
23,
19,
233,
148,
20,
144,
261,
63,
171,
52,
15,
197,
226,
101,
18,
54,
171,
63,
245,
62,
260,
261,
259,
236,
154,
39,
117,
173,
152,
130,
147,
111,
63,
133,
43,
182,
60,
40,
209,
56,
165,
100,
7,
78,
89,
80,
167,
77,
61,
134,
21,
99,
89,
141,
29,
7,
86,
237,
184,
4,
236,
45,
69,
64,
160,
119,
254,
75,
196,
79,
195,
197,
126,
243,
233,
188,
71,
121,
146,
249,
177,
103,
140,
100,
124,
124,
140,
49,
199,
150,
63,
3,
93,
16,
24,
76,
50,
158,
96,
151,
27,
205,
242,
236,
203,
187,
261,
215,
150,
14,
121,
98,
249,
126,
71,
208,
39,
156,
159,
257,
225,
14,
50,
45,
51,
106,
122,
187,
233,
221,
184,
202,
179,
72,
177,
232,
50,
137,
201,
204,
143,
195,
1,
231,
40,
162,
172,
46,
8,
185,
240,
117,
65,
77,
50,
188,
180,
43,
222,
134,
55,
206,
161,
48,
78,
153,
152,
225,
257,
122,
236,
158,
27,
136,
198,
180,
241,
97,
174,
141,
111,
153,
222,
156,
61,
137,
192,
144,
70,
103,
77,
244,
113,
98,
121,
94,
6,
261,
100,
71,
181,
226,
222,
14,
231,
214,
149,
244,
231,
109,
112,
8,
149,
191,
151,
1,
78,
252,
237,
117,
68,
225,
13,
145,
65,
139,
36,
98,
42,
243,
178,
220,
28,
116,
125,
234,
222,
177,
9,
46,
39,
139,
158,
220,
233,
179,
118,
185,
53,
23,
171,
223,
249,
190,
85,
224,
104,
51,
114,
259,
171,
255,
256,
180,
90,
248,
131,
25,
145,
88,
206,
192,
245,
139,
154,
179,
22,
74,
60,
102,
168
);

const FLREUnicodeAdditionalBlockHashMapSeedSize=24;
      FLREUnicodeAdditionalBlockHashMapValueSize=24;
      FLREUnicodeAdditionalBlockHashMapSize=24;

      FLREUnicodeAdditionalBlockHashMapSeedBits=8;

      FLREUnicodeAdditionalBlockHashMapSeeds:array[0..23] of shortint=(
-24,
0,
2,
0,
-21,
0,
0,
2,
-12,
1,
0,
1,
0,
-9,
1,
0,
0,
2,
-5,
-3,
3,
1,
4,
0
);

      FLREUnicodeAdditionalBlockHashMapKeys:array[0..23] of TFLRERawByteString=(
'xmlC',
'xmlI',
'IsxmlC',
'InxmlC',
'_xmlC',
'IsxmlI',
'IsxmlD',
'xmlW',
'In_xmlW',
'_xmlD',
'Is_xmlC',
'_xmlI',
'In_xmlC',
'Is_xmlD',
'InxmlD',
'In_xmlI',
'IsxmlW',
'In_xmlD',
'_xmlW',
'Is_xmlW',
'InxmlI',
'InxmlW',
'Is_xmlI',
'xmlD'
);

      FLREUnicodeAdditionalBlockHashMapValueBits=8;

      FLREUnicodeAdditionalBlockHashMapValues:array[0..23] of byte=(
0,
2,
0,
0,
0,
2,
1,
3,
3,
1,
0,
2,
0,
1,
1,
2,
3,
1,
3,
3,
2,
3,
2,
1
);

const FLREUnicodeClassLowerCaseHashMapSeedSize=297;
      FLREUnicodeClassLowerCaseHashMapValueSize=297;
      FLREUnicodeClassLowerCaseHashMapSize=297;

      FLREUnicodeClassLowerCaseHashMapSeedBits=16;

      FLREUnicodeClassLowerCaseHashMapSeeds:array[0..296] of smallint=(
0,
0,
1,
0,
0,
-297,
0,
-293,
-291,
-287,
1,
0,
0,
-286,
1,
0,
0,
-283,
0,
0,
-280,
0,
0,
0,
-272,
1,
0,
1,
-271,
1,
1,
-268,
0,
1,
-266,
0,
0,
1,
1,
3,
-262,
-259,
0,
0,
0,
-257,
0,
1,
1,
3,
-251,
0,
-248,
1,
-244,
0,
-234,
0,
0,
0,
-231,
2,
-227,
1,
0,
-224,
1,
-222,
2,
0,
1,
3,
-221,
1,
0,
-218,
3,
4,
0,
-213,
1,
-212,
0,
-211,
-210,
0,
1,
0,
0,
-204,
-203,
-189,
1,
-186,
-185,
1,
0,
3,
-184,
9,
0,
-181,
-178,
0,
-176,
1,
1,
-175,
-171,
-169,
1,
2,
0,
0,
-166,
0,
-165,
0,
4,
-164,
0,
2,
-162,
-158,
-156,
0,
0,
0,
1,
-147,
0,
0,
0,
0,
0,
0,
4,
0,
0,
-146,
0,
-145,
-144,
0,
4,
1,
0,
0,
-139,
0,
0,
1,
-137,
-132,
-130,
0,
-128,
0,
0,
1,
-126,
7,
0,
1,
1,
0,
0,
-124,
1,
-123,
0,
0,
-122,
5,
-118,
0,
-116,
1,
-115,
0,
0,
4,
0,
-112,
-107,
0,
-105,
-104,
-101,
2,
0,
-100,
-97,
0,
-96,
0,
-94,
-87,
0,
0,
-83,
-78,
5,
1,
0,
2,
1,
13,
0,
1,
-76,
-73,
2,
0,
0,
1,
-72,
2,
4,
-63,
1,
-61,
-60,
4,
1,
7,
0,
-58,
1,
6,
8,
2,
-57,
-56,
-54,
-48,
5,
0,
-44,
-40,
-36,
6,
2,
-35,
0,
0,
-30,
1,
-29,
13,
-24,
0,
4,
0,
2,
0,
2,
0,
11,
5,
0,
0,
-23,
-22,
4,
0,
8,
3,
0,
0,
-19,
0,
-16,
0,
-13,
0,
0,
0,
0,
-11,
0,
0,
0,
2,
-9,
19,
-6,
0,
0,
-2,
7,
0,
0,
7,
2,
-1,
10
);

      FLREUnicodeClassLowerCaseHashMapKeys:array[0..296] of TFLRERawByteString=(
'islowercase_letter',
'inlowercase_letter',
'innumber',
'inp',
'inclosepunctuation',
'istitlecase_letter',
'inpo',
'so',
'inother_number',
'intitlecaseletter',
'ismodifier_symbol',
'currency_symbol',
'currencysymbol',
'uppercaseletter',
'isnon_spacing_mark',
'othernumber',
'iscurrency_symbol',
'unassigned',
'isnl',
'inmark',
'openpunctuation',
'inseperator',
'isnd',
'isopenpunctuation',
'insymbol',
'inmodifier_symbol',
'line_separator',
'isz',
'isco',
'pc',
'enclosing_mark',
'ininitial_punctuation',
'isnonspacingmark',
'isletter_number',
'pf',
'pe',
'ismathsymbol',
'isother',
'ismark',
'iscf',
'isdash_punctuation',
'inzs',
'isnumber',
'format',
'isother_number',
'initialpunctuation',
'inother_punctuation',
'inenclosingmark',
'isenclosingmark',
'ispc',
'inparagraph_separator',
'titlecase_letter',
'incurrency_symbol',
'po',
'inlm',
'innd',
'symbol',
'inletter_number',
'inpunctuation',
'decimaldigitnumber',
'co',
'inother',
'inzp',
'dashpunctuation',
'indecimal_digit_number',
'inc',
'space_separator',
'inletternumber',
'issm',
'intitlecase_letter',
'issc',
'isenclosing_mark',
'inso',
'inconnectorpunctuation',
'inl',
'ispd',
'isno',
'cs',
'punctuation',
'othersymbol',
'ps',
'nonspacingmark',
'isline_separator',
'inps',
'isinitial_punctuation',
'isother_symbol',
'ispi',
'informat',
'inz',
'issymbol',
'ispunctuation',
'zl',
'ispf',
'isparagraphseparator',
'zs',
'iszp',
'inprivateuse',
'inspace_separator',
'other',
'iszs',
'inothersymbol',
'inpe',
'inpf',
'isothersymbol',
'surrogate',
'uppercase_letter',
'modifier_letter',
'ismath_symbol',
'spacingcombiningmark',
'modifier_symbol',
'isunassigned',
'isother_letter',
'incs',
'isspacingcombiningmark',
'isopen_punctuation',
'dash_punctuation',
'ismodifiersymbol',
'seperator',
'modifiersymbol',
'issurrogate',
'inmodifierletter',
'infinal_punctuation',
'decimal_digit_number',
'inprivate_use',
'inco',
'inll',
'inspacing_combining_mark',
'inother_symbol',
'inopenpunctuation',
'isuppercaseletter',
'insurrogate',
'inlu',
'isspacing_combining_mark',
'incf',
'infinalpunctuation',
'indashpunctuation',
'inlt',
'initial_punctuation',
'isconnector_punctuation',
'inspacingcombiningmark',
'pd',
'ismodifier_letter',
'inparagraphseparator',
'inmn',
'finalpunctuation',
'private_use',
'iscurrencysymbol',
'inotherpunctuation',
'indash_punctuation',
'iscn',
'modifierletter',
'other_punctuation',
'ismc',
'incc',
'inlowercaseletter',
'inclose_punctuation',
'isme',
'isso',
'titlecaseletter',
'paragraph_separator',
'isparagraph_separator',
'isspace_separator',
'otherpunctuation',
'issk',
'otherletter',
'close_punctuation',
's',
'inmathsymbol',
'mathsymbol',
'other_letter',
'inn',
'inothernumber',
'inlo',
'iszl',
'inm',
'inpd',
'islt',
'zp',
'istitlecaseletter',
'isdecimaldigitnumber',
'inpi',
'letter_number',
'c',
'math_symbol',
'incurrencysymbol',
'privateuse',
'nd',
'insk',
'lt',
'insm',
'inspaceseparator',
'isother_punctuation',
'iscc',
'isinitialpunctuation',
'nl',
'ininitialpunctuation',
'm',
'ismn',
'iscs',
'islm',
'isc',
'isps',
'lu',
'mn',
'final_punctuation',
'isn',
'iscontrol',
'isl',
'inlineseparator',
'me',
'lowercaseletter',
'incn',
'inopen_punctuation',
'spaceseparator',
'isseperator',
'spacing_combining_mark',
'iss',
'isfinal_punctuation',
'lo',
'isp',
'islo',
'll',
'isprivate_use',
'non_spacing_mark',
'ispe',
'ins',
'islu',
'lowercase_letter',
'isothernumber',
'inuppercase_letter',
'isconnectorpunctuation',
'isspaceseparator',
'open_punctuation',
'isotherletter',
'ispo',
'cn',
'inmodifier_letter',
'letternumber',
'lineseparator',
'inmath_symbol',
'isprivateuse',
'isotherpunctuation',
'isll',
'l',
'innl',
'closepunctuation',
'other_symbol',
'n',
'inotherletter',
'inme',
'p',
'inmc',
'inzl',
'isletternumber',
'incontrol',
'isformat',
'sc',
'inpc',
'indecimaldigitnumber',
'pi',
'sk',
'z',
'sm',
'enclosingmark',
'connectorpunctuation',
'innonspacingmark',
'isdecimal_digit_number',
'innon_spacing_mark',
'other_number',
'cf',
'ism',
'inuppercaseletter',
'cc',
'inother_letter',
'inno',
'number',
'insc',
'inunassigned',
'mc',
'islineseparator',
'isclose_punctuation',
'control',
'connector_punctuation',
'paragraphseparator',
'inmodifiersymbol',
'inenclosing_mark',
'mark',
'islowercaseletter',
'isfinalpunctuation',
'inline_separator',
'isuppercase_letter',
'lm',
'no',
'isclosepunctuation',
'inconnector_punctuation',
'isdashpunctuation',
'ismodifierletter'
);

      FLREUnicodeClassLowerCaseHashMapValueBits=32;

      FLREUnicodeClassLowerCaseHashMapValues:array[0..296] of longword=(
4,
4,
3584,
821559296,
2097152,
8,
8388608,
134217728,
2048,
8,
67108864,
33554432,
33554432,
2,
64,
2048,
33554432,
1,
1024,
448,
1048576,
28672,
512,
1048576,
251658240,
67108864,
8192,
28672,
131072,
4194304,
128,
268435456,
64,
1024,
536870912,
2097152,
16777216,
491521,
448,
65536,
524288,
4096,
3584,
32768,
2048,
268435456,
8388608,
128,
128,
4194304,
16384,
8,
33554432,
8388608,
16,
512,
251658240,
1024,
821559296,
512,
131072,
491521,
16384,
524288,
512,
491521,
4096,
1024,
16777216,
8,
33554432,
128,
134217728,
4194304,
62,
524288,
2048,
262144,
821559296,
134217728,
1048576,
64,
8192,
1048576,
268435456,
134217728,
268435456,
32768,
28672,
251658240,
821559296,
8192,
536870912,
16384,
4096,
16384,
131072,
4096,
491521,
4096,
134217728,
2097152,
536870912,
134217728,
262144,
2,
16,
16777216,
256,
67108864,
1,
32,
262144,
256,
1048576,
524288,
67108864,
28672,
67108864,
262144,
16,
536870912,
512,
131072,
131072,
4,
256,
134217728,
1048576,
2,
262144,
2,
256,
65536,
536870912,
524288,
8,
268435456,
4194304,
256,
524288,
16,
16384,
64,
536870912,
131072,
33554432,
8388608,
524288,
1,
16,
8388608,
256,
32768,
4,
2097152,
128,
134217728,
8,
16384,
16384,
4096,
8388608,
67108864,
32,
2097152,
251658240,
16777216,
16777216,
32,
3584,
2048,
32,
8192,
448,
524288,
8,
16384,
8,
512,
268435456,
1024,
491521,
16777216,
33554432,
131072,
512,
67108864,
8,
16777216,
4096,
8388608,
32768,
268435456,
1024,
268435456,
448,
64,
262144,
16,
491521,
1048576,
2,
64,
536870912,
3584,
32768,
62,
8192,
128,
4,
1,
1048576,
4096,
28672,
256,
251658240,
536870912,
32,
821559296,
32,
4,
131072,
64,
2097152,
251658240,
2,
4,
2048,
2,
4194304,
4096,
1048576,
32,
8388608,
1,
16,
1024,
8192,
16777216,
131072,
8388608,
4,
62,
1024,
2097152,
134217728,
3584,
32,
128,
821559296,
256,
8192,
1024,
32768,
32768,
33554432,
4194304,
512,
268435456,
67108864,
28672,
16777216,
128,
4194304,
64,
512,
64,
2048,
65536,
448,
2,
32768,
32,
2048,
3584,
33554432,
1,
256,
8192,
2097152,
32768,
4194304,
16384,
67108864,
128,
448,
4,
536870912,
8192,
2,
16,
2048,
2097152,
4194304,
524288,
16
);

const FLREUnicodeScriptLowerCaseHashMapSeedSize=495;
      FLREUnicodeScriptLowerCaseHashMapValueSize=495;
      FLREUnicodeScriptLowerCaseHashMapSize=495;

      FLREUnicodeScriptLowerCaseHashMapSeedBits=16;

      FLREUnicodeScriptLowerCaseHashMapSeeds:array[0..494] of smallint=(
1,
0,
0,
-493,
0,
-492,
-491,
0,
-489,
-488,
0,
0,
-486,
0,
-484,
0,
1,
-483,
1,
-481,
-477,
-476,
0,
6,
2,
-475,
-474,
-473,
1,
0,
-471,
-470,
-469,
0,
-459,
0,
0,
0,
-452,
-450,
1,
1,
0,
1,
-449,
3,
0,
-445,
-444,
-441,
1,
1,
-439,
0,
0,
5,
-438,
-436,
-434,
1,
-431,
-427,
0,
0,
0,
-423,
0,
-421,
0,
1,
0,
-420,
-419,
-412,
0,
3,
5,
1,
0,
0,
0,
0,
0,
-411,
3,
1,
2,
1,
-410,
-404,
-403,
1,
-402,
0,
0,
-401,
-398,
1,
1,
0,
0,
-397,
-395,
2,
-392,
0,
0,
2,
-388,
0,
1,
1,
1,
0,
6,
-378,
4,
0,
1,
-377,
0,
0,
1,
1,
-376,
-373,
-372,
1,
0,
-366,
1,
-360,
-354,
0,
-349,
-345,
0,
-342,
0,
-341,
0,
3,
1,
-339,
-334,
1,
0,
0,
0,
0,
1,
-331,
0,
1,
-330,
-329,
2,
-323,
-322,
-321,
0,
6,
-319,
6,
0,
0,
-314,
3,
-310,
0,
0,
2,
0,
1,
0,
0,
-306,
1,
-303,
1,
2,
-300,
5,
1,
-299,
-295,
2,
3,
-294,
-289,
-288,
1,
1,
0,
1,
-286,
0,
-285,
1,
-281,
0,
0,
2,
0,
-280,
-279,
-275,
1,
0,
-274,
1,
-273,
0,
0,
0,
0,
-271,
-265,
2,
8,
-264,
-261,
0,
1,
0,
0,
0,
-260,
-259,
0,
-258,
-255,
0,
-254,
0,
0,
1,
5,
2,
-249,
4,
1,
0,
0,
0,
4,
0,
0,
0,
-245,
0,
-243,
0,
-240,
1,
-235,
-234,
4,
7,
1,
-233,
1,
-232,
-231,
0,
0,
0,
10,
-230,
-227,
0,
0,
-225,
-219,
0,
0,
-218,
0,
-217,
6,
0,
-216,
0,
1,
-215,
-213,
-210,
0,
-206,
-200,
0,
-197,
-196,
3,
0,
0,
-191,
1,
0,
-187,
0,
1,
0,
0,
0,
3,
-184,
-183,
1,
9,
0,
0,
0,
6,
-181,
-174,
0,
1,
-173,
-171,
1,
-166,
-164,
-162,
0,
0,
6,
2,
7,
0,
0,
0,
4,
-154,
0,
-152,
-151,
0,
0,
6,
-147,
1,
-146,
0,
-144,
0,
-143,
1,
0,
1,
3,
0,
4,
-140,
-135,
0,
-133,
0,
0,
-132,
0,
0,
0,
6,
-131,
-130,
0,
0,
0,
0,
2,
1,
-129,
-127,
2,
0,
1,
2,
0,
-120,
2,
-119,
0,
4,
-116,
0,
-113,
4,
0,
-112,
15,
22,
-108,
1,
2,
1,
0,
0,
14,
0,
0,
0,
0,
1,
0,
-106,
0,
0,
0,
-100,
0,
-97,
-94,
0,
0,
0,
0,
-93,
1,
-91,
5,
-85,
-84,
0,
14,
0,
0,
-83,
0,
-76,
-70,
-66,
0,
0,
0,
5,
-60,
0,
-57,
4,
-56,
0,
0,
-54,
1,
0,
10,
0,
0,
4,
-53,
-52,
17,
3,
0,
0,
0,
-51,
-50,
-44,
1,
-40,
0,
-38,
-34,
-32,
0,
0,
0,
0,
4,
0,
0,
0,
0,
-26,
-23,
-22,
-18,
1,
7,
-16,
0,
11,
0,
1,
-13,
-12,
0,
-11,
-6,
0,
-4,
2,
-2
);

      FLREUnicodeScriptLowerCaseHashMapKeys:array[0..494] of TFLRERawByteString=(
'inhangul',
'bassavah',
'chakma',
'limbu',
'isold_persian',
'iscyrillic',
'inlepcha',
'intagalog',
'islatin',
'ismendekikakui',
'isshavian',
'inmendekikakui',
'isbraille',
'isimperialaramaic',
'inoriya',
'grantha',
'inhan',
'isoriya',
'ahom',
'ismanichaean',
'inanatolian_hieroglyphs',
'isahom',
'inbamum',
'incoptic',
'isbrahmi',
'ismyanmar',
'inscriptional_pahlavi',
'isbuginese',
'isol_chiki',
'inpalmyrene',
'isoldsoutharabian',
'ismongolian',
'ispsalter_pahlavi',
'ismeetei_mayek',
'latin',
'isphoenician',
'inglagolitic',
'ishatran',
'isgurmukhi',
'taile',
'ingujarati',
'inwarang_citi',
'brahmi',
'iswarang_citi',
'insiddham',
'palmyrene',
'shavian',
'isbopomofo',
'inlimbu',
'ingeorgian',
'caucasianalbanian',
'inpsalterpahlavi',
'inyi',
'nko',
'meroitic_cursive',
'inarabic',
'incanadian_aboriginal',
'isduployan',
'thai',
'iscaucasian_albanian',
'inlydian',
'signwriting',
'inlycian',
'inoldnortharabian',
'istibetan',
'invai',
'isbatak',
'injavanese',
'isoldhungarian',
'inegyptian_hieroglyphs',
'taitham',
'mro',
'mende_kikakui',
'inbopomofo',
'isoldpermic',
'isarmenian',
'issinhala',
'tagalog',
'iscaucasianalbanian',
'inlatin',
'isinherited',
'anatolian_hieroglyphs',
'isdevanagari',
'takri',
'inlinear_a',
'isanatolianhieroglyphs',
'isbassavah',
'inoldsoutharabian',
'isanatolian_hieroglyphs',
'iscommon',
'isglagolitic',
'iskayah_li',
'oldsoutharabian',
'bassa_vah',
'indevanagari',
'isnewtailue',
'iskannada',
'phagspa',
'incanadianaboriginal',
'ismro',
'intai_le',
'islinearb',
'ispahawhhmong',
'cham',
'islineara',
'gujarati',
'bopomofo',
'siddham',
'imperial_aramaic',
'inkhudawadi',
'insora_sompeng',
'inahom',
'ispahawh_hmong',
'old_turkic',
'inbengali',
'braille',
'isjavanese',
'inpahawhhmong',
'issiddham',
'inphagspa',
'intagbanwa',
'inmeroitic_cursive',
'mandaic',
'inold_italic',
'devanagari',
'inbalinese',
'isphags_pa',
'isogham',
'arabic',
'buginese',
'isdeseret',
'mongolian',
'hangul',
'inold_permic',
'sora_sompeng',
'isthai',
'inbatak',
'ininscriptionalpahlavi',
'inthai',
'isolchiki',
'vai',
'inrejang',
'istagbanwa',
'runic',
'avestan',
'deseret',
'innabataean',
'pahawh_hmong',
'issyloti_nagri',
'inmanichaean',
'buhid',
'inolditalic',
'ismahajani',
'inscriptional_parthian',
'inphoenician',
'isegyptianhieroglyphs',
'kayah_li',
'egyptianhieroglyphs',
'nabataean',
'inlineara',
'ismeroitichieroglyphs',
'kaithi',
'inlinearb',
'ismeroitic_hieroglyphs',
'tamil',
'inbraille',
'ischerokee',
'oldhungarian',
'isold_north_arabian',
'olchiki',
'issignwriting',
'cuneiform',
'kayahli',
'inpaucinhau',
'isrunic',
'kharoshthi',
'mendekikakui',
'rejang',
'lydian',
'innko',
'inoldpermic',
'miao',
'iskhojki',
'iscanadianaboriginal',
'multani',
'inimperialaramaic',
'ispau_cin_hau',
'iskhudawadi',
'old_persian',
'oriya',
'inmalayalam',
'intirhuta',
'ismende_kikakui',
'inpahawh_hmong',
'isrejang',
'incherokee',
'lao',
'issundanese',
'istai_le',
'old_permic',
'old_italic',
'inolchiki',
'intakri',
'isgujarati',
'meroitic_hieroglyphs',
'iskayahli',
'elbasan',
'old_north_arabian',
'inmodi',
'psalter_pahlavi',
'isethiopic',
'isold_hungarian',
'inpau_cin_hau',
'incuneiform',
'meroitichieroglyphs',
'insamaritan',
'pau_cin_hau',
'khmer',
'inscriptionalpahlavi',
'inmeetei_mayek',
'javanese',
'sylotinagri',
'inbuhid',
'ishanunoo',
'hebrew',
'ismultani',
'sinhala',
'inwarangciti',
'induployan',
'isbuhid',
'isgothic',
'ismeeteimayek',
'oldpersian',
'ispalmyrene',
'glagolitic',
'isosmanya',
'inpsalter_pahlavi',
'inavestan',
'islycian',
'inosmanya',
'iswarangciti',
'tifinagh',
'ingrantha',
'inogham',
'old_hungarian',
'linearb',
'inbassa_vah',
'inbassavah',
'egyptian_hieroglyphs',
'isarabic',
'isnabataean',
'inmeroiticcursive',
'insorasompeng',
'iscarian',
'inhanunoo',
'tai_le',
'pahawhhmong',
'istaitham',
'isbamum',
'tagbanwa',
'meroiticcursive',
'katakana',
'istagalog',
'ispaucinhau',
'carian',
'paucinhau',
'gothic',
'inethiopic',
'isinscriptionalpahlavi',
'intibetan',
'warangciti',
'newtailue',
'ischakma',
'isugaritic',
'isphagspa',
'islydian',
'yi',
'intai_tham',
'ishangul',
'incarian',
'han',
'inmende_kikakui',
'inhebrew',
'inkatakana',
'inthaana',
'thaana',
'meetei_mayek',
'iskaithi',
'anatolianhieroglyphs',
'ingothic',
'isinscriptionalparthian',
'phags_pa',
'inrunic',
'ingurmukhi',
'saurashtra',
'inmro',
'tai_tham',
'inmahajani',
'inelbasan',
'cypriot',
'sorasompeng',
'inmultani',
'myanmar',
'intelugu',
'gurmukhi',
'incham',
'cherokee',
'ismiao',
'inlisu',
'issamaritan',
'inold_north_arabian',
'balinese',
'tai_viet',
'ogham',
'inscriptionalparthian',
'islepcha',
'islisu',
'inoldhungarian',
'intamil',
'insharada',
'indeseret',
'insylotinagri',
'isgrantha',
'istai_viet',
'incaucasian_albanian',
'inmeroitic_hieroglyphs',
'ismeroiticcursive',
'hanunoo',
'coptic',
'issaurashtra',
'isold_south_arabian',
'inmeroitichieroglyphs',
'mahajani',
'inold_persian',
'inmongolian',
'ininherited',
'inugaritic',
'inherited',
'islimbu',
'iscoptic',
'inold_hungarian',
'ismalayalam',
'islinear_b',
'istakri',
'issora_sompeng',
'intaitham',
'isold_turkic',
'istai_tham',
'iscypriot',
'incyrillic',
'malayalam',
'isoldnortharabian',
'innew_tai_lue',
'inimperial_aramaic',
'inol_chiki',
'incommon',
'telugu',
'inbrahmi',
'caucasian_albanian',
'phoenician',
'hiragana',
'insundanese',
'isolditalic',
'incaucasianalbanian',
'insyloti_nagri',
'isyi',
'isnko',
'kannada',
'oldpermic',
'iscuneiform',
'ishiragana',
'issharada',
'ol_chiki',
'inarmenian',
'new_tai_lue',
'ispsalterpahlavi',
'isgeorgian',
'ismandaic',
'batak',
'taiviet',
'inold_turkic',
'inhatran',
'insignwriting',
'isinscriptional_parthian',
'inshavian',
'ininscriptional_pahlavi',
'tirhuta',
'isavestan',
'bengali',
'isbassa_vah',
'inlao',
'oldturkic',
'iskharoshthi',
'isgreek',
'inmiao',
'lisu',
'inanatolianhieroglyphs',
'issyriac',
'inkhmer',
'intifinagh',
'canadianaboriginal',
'islinear_a',
'sharada',
'olditalic',
'inold_south_arabian',
'intaiviet',
'inoldturkic',
'isbalinese',
'inegyptianhieroglyphs',
'ugaritic',
'osmanya',
'linear_a',
'isinscriptional_pahlavi',
'warang_citi',
'khudawadi',
'iselbasan',
'inmyanmar',
'oldnortharabian',
'linear_b',
'hatran',
'isegyptian_hieroglyphs',
'inoldpersian',
'inbuginese',
'inkayahli',
'ininscriptional_parthian',
'isbengali',
'insyriac',
'inhiragana',
'ismeroitic_cursive',
'istirhuta',
'inmeeteimayek',
'canadian_aboriginal',
'isimperial_aramaic',
'issylotinagri',
'intaile',
'inkannada',
'common',
'inchakma',
'insinhala',
'ischam',
'iskhmer',
'inphags_pa',
'innewtailue',
'issorasompeng',
'inkhojki',
'isvai',
'inkharoshthi',
'bamum',
'iskatakana',
'syloti_nagri',
'isold_permic',
'islao',
'iscanadian_aboriginal',
'cyrillic',
'isthaana',
'isnew_tai_lue',
'meeteimayek',
'ethiopic',
'psalterpahlavi',
'ininscriptionalparthian',
'armenian',
'inlinear_b',
'istaile',
'istifinagh',
'ishebrew',
'inkayah_li',
'lineara',
'samaritan',
'istaiviet',
'ishan',
'duployan',
'isold_italic',
'ingreek',
'manichaean',
'lycian',
'khojki',
'isoldturkic',
'tibetan',
'georgian',
'inkaithi',
'intai_viet',
'istelugu',
'incypriot',
'modi',
'isoldpersian',
'old_south_arabian',
'lepcha',
'inmandaic',
'ismodi',
'greek',
'istamil',
'imperialaramaic',
'insaurashtra',
'syriac',
'sundanese'
);

      FLREUnicodeScriptLowerCaseHashMapValueBits=8;

      FLREUnicodeScriptLowerCaseHashMapValues:array[0..494] of byte=(
25,
104,
96,
46,
60,
4,
68,
42,
2,
113,
50,
113,
53,
87,
14,
107,
36,
14,
126,
112,
127,
126,
84,
55,
94,
23,
90,
54,
69,
118,
88,
32,
121,
86,
2,
64,
57,
128,
12,
47,
13,
125,
94,
125,
122,
118,
50,
35,
46,
24,
103,
121,
37,
66,
97,
7,
28,
105,
20,
103,
76,
131,
74,
116,
22,
70,
93,
85,
130,
81,
78,
115,
113,
35,
120,
5,
19,
42,
103,
2,
41,
127,
10,
102,
110,
127,
104,
88,
127,
1,
57,
72,
88,
104,
10,
56,
17,
65,
28,
115,
47,
48,
108,
77,
110,
13,
35,
122,
87,
123,
101,
126,
108,
91,
11,
53,
85,
108,
122,
65,
45,
97,
95,
38,
10,
62,
65,
29,
7,
54,
40,
32,
25,
120,
101,
20,
93,
90,
20,
69,
70,
73,
45,
30,
80,
40,
117,
108,
59,
112,
44,
38,
111,
89,
64,
81,
72,
81,
117,
110,
98,
92,
48,
98,
15,
53,
27,
130,
116,
69,
131,
63,
72,
119,
30,
61,
113,
73,
76,
66,
120,
99,
109,
28,
129,
87,
119,
123,
60,
14,
18,
124,
113,
108,
73,
27,
21,
67,
47,
120,
38,
69,
102,
13,
98,
72,
106,
116,
114,
121,
26,
130,
119,
63,
98,
82,
119,
31,
90,
86,
85,
59,
44,
43,
6,
129,
19,
125,
105,
44,
39,
86,
60,
118,
57,
51,
121,
80,
74,
51,
125,
58,
107,
29,
130,
48,
104,
104,
81,
7,
117,
97,
101,
75,
43,
47,
108,
78,
84,
45,
97,
34,
42,
119,
75,
119,
39,
26,
90,
22,
125,
56,
96,
49,
65,
76,
37,
78,
25,
75,
36,
113,
6,
34,
9,
9,
86,
92,
127,
39,
89,
65,
30,
12,
71,
115,
78,
111,
106,
52,
101,
129,
23,
16,
12,
77,
27,
99,
83,
82,
116,
62,
79,
29,
89,
68,
83,
130,
15,
100,
40,
59,
107,
79,
103,
98,
97,
43,
55,
71,
88,
98,
111,
60,
32,
41,
49,
41,
46,
55,
130,
18,
48,
102,
101,
78,
91,
78,
52,
4,
18,
116,
56,
87,
69,
1,
16,
94,
103,
64,
33,
67,
38,
103,
59,
37,
66,
17,
120,
63,
33,
100,
69,
5,
56,
121,
24,
95,
93,
79,
91,
128,
131,
89,
50,
90,
124,
80,
11,
104,
21,
91,
61,
3,
99,
83,
127,
8,
31,
58,
28,
110,
100,
38,
88,
79,
91,
62,
81,
49,
51,
110,
90,
125,
123,
106,
23,
116,
48,
128,
81,
60,
54,
72,
89,
11,
8,
33,
97,
124,
86,
28,
87,
59,
47,
17,
1,
96,
19,
77,
31,
65,
56,
101,
109,
70,
61,
84,
34,
59,
120,
21,
28,
4,
9,
56,
86,
26,
121,
89,
5,
48,
47,
58,
6,
72,
110,
82,
79,
36,
105,
38,
3,
112,
74,
109,
91,
22,
24,
92,
79,
16,
52,
114,
60,
88,
68,
95,
114,
3,
15,
87,
71,
8,
67
);

const FLREUnicodeBlockLowerCaseHashMapSeedSize=1290;
      FLREUnicodeBlockLowerCaseHashMapValueSize=1290;
      FLREUnicodeBlockLowerCaseHashMapSize=1290;

      FLREUnicodeBlockLowerCaseHashMapSeedBits=16;

      FLREUnicodeBlockLowerCaseHashMapSeeds:array[0..1289] of smallint=(
-1290,
1,
-1289,
0,
0,
1,
-1288,
0,
0,
-1287,
1,
1,
3,
-1278,
1,
2,
-1275,
0,
1,
1,
1,
-1272,
-1271,
2,
0,
-1267,
-1262,
1,
0,
-1261,
3,
3,
1,
0,
0,
0,
-1260,
-1256,
0,
-1253,
-1252,
0,
-1248,
0,
-1239,
0,
3,
-1237,
0,
6,
2,
-1234,
1,
-1223,
0,
0,
0,
-1218,
3,
-1216,
0,
0,
-1215,
-1214,
0,
-1210,
1,
-1208,
0,
-1207,
1,
1,
-1206,
1,
3,
-1205,
-1202,
-1197,
-1196,
-1193,
-1189,
1,
-1188,
-1185,
-1181,
1,
1,
-1175,
1,
1,
1,
1,
1,
1,
-1174,
0,
1,
0,
-1170,
-1163,
2,
3,
-1161,
5,
-1158,
0,
0,
-1157,
-1156,
3,
-1152,
-1151,
-1148,
-1145,
0,
2,
-1143,
-1141,
0,
2,
0,
0,
1,
0,
-1137,
-1136,
1,
0,
1,
-1133,
0,
1,
-1132,
0,
-1131,
-1129,
1,
-1125,
-1124,
2,
-1123,
0,
0,
-1122,
3,
2,
-1120,
0,
-1119,
0,
0,
-1117,
0,
0,
1,
0,
0,
1,
0,
-1115,
0,
0,
-1111,
0,
-1110,
0,
2,
0,
-1108,
0,
0,
1,
0,
1,
0,
0,
-1107,
0,
-1105,
2,
-1103,
0,
-1102,
1,
2,
1,
2,
-1100,
1,
-1097,
-1096,
0,
-1092,
1,
-1091,
-1087,
0,
2,
1,
0,
-1086,
0,
0,
2,
1,
-1084,
-1083,
2,
0,
-1081,
0,
0,
0,
0,
1,
3,
8,
0,
1,
-1078,
-1076,
0,
1,
-1071,
0,
1,
-1069,
-1066,
1,
1,
0,
-1062,
3,
0,
1,
1,
-1052,
0,
0,
-1051,
-1050,
1,
1,
1,
2,
0,
0,
-1048,
-1047,
-1045,
-1043,
-1041,
0,
-1039,
1,
0,
1,
0,
-1035,
7,
1,
-1034,
-1032,
0,
-1031,
0,
0,
0,
4,
-1030,
-1029,
-1027,
0,
0,
1,
3,
-1024,
0,
0,
-1022,
-1021,
-1019,
0,
1,
0,
-1017,
-1008,
0,
0,
-1003,
1,
3,
0,
1,
-1000,
0,
4,
2,
-996,
-993,
0,
1,
-987,
-986,
-985,
0,
0,
1,
0,
0,
0,
5,
0,
-983,
0,
-981,
-980,
-979,
0,
1,
1,
0,
-978,
-975,
0,
0,
8,
-974,
2,
-972,
-970,
3,
3,
0,
0,
2,
0,
0,
2,
0,
0,
7,
-969,
1,
-964,
-962,
0,
-960,
1,
-952,
1,
5,
-951,
0,
0,
-950,
2,
0,
-944,
0,
0,
2,
6,
1,
1,
-942,
5,
1,
2,
0,
-940,
2,
0,
2,
0,
-938,
0,
-934,
-933,
0,
0,
0,
0,
-931,
0,
-930,
-925,
0,
-921,
-920,
-918,
0,
0,
4,
-916,
0,
0,
-915,
-914,
-911,
0,
-903,
-901,
-899,
-891,
5,
0,
-890,
0,
0,
-886,
0,
-884,
-878,
0,
-874,
0,
-873,
-872,
-871,
0,
-869,
-864,
-862,
2,
-860,
-858,
0,
-857,
4,
0,
0,
-851,
-846,
0,
0,
2,
3,
0,
-844,
-843,
0,
1,
-841,
0,
0,
0,
0,
-838,
-836,
0,
-834,
0,
-831,
-830,
0,
0,
2,
1,
1,
-829,
0,
-826,
-824,
0,
0,
0,
1,
0,
0,
0,
1,
0,
-823,
1,
0,
-821,
1,
-818,
-817,
0,
0,
1,
-816,
0,
0,
0,
0,
1,
-813,
0,
0,
-809,
1,
-805,
1,
-802,
0,
4,
-797,
1,
-796,
6,
0,
0,
0,
-795,
0,
3,
-794,
-790,
2,
-789,
0,
1,
1,
-788,
4,
0,
2,
0,
2,
6,
-787,
0,
1,
-785,
0,
-784,
0,
-781,
1,
0,
-778,
8,
0,
0,
2,
-776,
0,
1,
-773,
0,
-772,
-765,
0,
5,
-763,
0,
0,
-761,
2,
1,
0,
1,
0,
-760,
1,
-758,
0,
0,
-756,
0,
-755,
3,
0,
0,
0,
-749,
-748,
0,
5,
-747,
2,
-746,
-745,
-744,
-743,
0,
1,
-737,
-735,
4,
0,
0,
0,
0,
-733,
-729,
0,
-717,
0,
0,
2,
-716,
-715,
2,
-714,
1,
-712,
0,
-701,
0,
6,
0,
-699,
-697,
0,
0,
0,
-692,
-690,
0,
-689,
0,
2,
-688,
0,
0,
0,
0,
0,
2,
-687,
-684,
-683,
0,
0,
2,
0,
-678,
0,
3,
1,
0,
0,
0,
-675,
1,
5,
0,
0,
3,
0,
-673,
0,
1,
0,
3,
1,
4,
11,
-671,
5,
0,
-668,
2,
0,
2,
0,
-663,
0,
0,
-659,
0,
-658,
0,
0,
0,
0,
0,
-654,
1,
0,
-648,
-647,
-646,
0,
-645,
0,
0,
-642,
5,
-639,
3,
2,
-636,
3,
0,
1,
2,
0,
0,
0,
0,
-635,
-633,
0,
-626,
0,
0,
1,
4,
-625,
1,
6,
1,
3,
-624,
1,
-622,
4,
-621,
0,
-615,
-612,
-611,
0,
1,
-610,
6,
0,
-608,
12,
0,
1,
0,
-607,
0,
-606,
0,
2,
1,
-602,
0,
0,
1,
0,
0,
-601,
-597,
3,
0,
-596,
-595,
0,
-594,
0,
0,
-593,
1,
0,
5,
-592,
2,
1,
0,
3,
-588,
0,
0,
0,
4,
2,
-587,
0,
0,
-586,
0,
-585,
0,
-584,
2,
-579,
-577,
1,
0,
0,
-574,
-572,
1,
-566,
0,
0,
0,
-564,
3,
-563,
0,
-562,
0,
0,
-559,
-557,
0,
1,
8,
2,
1,
1,
0,
-552,
0,
1,
0,
-551,
-550,
-545,
-540,
0,
0,
0,
-538,
0,
0,
0,
-536,
-533,
0,
2,
-530,
-528,
0,
-526,
2,
-523,
0,
0,
20,
0,
-521,
-520,
0,
-513,
0,
0,
9,
0,
5,
1,
0,
-512,
2,
-510,
-506,
0,
0,
-504,
2,
0,
0,
-503,
0,
-500,
1,
-494,
-491,
1,
-487,
-485,
0,
-483,
32,
-482,
-481,
3,
0,
0,
0,
2,
1,
-475,
-472,
-470,
0,
-464,
0,
0,
-461,
-457,
-456,
4,
0,
-454,
-453,
0,
1,
6,
0,
8,
2,
0,
-452,
0,
-444,
-437,
0,
0,
0,
0,
-434,
5,
-432,
4,
0,
0,
0,
-431,
0,
0,
-429,
-428,
-427,
-426,
0,
-425,
0,
1,
0,
0,
-420,
-409,
0,
0,
0,
0,
-408,
-404,
-403,
-402,
-401,
-400,
8,
3,
0,
-399,
-397,
-396,
-395,
0,
-394,
0,
0,
6,
0,
0,
0,
0,
-393,
-390,
-385,
2,
0,
0,
1,
0,
11,
-384,
-383,
-382,
2,
-381,
1,
1,
-377,
0,
-376,
-375,
-374,
0,
-367,
1,
-366,
-364,
0,
0,
-362,
-357,
1,
-355,
0,
0,
3,
-354,
1,
6,
-349,
-343,
0,
0,
-342,
0,
0,
0,
0,
22,
-341,
-340,
-339,
-338,
-328,
0,
-325,
-317,
-316,
-315,
0,
0,
1,
0,
0,
-314,
-313,
-307,
0,
2,
0,
0,
0,
2,
-306,
0,
0,
12,
0,
0,
0,
-304,
2,
-300,
-298,
10,
0,
1,
-297,
-295,
1,
0,
-292,
0,
4,
5,
1,
-289,
-286,
-284,
0,
0,
0,
1,
-280,
1,
3,
0,
-279,
-275,
0,
5,
-272,
0,
0,
-263,
-262,
-260,
-256,
1,
0,
-255,
0,
-254,
-251,
-244,
-241,
-240,
4,
-237,
-234,
-231,
0,
1,
-230,
0,
-222,
1,
1,
1,
1,
0,
0,
1,
-221,
10,
0,
-219,
0,
-215,
-214,
-213,
-204,
-200,
-199,
11,
-198,
1,
0,
2,
1,
-196,
1,
2,
-195,
-189,
10,
-187,
-186,
0,
-185,
-182,
3,
0,
-180,
10,
1,
3,
1,
7,
0,
1,
0,
0,
0,
0,
0,
-177,
-176,
-175,
0,
1,
-174,
-172,
0,
0,
-171,
-169,
0,
1,
0,
-167,
-162,
3,
0,
-158,
-152,
-151,
0,
-148,
-146,
0,
-145,
-141,
1,
0,
-136,
0,
0,
0,
-134,
-129,
1,
-128,
1,
0,
1,
0,
-127,
-126,
4,
-125,
1,
-119,
1,
2,
-118,
0,
-117,
-115,
4,
0,
-113,
1,
0,
11,
0,
-103,
0,
0,
-101,
0,
-98,
-97,
0,
-95,
-89,
0,
0,
-84,
2,
-82,
-81,
-80,
-79,
-78,
-77,
0,
2,
2,
-75,
-74,
-71,
2,
0,
-69,
0,
15,
0,
2,
-68,
11,
4,
0,
0,
0,
0,
0,
-64,
0,
0,
0,
0,
0,
0,
0,
0,
-61,
11,
1,
3,
-58,
6,
0,
-56,
4,
2,
0,
0,
-55,
-48,
-47,
2,
10,
-43,
0,
0,
0,
4,
-38,
-29,
0,
-28,
-23,
2,
1,
11,
-21,
-16,
0,
1,
-11,
0,
0,
5,
0,
-9,
0,
-8,
0,
-6,
0,
-5,
0
);

      FLREUnicodeBlockLowerCaseHashMapKeys:array[0..1289] of TFLRERawByteString=(
'combining_diacritical_marks_extended',
'highsurrogates',
'islatinextended-a',
'incjkunifiedideographsextensiona',
'chakma',
'isenclosedalphanumericsupplement',
'incontrolpictures',
'ingeneralpunctuation',
'isoldpersian',
'hanunoo',
'latinextended-b',
'verticalforms',
'inthaana',
'islatinextended-c',
'inlinearbideograms',
'latinextended-a',
'arabic_supplement',
'isyisyllables',
'iskangxi_radicals',
'osmanya',
'inethiopic_supplement',
'inold_permic',
'isethiopicextended',
'islatinextended-b',
'iscjk_compatibility_forms',
'mathematicalalphanumericsymbols',
'isimperialaramaic',
'inhangul_compatibility_jamo',
'combining_diacritical_marks',
'inmalayalam',
'grantha',
'ismiscellaneous_mathematical_symbols-a',
'inhighsurrogates',
'yi_radicals',
'iswarangciti',
'inhighprivateusesurrogates',
'emoticons',
'telugu',
'invai',
'iskanbun',
'iscarian',
'inyijing_hexagram_symbols',
'islisu',
'greekandcoptic',
'modi',
'domino_tiles',
'arabic',
'isold_hungarian',
'anatolianhieroglyphs',
'meroiticcursive',
'ismyanmar',
'alphabeticpresentationforms',
'supplemental_arrows-b',
'invariationselectors',
'insinhala_archaic_numbers',
'inlatin_extended_additional',
'inlatinextendedadditional',
'supplementalsymbolsandpictographs',
'ipaextensions',
'buginese',
'isbraillepatterns',
'iscjkcompatibilityideographssupplement',
'ishangul_jamo',
'incjk_radicals_supplement',
'ingothic',
'mro',
'inmende_kikakui',
'syriac',
'cjkunifiedideographs',
'combiningdiacriticalmarksextended',
'cyrillic_supplement',
'isthaana',
'phaistosdisc',
'issupplementalarrows-a',
'cuneiformnumbersandpunctuation',
'inlycian',
'inimperial_aramaic',
'inpsalter_pahlavi',
'iscombining_diacritical_marks_for_symbols',
'latinextendedadditional',
'ismodi',
'issundanese',
'intransportandmapsymbols',
'isol_chiki',
'arabic_presentation_forms-a',
'istaiviet',
'katakanaphoneticextensions',
'old_permic',
'inbuhid',
'induployan',
'istags',
'inshorthand_format_controls',
'inyiradicals',
'ispsalterpahlavi',
'incombiningdiacriticalmarksforsymbols',
'inbengali',
'dingbats',
'incurrencysymbols',
'isrunic',
'isletterlikesymbols',
'iscombining_diacritical_marks_extended',
'issupplementalmathematicaloperators',
'inhangul_jamo',
'ahom',
'mathematical_operators',
'isornamental_dingbats',
'yiradicals',
'oldhungarian',
'ininscriptional_pahlavi',
'inelbasan',
'supplementalpunctuation',
'iskayah_li',
'indingbats',
'ismathematical_alphanumeric_symbols',
'inmodi',
'iswarang_citi',
'tai_viet',
'supplemental_arrows-a',
'ismusical_symbols',
'isethiopicsupplement',
'iscjkunifiedideographsextensionb',
'iscjkunifiedideographsextensionc',
'isgujarati',
'isvariation_selectors_supplement',
'intagalog',
'iscombiningdiacriticalmarksextended',
'istaixuanjingsymbols',
'inpahawh_hmong',
'incjkstrokes',
'inpalmyrene',
'hangul_syllables',
'isold_turkic',
'inethiopic',
'incjksymbolsandpunctuation',
'ishigh_surrogates',
'halfwidth_and_fullwidth_forms',
'inmeroitic_cursive',
'insupplementalarrows-b',
'hangul_jamo',
'enclosed_cjk_letters_and_months',
'insupplementaryprivateusearea-b',
'inglagolitic',
'ispahawhhmong',
'smallformvariants',
'inmongolian',
'isdevanagariextended',
'inmiscellaneous_symbols_and_arrows',
'ishangulcompatibilityjamo',
'modifier_tone_letters',
'sundanese',
'inblock_elements',
'insuttonsignwriting',
'ishalfwidthandfullwidthforms',
'coptic',
'inkhudawadi',
'ogham',
'inbassa_vah',
'shorthand_format_controls',
'caucasian_albanian',
'iscombiningmarksforsymbols',
'ismiscellaneous_symbols_and_arrows',
'insundanese_supplement',
'inaegean_numbers',
'psalterpahlavi',
'tagalog',
'alchemicalsymbols',
'iskhojki',
'incurrency_symbols',
'inphonetic_extensions_supplement',
'iscjksymbolsandpunctuation',
'islatin-1supplement',
'shorthandformatcontrols',
'isgreekextended',
'inosmanya',
'inethiopic_extended',
'isalchemical_symbols',
'inolchiki',
'incjkunifiedideographsextensiond',
'tifinagh',
'inlinear_b_ideograms',
'isphags-pa',
'iscjk_compatibility_ideographs',
'incjkunifiedideographsextensionc',
'istamil',
'isdominotiles',
'incjk_unified_ideographs_extension_a',
'incjk_unified_ideographs_extension_b',
'issmallformvariants',
'incjk_unified_ideographs_extension_d',
'iskharoshthi',
'javanese',
'inpahawhhmong',
'isbrahmi',
'isold_italic',
'incjk_unified_ideographs_extension_e',
'ishanunoo',
'isvariationselectors',
'dominotiles',
'myanmarextended-b',
'inmathematicaloperators',
'ishiragana',
'nabataean',
'syloti_nagri',
'issutton_signwriting',
'isgreekandcoptic',
'islinearbideograms',
'isenclosedalphanumerics',
'inoldpersian',
'ishebrew',
'oldnortharabian',
'inancient_symbols',
'ishangulsyllables',
'isunified_canadian_aboriginal_syllabics',
'incypriot_syllabary',
'inideographic_description_characters',
'arabic_mathematical_alphabetic_symbols',
'inmiscellaneous_mathematical_symbols-b',
'inahom',
'isenclosed_cjk_letters_and_months',
'inmiscellaneous_mathematical_symbols-a',
'inplaying_cards',
'ispsalter_pahlavi',
'iscombiningdiacriticalmarkssupplement',
'islatin_extended-a',
'islatin_extended-b',
'islatin_extended-c',
'alchemical_symbols',
'islatin_extended-e',
'ornamental_dingbats',
'inunified_canadian_aboriginal_syllabics',
'yi_syllables',
'anatolian_hieroglyphs',
'incypriotsyllabary',
'isrejang',
'khudawadi',
'istagalog',
'isnewtailue',
'iscountingrodnumerals',
'insundanesesupplement',
'iskhmersymbols',
'inavestan',
'bengali',
'incyrillic_extended-a',
'incjk_compatibility',
'runic',
'inprivate_use_area',
'miscellaneous_symbols_and_arrows',
'cherokee_supplement',
'inbuginese',
'incjk_unified_ideographs_extension_c',
'inoldsoutharabian',
'cherokee',
'arabic_presentation_forms-b',
'indominotiles',
'meetei_mayek_extensions',
'mathematicaloperators',
'private_use_area',
'intaixuanjingsymbols',
'supplemental_mathematical_operators',
'ugaritic',
'hanguljamoextended-a',
'isarabic_mathematical_alphabetic_symbols',
'inchakma',
'ismeroitic_cursive',
'isanatolian_hieroglyphs',
'issupplemental_symbols_and_pictographs',
'isgeometricshapes',
'incyrillic_extended-b',
'isoldpermic',
'ismiscellaneous_technical',
'iscypriotsyllabary',
'ingurmukhi',
'byzantine_musical_symbols',
'inoriya',
'islow_surrogates',
'arrows',
'isblockelements',
'isnumberforms',
'isphonetic_extensions_supplement',
'georgiansupplement',
'counting_rod_numerals',
'inplayingcards',
'ishighsurrogates',
'isogham',
'ismodifier_tone_letters',
'byzantinemusicalsymbols',
'inphoneticextensions',
'bopomofoextended',
'hangulsyllables',
'common_indic_number_forms',
'isphoneticextensionssupplement',
'phonetic_extensions',
'ischakma',
'intamil',
'linear_b_ideograms',
'insinhala',
'inunifiedcanadianaboriginalsyllabicsextended',
'inlatin-1_supplement',
'inhalfwidthandfullwidthforms',
'intai_tham',
'bamum',
'ismeeteimayekextensions',
'inenclosed_cjk_letters_and_months',
'insinhalaarchaicnumbers',
'isdevanagari',
'geometricshapes',
'inscriptionalparthian',
'sharada',
'ismahjongtiles',
'isenclosed_alphanumerics',
'isarabic_presentation_forms-a',
'miscellaneous_symbols',
'isanatolianhieroglyphs',
'hangul_jamo_extended-b',
'islineara',
'kanbun',
'playing_cards',
'isbopomofo',
'spacing_modifier_letters',
'superscripts_and_subscripts',
'combiningdiacriticalmarks',
'ismiscellaneoussymbolsandarrows',
'insupplementaryprivateusearea-a',
'phoneticextensions',
'bamumsupplement',
'ishangul_jamo_extended-b',
'meroitic_cursive',
'isbassavah',
'inold_north_arabian',
'issinhala',
'enclosedalphanumericsupplement',
'inenclosedideographicsupplement',
'istirhuta',
'hatran',
'arabicpresentationforms-a',
'iscuneiform_numbers_and_punctuation',
'combining_marks_for_symbols',
'isarabic_extended-a',
'isolchiki',
'isyi_syllables',
'inarabic_supplement',
'ishangul_syllables',
'insupplemental_punctuation',
'unified_canadian_aboriginal_syllabics_extended',
'miscellaneoussymbolsandarrows',
'isold_permic',
'egyptianhieroglyphs',
'duployan',
'cjk_symbols_and_punctuation',
'ischam',
'kangxiradicals',
'lao',
'iscoptic_epact_numbers',
'isgeneralpunctuation',
'inphoneticextensionssupplement',
'musicalsymbols',
'ismiscellaneous_symbols',
'latinextended-e',
'iscounting_rod_numerals',
'phoneticextensionssupplement',
'psalter_pahlavi',
'iscurrency_symbols',
'innew_tai_lue',
'incjkcompatibilityforms',
'insupplementalpunctuation',
'isverticalforms',
'kana_supplement',
'egyptian_hieroglyphs',
'sinhalaarchaicnumbers',
'vertical_forms',
'inarabic_mathematical_alphabetic_symbols',
'inkharoshthi',
'issupplemental_arrows-a',
'vedicextensions',
'carian',
'yisyllables',
'isbamumsupplement',
'iscuneiformnumbersandpunctuation',
'issupplementalarrows-c',
'issupplementalarrows-b',
'iscuneiform',
'warang_citi',
'islowsurrogates',
'incyrillic_supplement',
'tibetan',
'ishalfwidth_and_fullwidth_forms',
'cjk_unified_ideographs_extension_d',
'cjk_unified_ideographs_extension_e',
'isipa_extensions',
'latin_extended_additional',
'inethiopicextended',
'indevanagari',
'kayahli',
'inmodifier_tone_letters',
'transportandmapsymbols',
'insupplemental_mathematical_operators',
'highprivateusesurrogates',
'ruminumeralsymbols',
'avestan',
'isipaextensions',
'inancientgreeknumbers',
'vai',
'isarabicsupplement',
'gurmukhi',
'incjk_unified_ideographs',
'inhangul_jamo_extended-a',
'inhangul_jamo_extended-b',
'combininghalfmarks',
'buhid',
'isancient_greek_numbers',
'myanmar',
'inrumi_numeral_symbols',
'inmathematical_alphanumeric_symbols',
'suttonsignwriting',
'invariation_selectors',
'inenclosed_alphanumeric_supplement',
'inphonetic_extensions',
'small_form_variants',
'istakri',
'iscombining_diacritical_marks_supplement',
'old_north_arabian',
'mathematical_alphanumeric_symbols',
'issylotinagri',
'inegyptianhieroglyphs',
'variationselectorssupplement',
'isvai',
'cjkcompatibilityforms',
'inlisu',
'inkatakanaphoneticextensions',
'yijinghexagramsymbols',
'inancientsymbols',
'islinear_a',
'iskaithi',
'inpaucinhau',
'inmyanmar_extended-b',
'insupplementalarrows-c',
'issuperscripts_and_subscripts',
'deseret',
'mende_kikakui',
'isspecials',
'ishanguljamoextended-a',
'ethiopicextended-a',
'cyrillic_extended-a',
'isbyzantine_musical_symbols',
'incuneiform_numbers_and_punctuation',
'combiningdiacriticalmarkssupplement',
'islepcha',
'islinearbsyllabary',
'isspacing_modifier_letters',
'issupplemental_arrows-c',
'isethiopic',
'insharada',
'iscjkcompatibilityforms',
'intaile',
'coptic_epact_numbers',
'inegyptian_hieroglyphs',
'invedicextensions',
'malayalam',
'inletterlike_symbols',
'intags',
'indomino_tiles',
'ismahjong_tiles',
'enclosedideographicsupplement',
'incombining_diacritical_marks',
'braille_patterns',
'ismro',
'issyriac',
'isplaying_cards',
'ancientgreeknumbers',
'istai_le',
'old_italic',
'inmiscellaneoussymbolsandarrows',
'isnew_tai_lue',
'inolditalic',
'isbopomofoextended',
'incjk_symbols_and_punctuation',
'greekextended',
'issundanesesupplement',
'isgeometric_shapes',
'new_tai_lue',
'invariation_selectors_supplement',
'cjk_radicals_supplement',
'insupplementary_private_use_area-a',
'innko',
'inold_hungarian',
'ispahawh_hmong',
'inarabicmathematicalalphabeticsymbols',
'braillepatterns',
'isoldhungarian',
'isarabic',
'isarabicextended-a',
'issupplementalsymbolsandpictographs',
'issaurashtra',
'cjk_compatibility_ideographs_supplement',
'cjk_compatibility_forms',
'inlydian',
'indeseret',
'ishangul_jamo_extended-a',
'cyrillic',
'isancient_symbols',
'georgian_supplement',
'inbopomofo_extended',
'phoenician',
'isegyptian_hieroglyphs',
'incjk_compatibility_ideographs_supplement',
'iscombining_marks_for_symbols',
'hangul_jamo_extended-a',
'incounting_rod_numerals',
'inenclosedalphanumericsupplement',
'ingreekextended',
'intai_viet',
'inmusicalsymbols',
'isgreek_extended',
'enclosedcjklettersandmonths',
'iscombining_half_marks',
'ingeorgiansupplement',
'isbatak',
'ethiopicsupplement',
'inblockelements',
'inbassavah',
'innumberforms',
'inyisyllables',
'inphags-pa',
'linearbsyllabary',
'istransport_and_map_symbols',
'inalchemical_symbols',
'meetei_mayek',
'halfwidthandfullwidthforms',
'incombiningdiacriticalmarks',
'inhigh_private_use_surrogates',
'isornamentaldingbats',
'cuneiform',
'incombining_diacritical_marks_for_symbols',
'ischerokeesupplement',
'isbassa_vah',
'ideographic_description_characters',
'letterlike_symbols',
'ismalayalam',
'isyi_radicals',
'inenclosed_alphanumerics',
'incombining_diacritical_marks_supplement',
'musical_symbols',
'arabicpresentationforms-b',
'imperial_aramaic',
'miao',
'cypriot_syllabary',
'ingeorgian_supplement',
'privateusearea',
'cypriotsyllabary',
'incyrillicextended-a',
'incyrillicextended-b',
'hangul_compatibility_jamo',
'inkhojki',
'iscjk_compatibility_ideographs_supplement',
'inunified_canadian_aboriginal_syllabics_extended',
'general_punctuation',
'iscjkunifiedideographsextensione',
'insupplemental_symbols_and_pictographs',
'iscjkunifiedideographsextensiond',
'ishanguljamo',
'ismusicalsymbols',
'isshorthand_format_controls',
'variation_selectors_supplement',
'inaegeannumbers',
'inscriptional_parthian',
'insyriac',
'cjkcompatibilityideographssupplement',
'inmeroitichieroglyphs',
'hebrew',
'inkanbun',
'inspecials',
'iscommonindicnumberforms',
'isolditalic',
'istai_tham',
'ancient_greek_numbers',
'bamum_supplement',
'sora_sompeng',
'inkhmer',
'incommon_indic_number_forms',
'iscoptic',
'issyloti_nagri',
'imperialaramaic',
'inoptical_character_recognition',
'khojki',
'isgurmukhi',
'cyrillicsupplement',
'inmiscellaneousmathematicalsymbols-b',
'ingeorgian',
'isancientsymbols',
'insupplementary_private_use_area-b',
'inanatolian_hieroglyphs',
'isbamum_supplement',
'isgeometricshapesextended',
'insamaritan',
'isarmenian',
'inwarangciti',
'inkaithi',
'incuneiformnumbersandpunctuation',
'inkatakana_phonetic_extensions',
'istaile',
'cyrillic_extended-b',
'iscjk_unified_ideographs',
'aegeannumbers',
'variation_selectors',
'newtailue',
'inmandaic',
'isold_persian',
'miscellaneousmathematicalsymbols-a',
'indevanagari_extended',
'geometric_shapes_extended',
'isideographicdescriptioncharacters',
'lycian',
'iscyrillicextended-a',
'isvariationselectorssupplement',
'intelugu',
'inlowsurrogates',
'inlatinextended-d',
'inlatinextended-e',
'inlatinextended-b',
'inlatinextended-c',
'inlineara',
'isblock_elements',
'incjkunifiedideographsextensione',
'ismiscellaneousmathematicalsymbols-a',
'isdomino_tiles',
'issupplemental_mathematical_operators',
'blockelements',
'nko',
'unifiedcanadianaboriginalsyllabicsextended',
'hanguljamoextended-b',
'inearlydynasticcuneiform',
'inhigh_surrogates',
'taixuanjingsymbols',
'inkayahli',
'iscyrillicsupplement',
'ancientsymbols',
'inmathematicalalphanumericsymbols',
'sutton_signwriting',
'isgeometric_shapes_extended',
'cham',
'incham',
'paucinhau',
'isoptical_character_recognition',
'inarabic',
'inkangxi_radicals',
'iscommon_indic_number_forms',
'inbopomofo',
'bassavah',
'ishatran',
'isphaistosdisc',
'inyijinghexagramsymbols',
'limbu',
'copticepactnumbers',
'inanatolianhieroglyphs',
'combining_half_marks',
'iscyrillic_extended-a',
'isenclosed_alphanumeric_supplement',
'mendekikakui',
'isavestan',
'mahjongtiles',
'enclosed_alphanumeric_supplement',
'insuperscripts_and_subscripts',
'inmiscellaneous_technical',
'isbuginese',
'cjk_compatibility_ideographs',
'tai_xuan_jing_symbols',
'mahjong_tiles',
'isoldnortharabian',
'inopticalcharacterrecognition',
'isbuhid',
'islatinextended-e',
'intakri',
'ismiscellaneous_symbols_and_pictographs',
'inhalfwidth_and_fullwidth_forms',
'taitham',
'generalpunctuation',
'inpau_cin_hau',
'combining_diacritical_marks_supplement',
'incountingrodnumerals',
'istagbanwa',
'isoldturkic',
'ismendekikakui',
'ispaucinhau',
'number_forms',
'isbraille_patterns',
'iscjk_strokes',
'kaithi',
'arabicsupplement',
'ismathematical_operators',
'hangulcompatibilityjamo',
'yijing_hexagram_symbols',
'bopomofo_extended',
'ancientgreekmusicalnotation',
'inold_turkic',
'incjkcompatibilityideographs',
'isbox_drawing',
'iskangxiradicals',
'islao',
'iscontrolpictures',
'ismodifiertoneletters',
'inideographicdescriptioncharacters',
'ismiao',
'brahmi',
'isalphabeticpresentationforms',
'ideographicdescriptioncharacters',
'hiragana',
'greek_and_coptic',
'cjkunifiedideographsextensiona',
'cjkunifiedideographsextensionb',
'tirhuta',
'inhangulcompatibilityjamo',
'iscjk_unified_ideographs_extension_a',
'inhangulsyllables',
'iscjk_unified_ideographs_extension_c',
'iscjk_unified_ideographs_extension_e',
'iscjk_unified_ideographs_extension_d',
'isbalinese',
'elbasan',
'supplementaryprivateusearea-a',
'oriya',
'cyrillicextended-b',
'pahawhhmong',
'mandaic',
'cyrillicextended-a',
'enclosedalphanumerics',
'insupplemental_arrows-a',
'insupplemental_arrows-b',
'insupplemental_arrows-c',
'phaistos_disc',
'miscellaneous_symbols_and_pictographs',
'inbraillepatterns',
'variationselectors',
'ethiopicextended',
'bassa_vah',
'transport_and_map_symbols',
'iselbasan',
'tags',
'ishangul_compatibility_jamo',
'inogham',
'istai_viet',
'isgrantha',
'inalphabetic_presentation_forms',
'ismeeteimayek',
'isancient_greek_musical_notation',
'insutton_signwriting',
'issupplementaryprivateusearea-b',
'inlinearbsyllabary',
'sinhala',
'inbox_drawing',
'ismahajani',
'inmathematical_operators',
'iscjkstrokes',
'olditalic',
'inmiscellaneoustechnical',
'samaritan',
'inkangxiradicals',
'invedic_extensions',
'incuneiform',
'latin-1supplement',
'isphonetic_extensions',
'islydian',
'inyi_syllables',
'superscriptsandsubscripts',
'incjk_strokes',
'iskhmer',
'isthai',
'inmultani',
'ismiscellaneoustechnical',
'kayah_li',
'iskatakana_phonetic_extensions',
'inarabicextended-a',
'ismeroitichieroglyphs',
'cjk_strokes',
'inwarang_citi',
'inbrahmi',
'ancient_greek_musical_notation',
'incjk_compatibility_forms',
'supplementary_private_use_area-b',
'insupplementalarrows-a',
'inmyanmarextended-a',
'supplementary_private_use_area-a',
'ismeroiticcursive',
'linear_b_syllabary',
'inold_south_arabian',
'phonetic_extensions_supplement',
'vedic_extensions',
'inunifiedcanadianaboriginalsyllabics',
'lepcha',
'isletterlike_symbols',
'bopomofo',
'insaurashtra',
'katakana_phonetic_extensions',
'isethiopic_extended',
'inarabicpresentationforms-a',
'inarabicpresentationforms-b',
'inmyanmarextended-b',
'issupplemental_arrows-b',
'inethiopicextended-a',
'inkatakana',
'isosmanya',
'iscjk_symbols_and_punctuation',
'ispalmyrene',
'cjkcompatibility',
'cjkradicalssupplement',
'inarabic_presentation_forms-b',
'ingujarati',
'devanagariextended',
'incombiningmarksforsymbols',
'inmiao',
'isearlydynasticcuneiform',
'inbraille_patterns',
'inbyzantinemusicalsymbols',
'currencysymbols',
'issuttonsignwriting',
'istibetan',
'letterlikesymbols',
'isrumi_numeral_symbols',
'currency_symbols',
'cjk_unified_ideographs_extension_b',
'inmyanmar',
'incombiningdiacriticalmarksextended',
'islatinextended-d',
'lineara',
'isvedic_extensions',
'latinextended-c',
'inkannada',
'intaiviet',
'latinextended-d',
'inlow_surrogates',
'control_pictures',
'inscriptionalpahlavi',
'iscjkradicalssupplement',
'iscaucasian_albanian',
'inlinear_a',
'lisu',
'iskatakana',
'incombiningdiacriticalmarkssupplement',
'isgeneral_punctuation',
'isbyzantinemusicalsymbols',
'isyijinghexagramsymbols',
'incherokeesupplement',
'insiddham',
'oldpersian',
'inmeroitic_hieroglyphs',
'cjkunifiedideographsextensione',
'islatin_extended_additional',
'issupplementaryprivateusearea-a',
'alphabetic_presentation_forms',
'isahom',
'unified_canadian_aboriginal_syllabics',
'miscellaneoustechnical',
'opticalcharacterrecognition',
'inyi_radicals',
'pau_cin_hau',
'inmanichaean',
'inmeetei_mayek',
'inornamental_dingbats',
'kharoshthi',
'inoldpermic',
'myanmar_extended-b',
'incommonindicnumberforms',
'iscjkcompatibility',
'ingeometric_shapes_extended',
'myanmar_extended-a',
'isopticalcharacterrecognition',
'combining_diacritical_marks_for_symbols',
'isenclosed_ideographic_supplement',
'isbamum',
'inhiragana',
'inhanunoo',
'iscjk_radicals_supplement',
'ingeometric_shapes',
'old_south_arabian',
'isvariation_selectors',
'inhatran',
'issmall_form_variants',
'tagbanwa',
'miscellaneous_technical',
'aegean_numbers',
'georgian',
'incoptic',
'cjkcompatibilityideographs',
'isemoticons',
'ornamentaldingbats',
'iskhudawadi',
'iscyrillic_supplement',
'glagolitic',
'commonindicnumberforms',
'hanguljamo',
'miscellaneoussymbolsandpictographs',
'spacingmodifierletters',
'katakana',
'ispau_cin_hau',
'arabicextended-a',
'isyiradicals',
'isethiopicextended-a',
'inalphabeticpresentationforms',
'controlpictures',
'inmiscellaneous_symbols_and_pictographs',
'intibetan',
'miscellaneous_mathematical_symbols-a',
'ismathematicalalphanumericsymbols',
'miscellaneous_mathematical_symbols-b',
'inold_persian',
'modifiertoneletters',
'kanasupplement',
'ismeroitic_hieroglyphs',
'khmer',
'ethiopic',
'isgeorgian',
'ismiscellaneoussymbolsandpictographs',
'inmeeteimayekextensions',
'inkhmer_symbols',
'islimbu',
'iskanasupplement',
'supplementaryprivateusearea-b',
'inmiscellaneousmathematicalsymbols-a',
'inmodifiertoneletters',
'incaucasianalbanian',
'islatin-1_supplement',
'supplemental_symbols_and_pictographs',
'inenclosedalphanumerics',
'ischerokee_supplement',
'incjkcompatibilityideographssupplement',
'inugaritic',
'inhebrew',
'incyrillicsupplement',
'incoptic_epact_numbers',
'ingreek_and_coptic',
'inspacingmodifierletters',
'inemoticons',
'inmahjongtiles',
'isplayingcards',
'isimperial_aramaic',
'isarabicpresentationforms-b',
'taile',
'inhanguljamoextended-b',
'istelugu',
'iskayahli',
'ismandaic',
'gujarati',
'incjkunifiedideographsextensionb',
'inipaextensions',
'linear_a',
'inbyzantine_musical_symbols',
'inoldturkic',
'isbopomofo_extended',
'isoriya',
'invertical_forms',
'early_dynastic_cuneiform',
'sinhala_archaic_numbers',
'isdeseret',
'ismultani',
'thai',
'ishanguljamoextended-b',
'issupplemental_punctuation',
'tamil',
'insmallformvariants',
'inmendekikakui',
'issupplementalpunctuation',
'incombining_diacritical_marks_extended',
'isunified_canadian_aboriginal_syllabics_extended',
'incombining_half_marks',
'supplementalmathematicaloperators',
'oldturkic',
'islinear_b_ideograms',
'cjk_compatibility',
'inenclosed_ideographic_supplement',
'iskana_supplement',
'block_elements',
'intai_le',
'isenclosedcjklettersandmonths',
'ishighprivateusesurrogates',
'isancientgreeknumbers',
'inbamumsupplement',
'incombining_marks_for_symbols',
'isspacingmodifierletters',
'incherokee',
'siddham',
'playingcards',
'isalphabetic_presentation_forms',
'incopticepactnumbers',
'ingreekandcoptic',
'inarabic_presentation_forms-a',
'iscombiningdiacriticalmarksforsymbols',
'isinscriptionalparthian',
'isgreek_and_coptic',
'inboxdrawing',
'lydian',
'iscyrillic',
'inkayah_li',
'inbopomofoextended',
'meroitichieroglyphs',
'inancientgreekmusicalnotation',
'ingeometricshapesextended',
'inmiscellaneous_symbols',
'isunifiedcanadianaboriginalsyllabics',
'insorasompeng',
'unifiedcanadianaboriginalsyllabics',
'incarian',
'issundanese_supplement',
'sylotinagri',
'isold_north_arabian',
'istifinagh',
'inmeeteimayek',
'isgothic',
'insmall_form_variants',
'rejang',
'ipa_extensions',
'ismanichaean',
'isphoenician',
'isunifiedcanadianaboriginalsyllabicsextended',
'rumi_numeral_symbols',
'isruminumeralsymbols',
'isethiopic_supplement',
'isgeorgian_supplement',
'iscjkunifiedideographs',
'istransportandmapsymbols',
'islycian',
'indevanagariextended',
'tai_tham',
'iscaucasianalbanian',
'old_hungarian',
'mahajani',
'issinhala_archaic_numbers',
'inbalinese',
'arabic_extended-a',
'inarrows',
'issora_sompeng',
'incyrillic',
'inphaistosdisc',
'ininscriptionalpahlavi',
'pahawh_hmong',
'incombininghalfmarks',
'iscombining_diacritical_marks',
'innewtailue',
'meeteimayekextensions',
'inornamentaldingbats',
'enclosed_alphanumerics',
'combiningdiacriticalmarksforsymbols',
'supplementalarrows-a',
'isprivateusearea',
'inshorthandformatcontrols',
'isshorthandformatcontrols',
'supplementalarrows-c',
'old_turkic',
'supplementalarrows-b',
'inrunic',
'isold_south_arabian',
'miscellaneoussymbols',
'inarmenian',
'inbamum',
'cjk_unified_ideographs_extension_a',
'isduployan',
'balinese',
'isarabicmathematicalalphabeticsymbols',
'iscjk_compatibility',
'taiviet',
'inkanasupplement',
'isphoneticextensions',
'iscjkcompatibilityideographs',
'inlatinextended-a',
'incjkradicalssupplement',
'issiddham',
'iscyrillicextended-b',
'injavanese',
'inmiscellaneoussymbolsandpictographs',
'box_drawing',
'inpsalterpahlavi',
'inkana_supplement',
'inmahajani',
'isethiopic_extended-a',
'isvedicextensions',
'cuneiform_numbers_and_punctuation',
'intifinagh',
'iscombininghalfmarks',
'intaitham',
'isshavian',
'inalchemicalsymbols',
'khmersymbols',
'incontrol_pictures',
'arabicmathematicalalphabeticsymbols',
'ismende_kikakui',
'isyijing_hexagram_symbols',
'insyloti_nagri',
'meroitic_hieroglyphs',
'isaegean_numbers',
'kannada',
'oldsoutharabian',
'cjk_unified_ideographs',
'isinscriptional_pahlavi',
'inol_chiki',
'inancient_greek_numbers',
'specials',
'inearly_dynastic_cuneiform',
'isnumber_forms',
'insora_sompeng',
'inspacing_modifier_letters',
'inoldnortharabian',
'insupplementalmathematicaloperators',
'inlinear_b_syllabary',
'isboxdrawing',
'cherokeesupplement',
'cjkstrokes',
'isegyptianhieroglyphs',
'inipa_extensions',
'manichaean',
'isideographic_description_characters',
'ismyanmarextended-b',
'ininscriptionalparthian',
'inold_italic',
'ismyanmarextended-a',
'isugaritic',
'iscypriot_syllabary',
'isarrows',
'innumber_forms',
'isvertical_forms',
'greek_extended',
'ismathematicaloperators',
'palmyrene',
'istaitham',
'inmyanmar_extended-a',
'isnabataean',
'iskhmer_symbols',
'inhangul_syllables',
'geometric_shapes',
'ismiscellaneous_mathematical_symbols-b',
'sorasompeng',
'inhanguljamoextended-a',
'isarabicpresentationforms-a',
'boxdrawing',
'oldpermic',
'isbengali',
'isancientgreekmusicalnotation',
'khmer_symbols',
'inlepcha',
'inenclosedcjklettersandmonths',
'tai_le',
'lowsurrogates',
'numberforms',
'ischerokee',
'iscyrillic_extended-b',
'inlao',
'latin_extended-e',
'high_private_use_surrogates',
'myanmarextended-a',
'ancient_symbols',
'inkhmersymbols',
'inmeetei_mayek_extensions',
'ismongolian',
'ingeometricshapes',
'isinscriptional_parthian',
'armenian',
'miscellaneousmathematicalsymbols-b',
'isaegeannumbers',
'inhanguljamo',
'meeteimayek',
'ismeetei_mayek',
'isarabic_presentation_forms-b',
'multani',
'incjkcompatibility',
'issinhalaarchaicnumbers',
'inlatin_extended-b',
'incjk_compatibility_ideographs',
'isarabic_supplement',
'isdingbats',
'iscombiningdiacriticalmarks',
'inverticalforms',
'ethiopic_extended-a',
'inlatin_extended-c',
'latin-1_supplement',
'combiningmarksforsymbols',
'thaana',
'inruminumeralsymbols',
'linearbideograms',
'optical_character_recognition',
'ishigh_private_use_surrogates',
'issorasompeng',
'countingrodnumerals',
'ethiopic_supplement',
'islatin_extended-d',
'ethiopic_extended',
'insylotinagri',
'saurashtra',
'isearly_dynastic_cuneiform',
'geometricshapesextended',
'isenclosedideographicsupplement',
'iscontrol_pictures',
'latin_extended-d',
'issamaritan',
'isalchemicalsymbols',
'issharada',
'latin_extended-c',
'old_persian',
'enclosed_ideographic_supplement',
'latin_extended-b',
'latin_extended-a',
'islatinextendedadditional',
'intagbanwa',
'inarabicsupplement',
'issupplementary_private_use_area-a',
'inmahjong_tiles',
'ingeneral_punctuation',
'issupplementary_private_use_area-b',
'iskatakanaphoneticextensions',
'inthai',
'incaucasian_albanian',
'istai_xuan_jing_symbols',
'inmiscellaneoussymbols',
'isinscriptionalpahlavi',
'inimperialaramaic',
'warangciti',
'ingreek_extended',
'kangxi_radicals',
'isprivate_use_area',
'earlydynasticcuneiform',
'ol_chiki',
'devanagari_extended',
'inbamum_supplement',
'ininscriptional_parthian',
'inshavian',
'incjkunifiedideographs',
'ismyanmar_extended-b',
'sundanese_supplement',
'innabataean',
'inancient_greek_musical_notation',
'inletterlikesymbols',
'insupplementalsymbolsandpictographs',
'inoldhungarian',
'isnko',
'devanagari',
'shavian',
'inethiopic_extended-a',
'gothic',
'high_surrogates',
'intransport_and_map_symbols',
'inlatin-1supplement',
'iscjk_unified_ideographs_extension_b',
'isglagolitic',
'isdevanagari_extended',
'ismeetei_mayek_extensions',
'intirhuta',
'iscopticepactnumbers',
'inphaistos_disc',
'invariationselectorssupplement',
'ismyanmar_extended-a',
'inarabic_extended-a',
'insundanese',
'takri',
'inmeroiticcursive',
'inphoenician',
'inethiopicsupplement',
'inlimbu',
'iskannada',
'supplemental_arrows-c',
'caucasianalbanian',
'insuperscriptsandsubscripts',
'mongolian',
'inlatin_extended-a',
'ismiscellaneoussymbols',
'inbatak',
'sundanesesupplement',
'inlatin_extended-e',
'inlatin_extended-d',
'olchiki',
'ingrantha',
'cjksymbolsandpunctuation',
'iscurrencysymbols',
'inrejang',
'inprivateusearea',
'cjkunifiedideographsextensiond',
'cjkunifiedideographsextensionc',
'intai_xuan_jing_symbols',
'inmro',
'isjavanese',
'isoldsoutharabian',
'iscjkunifiedideographsextensiona',
'cjk_unified_ideographs_extension_c',
'ismiscellaneousmathematicalsymbols-b',
'isphaistos_disc',
'incherokee_supplement',
'low_surrogates',
'issuperscriptsandsubscripts',
'isgeorgiansupplement',
'inscriptional_pahlavi',
'phags-pa',
'islinear_b_syllabary',
'inmusical_symbols',
'batak',
'supplemental_punctuation'
);

      FLREUnicodeBlockLowerCaseHashMapValueBits=16;

      FLREUnicodeBlockLowerCaseHashMapValues:array[0..1289] of word=(
55,
145,
2,
114,
203,
243,
77,
68,
173,
43,
3,
153,
15,
93,
161,
2,
14,
117,
101,
176,
37,
171,
97,
3,
155,
236,
181,
107,
6,
28,
210,
85,
145,
118,
216,
146,
246,
26,
120,
108,
167,
115,
119,
7,
213,
241,
12,
198,
222,
188,
33,
150,
88,
152,
206,
66,
66,
252,
4,
53,
87,
257,
35,
100,
170,
224,
238,
13,
116,
55,
9,
15,
165,
86,
219,
166,
181,
196,
71,
66,
213,
57,
248,
60,
151,
137,
111,
171,
44,
229,
258,
230,
118,
196,
71,
21,
84,
70,
41,
72,
55,
90,
35,
215,
75,
247,
118,
198,
195,
177,
99,
130,
84,
236,
213,
216,
137,
86,
232,
37,
253,
254,
23,
259,
42,
55,
234,
226,
110,
182,
143,
197,
36,
103,
145,
158,
188,
88,
35,
112,
261,
92,
226,
156,
47,
129,
91,
107,
123,
57,
81,
237,
158,
94,
209,
40,
225,
230,
178,
71,
91,
61,
162,
196,
42,
249,
207,
70,
64,
103,
1,
230,
67,
176,
97,
249,
60,
255,
96,
161,
127,
149,
254,
25,
241,
114,
253,
156,
255,
189,
133,
226,
200,
169,
256,
43,
152,
241,
134,
75,
104,
183,
125,
237,
7,
161,
79,
173,
11,
191,
164,
143,
39,
180,
102,
239,
89,
215,
112,
85,
242,
196,
65,
2,
3,
93,
249,
140,
247,
39,
117,
222,
180,
131,
209,
42,
51,
235,
61,
52,
193,
21,
98,
113,
41,
148,
91,
141,
53,
254,
190,
38,
157,
241,
138,
75,
148,
234,
90,
172,
132,
239,
203,
188,
222,
252,
82,
121,
171,
76,
180,
22,
231,
24,
147,
74,
81,
73,
64,
95,
235,
242,
145,
40,
123,
231,
63,
109,
143,
126,
64,
63,
203,
25,
161,
29,
48,
1,
158,
54,
122,
138,
112,
206,
20,
82,
194,
205,
240,
79,
151,
83,
222,
144,
179,
108,
242,
106,
5,
69,
6,
91,
260,
63,
223,
144,
188,
225,
191,
29,
243,
244,
211,
184,
151,
219,
71,
19,
60,
117,
14,
143,
99,
48,
91,
171,
221,
229,
103,
135,
101,
31,
168,
68,
64,
232,
83,
140,
235,
64,
196,
70,
51,
155,
99,
153,
228,
221,
206,
153,
239,
189,
86,
62,
167,
117,
223,
219,
251,
88,
218,
216,
147,
9,
32,
158,
255,
256,
4,
66,
97,
20,
130,
123,
248,
90,
146,
199,
193,
4,
163,
120,
14,
22,
116,
132,
144,
154,
44,
163,
33,
199,
236,
237,
152,
243,
63,
156,
214,
65,
191,
236,
125,
221,
259,
120,
155,
119,
111,
115,
164,
179,
201,
217,
134,
251,
69,
174,
238,
159,
132,
139,
98,
231,
219,
65,
59,
160,
5,
251,
36,
205,
155,
50,
168,
221,
62,
28,
72,
258,
241,
240,
244,
6,
87,
224,
13,
242,
163,
50,
169,
91,
51,
169,
109,
103,
67,
61,
82,
51,
259,
100,
260,
16,
198,
226,
239,
87,
198,
12,
19,
252,
128,
257,
155,
186,
174,
132,
8,
164,
95,
109,
185,
221,
257,
71,
132,
235,
243,
67,
137,
232,
67,
112,
154,
95,
58,
37,
81,
225,
73,
117,
127,
160,
248,
249,
142,
158,
6,
146,
247,
218,
71,
141,
225,
102,
72,
28,
118,
79,
65,
232,
157,
181,
227,
180,
95,
148,
180,
98,
121,
107,
207,
257,
48,
68,
256,
252,
255,
35,
232,
230,
259,
162,
194,
13,
257,
187,
11,
108,
159,
126,
169,
54,
163,
223,
202,
46,
126,
94,
125,
181,
78,
207,
22,
9,
89,
34,
164,
261,
222,
223,
250,
17,
10,
216,
201,
219,
111,
50,
121,
116,
162,
152,
51,
18,
173,
85,
129,
250,
102,
166,
98,
259,
26,
147,
124,
140,
3,
93,
179,
81,
256,
85,
241,
90,
81,
16,
48,
144,
220,
145,
234,
130,
9,
164,
236,
237,
250,
135,
135,
217,
78,
12,
101,
126,
106,
225,
184,
165,
115,
49,
168,
222,
154,
98,
243,
238,
193,
240,
243,
69,
76,
53,
149,
234,
240,
191,
78,
44,
140,
214,
245,
158,
54,
68,
217,
65,
235,
45,
197,
238,
217,
73,
87,
110,
201,
14,
75,
107,
115,
109,
233,
197,
149,
80,
101,
31,
77,
123,
102,
227,
200,
150,
102,
104,
7,
114,
253,
211,
107,
114,
143,
254,
256,
255,
56,
177,
260,
24,
121,
226,
18,
98,
79,
86,
88,
251,
165,
245,
87,
152,
97,
225,
248,
177,
258,
107,
40,
137,
210,
150,
142,
233,
237,
261,
160,
29,
80,
204,
75,
110,
169,
76,
17,
101,
62,
218,
1,
63,
186,
117,
69,
110,
46,
30,
208,
76,
130,
111,
19,
187,
110,
216,
200,
233,
155,
261,
86,
136,
260,
188,
160,
190,
64,
62,
39,
59,
72,
106,
128,
111,
97,
151,
157,
134,
88,
139,
105,
176,
103,
182,
113,
100,
157,
23,
129,
71,
227,
220,
87,
231,
70,
237,
32,
72,
199,
70,
253,
33,
55,
124,
179,
62,
93,
27,
137,
124,
147,
77,
195,
100,
178,
179,
119,
105,
65,
68,
231,
115,
141,
212,
173,
187,
256,
66,
260,
150,
215,
39,
76,
78,
118,
217,
192,
142,
247,
189,
171,
134,
126,
113,
250,
136,
78,
71,
244,
122,
104,
43,
100,
82,
190,
152,
184,
156,
45,
76,
162,
34,
94,
149,
246,
247,
209,
9,
92,
126,
35,
245,
5,
105,
217,
19,
118,
139,
150,
77,
245,
32,
85,
236,
89,
173,
123,
228,
187,
46,
36,
34,
245,
138,
52,
49,
228,
261,
85,
123,
178,
1,
252,
79,
141,
257,
172,
11,
9,
168,
7,
5,
246,
240,
242,
181,
157,
50,
144,
26,
130,
18,
23,
253,
4,
179,
231,
197,
109,
24,
153,
220,
206,
174,
208,
30,
144,
99,
25,
156,
238,
99,
55,
48,
154,
90,
197,
161,
113,
244,
228,
81,
50,
112,
146,
163,
223,
71,
5,
38,
212,
242,
150,
168,
7,
151,
71,
194,
7,
80,
186,
8,
130,
109,
187,
233,
250,
83,
39,
202,
39,
167,
61,
125,
191,
96,
142,
170,
156,
131,
4,
192,
185,
48,
199,
199,
37,
95,
116,
248,
166,
129,
54,
178,
198,
204,
206,
56,
19,
74,
202,
8,
165,
195,
226,
154,
6,
51,
138,
247,
79,
71,
86,
148,
230,
230,
251,
197,
88,
41,
190,
83,
10,
122,
114,
229,
56,
239,
113,
137,
228,
63,
149,
2,
100,
212,
121,
133,
245,
80,
196,
228,
204,
139,
62,
219,
96,
154,
54,
175,
249,
52,
77,
239,
238,
115,
125,
187,
162,
27,
190,
116,
195,
60,
163,
159,
220,
73,
202,
5,
191,
90,
160,
80,
141,
110,
221,
4,
192,
102,
134,
194,
169,
136,
172,
180,
74,
73,
153,
67,
75,
182,
54,
136,
183,
52,
143,
82,
89,
202,
132,
151,
80,
171,
21,
233,
52,
59,
112,
50,
147,
73,
38,
121,
31,
140,
146,
136,
164,
52,
138,
47,
82,
194,
10,
89,
162,
35,
142,
142,
157,
208,
113,
206,
3,
149,
14,
84,
6,
153,
139,
93,
1,
71,
15,
199,
161,
78,
146,
202,
235,
37,
124,
97,
125,
128,
220,
250,
244,
77,
124,
17,
249,
205,
93,
173,
244,
3,
2,
66,
45,
14,
260,
240,
68,
261,
111,
30,
178,
234,
83,
195,
181,
216,
67,
101,
148,
220,
60,
129,
223,
194,
175,
116,
134,
61,
183,
233,
72,
252,
198,
16,
20,
175,
139,
170,
145,
248,
1,
253,
92,
129,
138,
211,
168,
165,
259,
136,
19,
57,
214,
188,
185,
37,
49,
27,
251,
178,
69,
47,
2,
83,
58,
61,
140,
124,
60,
210,
103,
70,
131,
148,
255,
254,
234,
224,
133,
190,
114,
254,
89,
165,
141,
147,
69,
95,
195,
127,
160,
232,
58,
99
);

const FLREUnicodeAdditionalBlockLowerCaseHashMapSeedSize=24;
      FLREUnicodeAdditionalBlockLowerCaseHashMapValueSize=24;
      FLREUnicodeAdditionalBlockLowerCaseHashMapSize=24;

      FLREUnicodeAdditionalBlockLowerCaseHashMapSeedBits=8;

      FLREUnicodeAdditionalBlockLowerCaseHashMapSeeds:array[0..23] of shortint=(
0,
1,
-23,
0,
0,
1,
1,
-21,
-17,
-15,
-13,
-12,
2,
-10,
0,
-9,
-7,
-5,
-3,
1,
-1,
0,
6,
0
);

      FLREUnicodeAdditionalBlockLowerCaseHashMapKeys:array[0..23] of TFLRERawByteString=(
'isxmld',
'_xmld',
'is_xmlw',
'inxmli',
'in_xmlc',
'is_xmli',
'_xmli',
'isxmlc',
'xmlc',
'in_xmlw',
'inxmlc',
'in_xmli',
'inxmlw',
'inxmld',
'isxmli',
'in_xmld',
'xmld',
'xmli',
'is_xmlc',
'_xmlw',
'isxmlw',
'is_xmld',
'_xmlc',
'xmlw'
);

      FLREUnicodeAdditionalBlockLowerCaseHashMapValueBits=8;

      FLREUnicodeAdditionalBlockLowerCaseHashMapValues:array[0..23] of byte=(
1,
1,
3,
2,
0,
2,
2,
0,
0,
3,
0,
2,
3,
1,
2,
1,
1,
2,
0,
3,
3,
1,
0,
3
);

implementation
end.
